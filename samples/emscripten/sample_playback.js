var Module=typeof Module!=="undefined"?Module:{};if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;Module.finishedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){var loadPackage=function(metadata){function runWithFS(){Module["FS_createPath"]("/","media",true,true);var fileData0=[];fileData0.push.apply(fileData0,[1,111,122,122,45,115,107,101,108,101,116,111,110,0,2,0,0,0,67,0,0,0,170,3,0,0,72,105,112,115,0,80,101,108,118,105,115,0,83,112,105,110,101,0,83,112,105,110,101,49,0,83,112,105,110,101,50,0,83,112,105,110,101,51,0,78,101,99,107,0,72,101,97,100,0,66,105,112,48,49,32,72,101,97,100,78,117,98,0,76,101,102,116,83,104,111,117,108,100,101,114,0,76,101,102,116,65,114,109,0,76,101,102,116,70,111,114,101,65,114,109,0,76,101,102,116,104,97,110,100,0,76,101,102,116,72,97,110,100,84,104,117,109,98,49,0,76,101,102,116,72,97,110,100,84,104,117,109,98,50,0,76,101,102,116,72,97,110,100,84,104,117,109,98,51,0,66,105,112,48,49,32,76,32,70,105,110,103,101,114,48,78,117,98,0,76,101,102,116,72,97,110,100,73,110,100,101,120,49,0,76,101,102,116,72,97,110,100,73,110,100,101,120,50,0,76,101,102,116,72,97,110,100,73,110,100,101,120,51,0,66,105,112,48,49,32,76,32,70,105,110,103,101,114,49,78,117,98,0,76,101,102,116,72,97,110,100,77,105,100,100,108,101,49,0,76,101,102,116,72,97,110,100,77,105,100,100,108,101,50,0,76,101,102,116,72,97,110,100,77,105,100,100,108,101,51,0,66,105,112,48,49,32,76,32,70,105,110,103,101,114,50,78,117,98,0,76,101,102,116,72,97,110,100,82,105,110,103,49,0,76,101,102,116,72,97,110,100,82,105,110,103,50,0,76,101,102,116,72,97,110,100,82,105,110,103,51,0,66,105,112,48,49,32,76,32,70,105,110,103,101,114,51,78,117,98,0,76,101,102,116,72,97,110,100,82,105,110,103,80,105,110,107,121,49,0,76,101,102,116,72,97,110,100,82,105,110,103,80,105,110,107,121,50,0,76,101,102,116,72,97,110,100,82,105,110,103,80,105,110,107,121,51,0,66,105,112,48,49,32,76,32,70,105,110,103,101,114,52,78,117,98,0,82,105,103,104,116,83,104,111,117,108,100,101,114,0,82,105,103,104,116,65,114,109,0,82,105,103,104,116,70,111,114,101,65,114,109,0,82,105,103,104,116,72,97,110,100,0,82,105,103,104,116,72,97,110,100,84,104,117,109,98,49,0,82,105,103,104,116,72,97,110,100,84,104,117,109,98,50,0,82,105,103,104,116,72,97,110,100,84,104,117,109,98,51,0,66,105,112,48,49,32,82,32,70,105,110,103,101,114,48,78,117,98,0,82,105,103,104,116,72,97,110,100,73,110,100,101,120,49,0,82,105,103,104,116,72,97,110,100,73,110,100,101,120,50,0,82,105,103,104,116,72,97,110,100,73,110,100,101,120,51,0,66,105,112,48,49,32,82,32,70,105,110,103,101,114,49,78,117,98,0,82,105,103,104,116,72,97,110,100,77,105,100,100,108,101,49,0,82,105,103,104,116,72,97,110,100,77,105,100,100,108,101,50,0,82,105,103,104,116,72,97,110,100,77,105,100,100,108,101,51,0,66,105,112,48,49,32,82,32,70,105,110,103,101,114,50,78,117,98,0,82,105,103,104,116,72,97,110,100,82,105,110,103,49,0,82,105,103,104,116,72,97,110,100,82,105,110,103,50,0,82,105,103,104,116,72,97,110,100,82,105,110,103,51,0,66,105,112,48,49,32,82,32,70,105,110,103,101,114,51,78,117,98,0,82,105,103,104,116,72,97,110,100,80,105,110,107,121,49,0,82,105,103,104,116,72,97,110,100,80,105,110,107,121,50,0,82,105,103,104,116,72,97,110,100,80,105,110,107,121,51,0,66,105,112,48,49,32,82,32,70,105,110,103,101,114,52,78,117,98,0,76,101,102,116,85,112,76,101,103,0,76,101,102,116,76,101,103,0,76,101,102,116,70,111,111,116,0,76,101,102,116,70,111,111,116,84,104,117,109,98,49,0,66,105,112,48,49,32,76,32,84,111,101,48,78,117,98,0,82,105,103,104,116,85,112,76,101,103,0,82,105,103,104,116,76,101,103,0,82,105,103,104,116,70,111,111,116,0,82,105,103,104,116,70,111,111,116,84,104,117,109,98,49,0,66,105,112,48,49,32,82,32,84,111,101,48,78,117,98,0,255,255,0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,6,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,12,0,17,0,18,0,19,0,12,0,21,0,22,0,23,0,12,0,25,0,26,0,27,0,12,0,29,0,30,0,31,0,6,0,33,0,34,0,35,0,36,0,37,0,38,0,39,0,36,0,41,0,42,0,43,0,36,0,45,0,46,0,47,0,36,0,49,0,50,0,51,0,36,0,53,0,54,0,55,0,2,0,57,0,58,0,59,0,60,0,2,0,62,0,63,0,64,0,65,0,0,0,0,0,0,0,0,0,20,150,145,61,133,89,226,61,69,249,133,63,0,0,0,0,194,117,184,184,102,38,164,184,134,145,119,188,0,0,0,0,135,183,211,51,142,178,110,175,0,0,0,63,246,255,255,190,59,224,189,181,230,255,7,169,0,0,0,63,6,0,0,191,70,71,58,181,252,255,255,36,0,0,0,63,246,255,255,190,1,192,208,57,0,0,64,32,0,0,0,191,6,0,0,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,81,201,61,61,188,241,61,163,190,245,61,71,47,174,61,133,27,197,184,10,55,206,184,0,167,161,188,0,0,0,0,81,80,143,175,173,239,149,175,110,38,173,178,51,221,35,41,230,255,6,169,230,255,7,169,152,219,143,179,219,206,71,51,251,255,255,36,13,0,0,37,246,117,252,51,158,156,37,180,0,0,0,32,0,128,128,35,247,236,124,60,164,24,176,60,0,0,128,63,0,0,128,63,50,248,127,63,220,240,127,63,0,0,128,63,0,0,128,63,1,0,128,63,254,255,127,63,0,0,128,63,0,0,128,63,1,0,128,63,254,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,30,159,59,62,123,4,96,189,73,60,39,62,208,88,130,62,0,0,0,0,153,1,161,187,0,0,0,0,10,215,163,49,10,215,163,168,40,25,34,61,0,0,0,0,10,215,35,180,0,0,73,41,72,117,41,63,224,60,4,189,47,35,25,161,0,0,128,153,161,199,43,188,195,1,105,61,201,178,23,35,0,152,169,133,168,215,63,63,225,185,233,60,53,245,128,189,0,0,128,63,70,111,66,60,236,88,127,63,244,125,127,63,0,0,128,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,254,255,127,63,255,255,127,63,254,255,127,63,0,0,128,63,253,255,127,63,0,0,128,63,0,0,128,63,138,7,109,62,30,229,193,60,184,164,77,61,153,8,251,60,123,20,174,164,143,178,71,60,10,215,35,179,212,17,29,51,10,215,163,37,25,237,223,188,10,215,35,38,128,27,205,48,78,232,52,191,43,254,38,63,36,51,44,187,46,167,165,176,193,205,114,188,188,59,222,62,211,245,4,189,233,160,252,177,41,51,137,60,8,212,252,189,115,174,133,188,83,170,37,190,105,10,53,63,124,229,27,63,131,212,127,63,168,160,124,63,0,0,128,63,255,255,127,63,255,255,127,63,254,255,127,63,255,255,127,63,3,0,128,63,254,255,127,63,254,255,127,63,1,0,128,63,243,255,127,63,255,255,127,63,0,0,128,63,143,113,5,61,133,138,221,61,51,250,42,61,143,210,205,60,10,215,35,51,10,215,199,58,10,215,163,166,0,0,0,0,0,0,0,0,254,28,42,189,164,112,61,166,11,215,163,178,254,255,215,36,242,112,75,61,9,23,139,49,32,81,147,176,0,0,0,178,141,134,7,62,235,178,134,176,220,100,245,48,0,0,0,50,95,58,153,61,86,145,101,62,11,148,157,61,0,0,128,63,85,180,124,63,218,123,121,63,185,61,127,63,0,0,128,63,253,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,1,0,128,63,254,255,127,63,0,0,128,63,254,255,127,63,0,0,128,63,0,0,128,63,10,47,200,60,251,58,230,61,41,210,58,61,143,122,209,60,10,215,35,180,245,40,186,186,10,215,35,52,10,215,35,180,0,0,0,0,151,65,149,188,9,215,35,50,123,20,174,165,2,0,224,49,244,58,208,185,198,255,217,48,118,1,71,47,255,255,31,50,7,153,233,55,75,134,16,49,229,201,254,176,0,0,0,179,52,61,143,61,35,26,14,62,232,252,198,61,0,0,128,63,129,95,127,63,231,133,125,63,237,201,126,63,0,0,128,63,252,255,127,63,1,0,128,63,254,255,127,63,0,0,128,63,254,255,127,63,1,0,128,63,254,255,127,63,0,0,128,63,254,255,127,63,0,0,128,63,254,255,127,63,245,220,237,60,51,203,229,61,184,33,32,61,102,26,214,60,0,0,0,0,245,40,124,185,10,215,163,165,10,215,163,165,10,215,163,177,143,148,205,59,143,194,117,37,153,153,25,38,250,255,223,35,143,170,186,188,213,76,180,177,32,224,208,48,0,0,0,49,180,182,186,189,191,221,55,177,153,218,19,49,0,0,128,178,237,126,201,61,80,204,24,62,48,173,45,62,0,0,128,63,154,158,125,63,75,34,125,63,131,74,124,63,0,0,128,63,0,0,128,63,255,255,127,63,253,255,127,63,0,0,128,63,1,0,128,63,255,255,127,63,253,255,127,63,1,0,128,63,255,255,127,63,254,255,127,63,254,255,127,63,102,230,211,60,153,211,216,61,30,159,206,60,102,84,163,60,10,215,163,165,235,209,205,58,0,0,0,0,0,0,0,0,10,215,35,36,227,34,237,60,0,0,0,0,10,215,163,178,0,0,0,49,254,198,27,189,127,179,29,50,203,117,176,176,255,255,31,164,72,131,118,190,3,82,34,51,165,109,128,176,1,0,128,178,76,229,96,61,236,207,92,62,200,247,48,62,0,0,128,63,218,225,119,63,46,250,121,63,233,37,124,63,254,255,127,63,254,255,127,63,255,255,127,63,254,255,127,63,0,0,128,63,254,255,127,63,255,255,127,63,254,255,127,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,164,60,186,60,123,4,96,189,73,60,39,62,208,88,130,62,0,0,0,0,174,255,160,187,10,215,163,49,10,215,35,50,10,215,35,51,76,25,34,189,10,215,163,165,10,215,35,52,1,0,216,48,75,117,41,191,224,60,4,61,29,173,225,31,254,255,253,177,146,190,43,60,195,1,105,189,52,142,223,161,254,255,127,50,165,215,63,63,225,185,233,60,53,245,128,189,0,0,128,63,113,119,66,60,236,88,127,63,244,125,127,63,1,0,128,63,253,255,127,63,255,255,127,63,1,0,128,63,0,0,128,63,254,255,127,63,255,255,127,63,254,255,127,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,143,7,109,62,102,44,201,60,194,157,81,61,163,8,251,60,10,215,163,49,174,183,87,60,184,30,37,167,128,211,69,176,10,215,163,165,207,120,211,60,0,0,0,0,51,18,37,180,219,225,52,63,33,120,38,191,245,229,249,58,200,160,252,50,14,41,155,60,145,209,224,190,62,158,222,60,151,170,165,177,134,238,78,60,198,61,9,190,186,132,83,188,83,170,37,190,4,16,53,63,100,244,26,63,56,226,127,63,168,160,124,63,253,255,127,63,1,0,128,63,0,0,128,63,1,0,128,63,254,255,127,63,3,0,128,63,254,255,127,63,1,0,128,63,254,255,127,63,246,255,127,63,255,255,127,63,0,0,128,63,138,113,5,61,153,151,224,61,112,109,41,61,184,162,202,60,10,215,163,51,215,163,31,59,10,215,35,180,0,0,0,0,10,215,163,165,235,8,42,61,143,194,245,50,9,215,163,178,0,0,128,63,202,83,132,188,223,203,44,178,229,192,53,49,0,0,128,36,122,76,249,189,48,203,185,178,255,247,129,50,0,0,0,36,106,146,162,61,19,224,114,62,219,43,147,61,0,0,192,35,164,63,125,63,239,177,120,63,145,86,127,63,0,0,128,63,255,255,127,63,1,0,128,63,254,255,127,63,0,0,128,191,252,255,127,63,1,0,128,63,253,255,127,63,0,0,128,63,255,255,127,63,1,0,128,63,254,255,127,63,235,17,213,60,5,90,233,61,30,210,58,61,10,191,217,60,10,215,35,52,71,225,240,185,10,215,35,166,10,215,35,180,10,215,163,178,143,25,149,60,123,20,46,165,235,81,184,36,0,0,128,63,143,45,208,57,2,222,140,175,179,164,225,176,2,0,88,165,65,103,245,183,77,145,253,48,15,143,13,177,1,0,128,49,116,122,150,61,176,221,12,62,187,231,229,61,0,0,0,49,218,78,127,63,241,144,125,63,193,97,126,63,254,255,127,63,0,0,128,63,0,0,128,63,252,255,127,63,0,0,128,191,254,255,127,63,254,255,127,63,255,255,127,63,0,0,128,63,254,255,127,63,0,0,128,63,254,255,127,63,82,44,226,60,220,162,233,61,143,157,27,61,92,115,214,60,10,215,35,180,51,179,142,186,10,215,35,180,10,215,35,52,10,215,163,49,225,79,4,188,143,194,245,165,10,215,163,50,0,0,128,63,60,25,173,60,216,145,69,49,79,245,199,177,0,0,31,36,126,66,223,61,197,84,238,49,143,8,122,48,0,0,0,49,102,42,249,61,116,230,0,62,220,234,41,62,254,255,255,176,210,128,124,63,180,246,125,63,118,115,124,63,0,0,128,63,1,0,128,63,1,0,128,63,1,0,128,63,1,0,128,191,255,255,127,63,0,0,128,63,255,255,127,63,1,0,128,63,255,255,127,63,254,255,127,63,254,255,127,63,30,217,215,60,230,43,218,61,102,76,202,60,92,53,167,60,10,215,35,52,20,46,36,59,10,215,35,180,10,215,35,180,0,0,0,0,82,16,252,188,204,204,204,165,10,215,163,51,0,0,128,63,222,32,99,61,183,103,217,49,153,61,123,49,1,0,248,35,34,60,128,62,228,41,250,178,48,17,14,50,254,255,127,49,129,199,95,61,203,103,89,62,162,95,61,62,254,255,159,49,193,9,119,63,239,41,122,63,142,149,123,63,1,0,128,63,253,255,127,63,1,0,128,63,255,255,127,63,1,0,128,191,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,143,118,183,60,10,150,145,189,48,94,241,62,189,145,234,62,10,215,163,51,143,90,23,57,10,215,35,48,10,215,35,178,10,215,163,179,149,159,197,61,10,215,35,178,10,215,163,163,0,0,128,63,33,4,47,60,38,63,119,27,66,158,21,177,0,0,136,165,68,252,127,63,137,33,25,27,135,129,59,51,0,0,128,178,252,176,178,53,137,21,118,189,26,6,76,61,0,0,172,178,139,22,243,50,159,137,127,63,167,174,127,63,0,0,128,63,255,255,127,63,254,255,127,63,255,255,127,63,0,0,128,191,255,255,127,63,254,255,127,63,255,255,127,63,1,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,155,154,241,61,41,230,173,61,10,150,145,189,50,94,241,62,66,221,23,62,0,0,0,0,143,234,23,57,10,215,35,48,0,0,0,0,0,0,0,0,147,159,197,189,10,215,35,178,10,23,221,52,0,0,128,63,33,4,47,60,71,88,12,153,8,23,221,180,50,49,141,36,68,252,127,63,123,188,17,27,244,4,53,63,5,234,197,28,252,176,178,53,137,21,118,189,243,4,53,63,252,255,255,26,139,22,243,50,159,137,127,63,0,0,128,63,0,0,128,63,255,255,127,63,254,255,127,63,0,0,128,63,0,0,128,191,255,255,127,63,254,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,189,145,234,62,155,154,241,61,41,230,173,61,0,0,0,0,10,215,35,163,66,221,23,62,10,215,163,32,0,0,0,0,10,215,35,164,10,215,35,164,0,0,0,0,0,0,0,0,66,158,21,177,10,23,221,52,1,0,0,155,0,0,0,0,135,129,59,51,8,23,221,180,5,234,197,156,0,0,0,0,26,6,76,61,244,4,53,63,0,0,128,140,0,0,0,0,167,174,127,63,243,4,53,63,0,0,128,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63]);Module["FS_createDataFile"]("/media","skeleton.ozz",fileData0,true,true,false);var fileData1=[];fileData1.push.apply(fileData1,[1,111,122,122,45,97,110,105,109,97,116,105,111,110,0,6,0,0,0,154,153,9,65,67,0,0,0,9,0,0,0,217,0,0,0,29,12,0,0,136,0,0,0,99,114,111,115,115,97,114,109,115,0,0,0,0,0,0,0,0,40,60,174,171,0,0,0,0,1,0,0,128,0,128,2,0,0,0,0,0,2,0,141,44,192,133,31,0,0,0,0,0,3,0,19,47,33,133,23,128,0,0,0,0,4,0,75,46,40,134,47,128,0,0,0,0,5,0,142,47,112,134,61,128,0,0,0,0,6,0,174,47,13,165,37,0,0,0,0,0,7,0,113,45,0,0,0,128,0,0,0,0,8,0,221,49,0,0,0,0,0,0,0,0,9,0,11,171,2,24,10,41,0,0,0,0,10,0,58,49,0,0,2,0,0,0,0,0,11,0,19,52,0,128,0,0,0,0,0,0,12,0,104,51,1,0,1,128,0,0,0,0,13,0,15,38,62,34,255,166,0,0,0,0,14,0,109,42,0,0,1,128,0,0,0,0,15,0,216,39,1,128,0,0,0,0,0,0,16,0,44,40,1,0,0,0,0,0,0,0,17,0,236,46,63,22,81,169,0,0,0,0,18,0,88,41,1,128,1,0,0,0,0,0,19,0,111,38,1,0,0,0,0,0,0,0,20,0,65,38,3,128,1,128,0,0,0,0,21,0,50,47,209,149,170,164,0,0,0,0,22,0,215,41,0,128,0,128,0,0,0,0,23,0,140,38,1,128,1,0,0,0,0,0,24,0,111,39,1,128,0,0,0,0,0,0,25,0,46,47,225,139,109,30,0,0,0,0,26,0,1,41,0,128,0,0,0,0,0,0,27,0,177,38,0,0,0,0,0,0,0,0,28,0,159,38,1,0,0,0,0,0,0,0,29,0,199,46,110,22,105,39,0,0,0,0,30,0,117,38,0,0,0,0,0,0,0,0,31,0,27,37,1,0,1,128,0,0,0,0,32,0,210,37,1,128,1,128,0,0,0,0,33,0,254,170,168,28,22,169,0,0,0,0,34,0,58,49,0,128,2,0,0,0,0,0,35,0,19,52,1,0,1,0,0,0,0,0,36,0,104,51,0,0,1,0,0,0,0,0,37,0,73,38,190,34,156,38,0,0,0,0,38,0,141,42,1,128,0,128,0,0,0,0,39,0,216,39,1,0,1,0,0,0,0,0,40,0,44,40,1,0,0,128,0,0,0,0,41,0,5,47,253,24,80,41,0,0,0,0,42,0,75,41,1,0,1,0,0,0,0,0,43,0,85,38,2,128,1,128,0,0,0,0,44,0,169,38,3,0,0,128,0,0,0,0,45,0,75,47,135,143,169,36,0,0,0,0,46,0,215,41,0,0,0,128,0,0,0,0,47,0,206,38,3,128,1,0,0,0,0,0,48,0,17,39,3,128,1,0,0,0,0,0,49,0,77,47,118,148,34,160,0,0,0,0,50,0,221,40,2,128,1,128,0,0,0,0,51,0,180,38,0,0,0,0,0,0,0,0,52,0,191,38,2,0,0,0,0,0,0,0,53,0,209,46,33,25,225,167,0,0,0,0,54,0,82,38,0,0,0,0,0,0,0,0,55,0,58,37,2,128,0,128,0,0,0,0,56,0,188,37,1,0,1,128,0,0,0,0,57,0,215,172,152,158,240,45,0,0,0,0,58,0,139,55,0,0,0,128,0,0,0,0,59,0,85,55,0,0,0,0,0,0,0,0,60,0,141,47,191,48,0,128,0,0,0,0,61,0,111,45,0,0,0,0,0,0,0,0,62,0,58,172,82,153,102,174,0,0,0,0,63,0,139,55,0,0,0,128,0,0,0,0,64,0,85,55,0,0,0,0,0,0,0,0,65,0,141,47,191,48,0,0,0,0,0,0,66,0,111,45,0,128,0,0,0,0,0,0,67,0,0,0,0,0,0,0,93,210,150,61,0,0,206,164,35,60,38,166,0,0,128,63,1,0,0,128,0,128,2,0,0,0,128,63,2,0,141,44,192,133,31,0,0,0,128,63,3,0,19,47,33,133,23,128,0,0,128,63,4,0,75,46,40,134,47,128,0,0,128,63,5,0,142,47,112,134,61,128,0,0,128,63,6,0,174,47,13,165,37,0,0,0,128,63,7,0,113,45,0,0,0,128,0,0,128,63,8,0,221,49,0,0,0,0,0,0,128,63,9,0,11,171,2,24,10,41,0,0,128,63,10,0,58,49,0,0,2,0,0,0,128,63,11,0,19,52,0,128,0,0,0,0,128,63,12,0,104,51,1,0,1,128,0,0,128,63,13,0,15,38,62,34,255,166,0,0,128,63,14,0,109,42,0,0,1,128,61,222,16,63,15,0,216,39,2,128,1,0,8,123,66,62,16,0,44,40,1,0,0,0,0,0,128,63,17,0,236,46,63,22,81,169,0,0,128,63,18,0,88,41,1,128,1,0,0,0,128,63,19,0,111,38,1,0,0,0,0,0,128,63,20,0,65,38,3,128,1,128,0,0,128,63,21,0,50,47,209,149,170,164,0,0,128,63,22,0,215,41,0,128,0,128,0,0,128,63,23,0,140,38,1,128,1,0,0,0,128,63,24,0,111,39,1,128,0,0,0,0,128,63,25,0,46,47,225,139,109,30,0,0,128,63,26,0,1,41,0,128,0,0,0,0,128,63,27,0,177,38,0,0,0,0,251,126,192,62,28,0,159,38,1,128,2,0,0,0,128,63,29,0,199,46,110,22,105,39,0,0,128,63,30,0,117,38,0,0,0,0,0,0,128,63,31,0,27,37,1,0,1,128,0,0,128,63,32,0,210,37,1,128,1,128,0,0,128,63,33,0,254,170,168,28,22,169,0,0,128,63,34,0,58,49,0,128,2,0,0,0,128,63,35,0,19,52,1,0,1,0,0,0,128,63,36,0,104,51,0,0,1,0,0,0,128,63,37,0,73,38,190,34,156,38,0,0,128,63,38,0,141,42,1,128,0,128,0,0,128,63,39,0,216,39,1,0,1,0,132,59,98,62,40,0,44,40,1,0,0,0,0,0,128,63,41,0,5,47,253,24,80,41,0,0,128,63,42,0,75,41,1,0,1,0,166,168,43,63,43,0,85,38,1,128,2,0,243,3,126,62,44,0,169,38,4,0,0,0,0,0,128,63,45,0,75,47,135,143,169,36,0,0,128,63,46,0,215,41,0,0,0,128,217,146,54,62,47,0,206,38,0,0,0,0,53,226,14,63,48,0,17,39,2,128,0,0,0,0,128,63,49,0,77,47,118,148,34,160,0,0,128,63,50,0,221,40,2,128,1,128,143,180,37,63,51,0,180,38,1,0,4,0,76,214,20,63,52,0,191,38,4,0,2,0,0,0,128,63,53,0,209,46,33,25,225,167,0,0,128,63,54,0,82,38,0,0,0,0,0,0,128,63,55,0,58,37,2,128,0,128,8,123,66,62,56,0,188,37,1,0,1,128,157,178,166,61,57,0,220,172,97,146,240,45,0,0,128,63,58,0,139,55,0,0,0,128,0,0,128,63,59,0,85,55,0,0,0,0,0,0,128,63,60,0,141,47,191,48,0,128,0,0,128,63,61,0,111,45,0,0,0,0,157,178,166,61,62,0,59,172,222,24,102,174,0,0,128,63,63,0,139,55,0,0,0,128,0,0,128,63,64,0,85,55,0,0,0,0,0,0,128,63,65,0,141,47,191,48,0,0,0,0,128,63,66,0,111,45,0,128,0,0,0,0,128,63,67,0,0,0,0,0,0,0,94,83,214,61,0,0,25,166,34,60,163,163,221,19,246,61,57,0,220,172,186,16,240,45,252,3,254,61,62,0,58,172,125,27,102,174,76,218,18,62,0,0,222,166,34,60,25,162,54,99,78,62,57,0,221,172,251,19,238,45,132,59,98,62,62,0,53,172,58,28,105,174,23,115,70,62,0,0,62,166,34,60,205,162,39,103,76,63,47,0,206,38,1,128,4,0,0,0,128,63,16,0,44,40,1,0,0,0,22,242,6,63,56,0,188,37,1,0,2,128,25,242,134,62,0,0,149,162,34,60,232,164,71,218,146,62,57,0,229,172,121,16,232,45,79,214,148,62,40,0,44,40,2,0,0,0,71,218,146,62,62,0,47,172,21,28,108,174,104,200,27,63,44,0,169,38,1,0,2,0,111,198,156,62,0,0,40,153,34,60,254,165,157,174,168,62,57,0,218,172,67,1,241,45,150,178,166,62,62,0,58,172,189,26,102,174,111,198,156,62,40,0,44,40,0,0,0,0,157,174,168,62,0,0,196,33,35,60,2,167,119,192,31,63,40,0,44,40,2,0,0,0,235,134,188,62,62,0,86,172,173,22,83,174,19,115,198,62,0,0,75,43,37,60,146,169,3,123,194,62,57,0,184,172,155,148,12,46,237,3,254,62,62,0,198,172,182,157,255,173,76,214,20,63,28,0,159,38,1,0,2,0,167,39,236,62,57,0,108,172,62,154,68,46,65,91,210,62,0,0,102,44,37,60,40,170,151,47,232,62,0,0,57,45,39,60,49,171,237,3,254,62,0,0,188,45,40,60,210,171,6,250,2,63,57,0,66,172,154,153,97,46,26,240,7,63,0,0,26,46,40,60,136,171,18,244,5,63,62,0,215,172,152,158,240,173,26,240,7,63,57,0,55,172,222,152,104,46,34,236,9,63,62,0,221,172,13,158,235,173,55,95,80,63,56,0,188,37,1,0,2,128,65,220,17,63,0,0,150,46,39,60,39,170,45,230,12,63,57,0,53,172,126,147,106,46,57,224,15,63,62,0,223,172,250,154,236,173,80,212,21,63,57,0,58,172,28,25,102,46,178,162,46,63,48,0,17,39,2,128,4,0,80,212,21,63,62,0,220,172,170,146,239,173,0,0,128,63,15,0,216,39,2,128,1,0,127,188,33,63,0,0,52,47,36,60,52,166,127,188,33,63,28,0,159,38,0,0,4,128,0,0,128,63,52,0,191,38,4,0,2,0,112,196,29,63,57,0,58,172,136,27,102,46,108,198,28,63,62,0,220,172,105,14,240,173,119,192,31,63,44,0,169,38,2,0,0,0,166,168,43,63,62,0,220,172,14,19,240,173,201,150,52,63,57,0,55,172,73,28,103,46,0,0,128,63,40,0,44,40,2,0,0,0,205,148,53,63,44,0,169,38,3,0,2,0,162,170,42,63,0,0,60,47,34,60,103,163,155,174,40,63,28,0,159,38,0,0,0,0,0,0,128,63,51,0,180,38,1,0,4,0,0,0,128,63,28,0,159,38,0,0,0,0,194,154,50,63,0,0,240,46,34,60,218,161,0,0,128,63,43,0,85,38,1,128,2,0,24,111,72,63,62,0,230,172,87,16,231,173,198,152,51,63,48,0,17,39,2,128,0,0,233,134,60,63,0,0,38,46,34,60,190,162,0,0,128,63,48,0,17,39,2,128,0,0,20,113,71,63,57,0,46,172,67,28,109,46,27,109,73,63,44,0,169,38,3,0,2,0,74,85,85,63,0,0,173,42,35,60,31,167,59,93,81,63,57,0,54,172,67,27,104,46,66,89,83,63,62,0,220,172,231,1,240,173,0,0,128,63,44,0,169,38,3,0,2,0,0,0,128,63,47,0,206,38,1,128,4,0,0,0,128,63,56,0,188,37,1,0,2,128,102,71,92,63,57,0,81,172,70,24,87,46,117,63,96,63,62,0,186,172,41,147,10,174,141,51,102,63,0,0,224,33,36,60,228,169,164,39,108,63,57,0,139,172,68,148,46,46,219,15,120,63,62,0,93,172,90,153,78,174,190,27,114,63,0,0,182,28,38,60,191,170,229,11,122,63,57,0,192,172,145,156,4,46,0,0,128,63,0,0,75,14,40,60,157,171,0,0,128,63,62,0,62,172,81,153,99,174,0,0,128,63,57,0,212,172,83,158,242,45,0,0,0,0,0,0,2,1,9,167,240,163,232,82,0,0,0,0,1,0,1,1,179,165,179,165,183,90,0,0,0,0,2,0,3,0,88,254,140,4,22,250,0,0,0,0,3,0,3,0,140,1,153,1,26,1,0,0,0,0,4,0,3,0,170,2,210,1,212,1,0,0,0,0,5,0,3,0,86,3,170,0,50,2,0,0,0,0,6,0,3,0,2,253,52,0,61,16,0,0,0,0,7,0,3,0,217,6,19,254,33,251,0,0,0,0,8,0,3,0,0,0,0,0,0,0,0,0,0,0,9,0,2,0,206,112,251,246,171,13,0,0,0,0,10,0,3,0,223,1,184,101,18,11,0,0,0,0,11,0,3,0,0,0,0,0,63,227,0,0,0,0,12,0,3,0,190,143,186,2,10,2,0,0,0,0,13,0,3,0,13,119,112,60,91,249,0,0,0,0,14,0,3,0,0,0,0,0,111,31,0,0,0,0,15,0,3,0,0,0,0,0,223,27,0,0,0,0,16,0,3,0,0,0,0,0,0,0,0,0,0,0,17,0,3,0,2,11,168,8,78,39,0,0,0,0,18,0,3,0,0,0,0,0,71,31,0,0,0,0,19,0,3,0,0,0,0,0,207,30,0,0,0,0,20,0,3,0,0,0,0,0,0,0,0,0,0,0,21,0,3,0,89,255,22,254,68,60,0,0,0,0,22,0,3,0,0,0,0,0,94,51,0,0,0,0,23,0,3,0,0,0,0,0,252,19,0,0,0,0,24,0,3,0,0,0,0,0,0,0,0,0,0,0,25,0,3,0,187,249,165,254,21,53,0,0,0,0,26,0,3,0,0,0,0,0,153,59,0,0,0,0,27,0,3,0,0,0,0,0,168,44,0,0,0,0,28,0,3,0,0,0,0,0,0,0,0,0,0,0,29,0,3,0,185,0,164,9,107,29,0,0,0,0,30,0,3,0,0,0,0,0,130,90,0,0,0,0,31,0,3,0,0,0,0,0,225,18,0,0,0,0,32,0,3,0,0,0,0,0,0,0,0,0,0,0,33,0,2,0,249,142,88,4,102,17,0,0,0,0,34,0,3,0,38,245,219,156,2,6,0,0,0,0,35,0,3,0,0,0,0,0,215,226,0,0,0,0,36,0,3,0,32,120,220,249,148,255,0,0,0,0,37,0,3,0,55,137,120,194,114,247,0,0,0,0,38,0,3,0,0,0,0,0,111,31,0,0,0,0,39,0,3,0,0,0,0,0,223,27,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,3,0,52,251,99,248,155,40,0,0,0,0,42,0,3,0,0,0,0,0,71,31,0,0,0,0,43,0,3,0,0,0,0,0,207,30,0,0,0,0,44,0,0,1,0,0,0,0,0,0,0,0,0,0,45,0,3,0,165,0,235,1,223,60,0,0,0,0,46,0,3,0,0,0,0,0,94,51,0,0,0,0,47,0,3,0,0,0,0,0,252,19,0,0,0,0,48,0,0,1,0,0,0,0,0,0,0,0,0,0,49,0,3,0,244,6,147,4,27,57,0,0,0,0,50,0,3,0,0,0,0,0,153,59,0,0,0,0,51,0,3,0,0,0,0,0,168,44,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,3,0,124,12,116,31,82,25,0,0,0,0,54,0,3,0,0,0,0,0,130,90,0,0,0,0,55,0,3,0,0,0,0,0,225,18,0,0,0,0,56,0,0,1,0,0,0,0,0,0,0,0,0,0,57,0,1,1,67,246,84,223,64,10,0,0,0,0,58,0,3,0,0,0,0,0,170,225,0,0,0,0,59,0,3,0,252,242,40,250,225,12,0,0,0,0,60,0,2,0,0,0,0,0,255,127,0,0,0,0,61,0,0,1,0,0,0,0,0,0,0,0,0,0,62,0,1,1,43,10,139,14,16,4,0,0,0,0,63,0,3,0,0,0,0,0,165,248,0,0,0,0,64,0,3,0,2,13,159,253,95,11,0,0,0,0,65,0,2,0,0,0,0,0,255,127,0,0,0,0,66,0,3,0,0,0,0,0,0,0,0,0,0,0,67,0,3,0,0,0,0,0,0,0,248,3,126,60,0,0,2,1,41,165,54,164,214,83,123,194,30,61,1,0,1,1,180,165,180,165,183,90,121,67,222,60,2,0,3,0,103,254,146,4,109,252,8,123,66,62,3,0,3,0,142,1,155,1,26,1,70,91,82,62,4,0,3,0,186,2,221,1,212,1,8,123,66,62,5,0,3,0,90,3,171,0,50,2,186,162,46,61,6,0,3,0,2,253,52,0,61,16,250,130,190,60,7,0,3,0,161,3,42,254,190,252,0,0,128,63,8,0,3,0,0,0,0,0,0,0,248,3,254,59,9,0,2,0,35,114,228,247,109,14,248,3,254,59,10,0,3,0,205,6,249,100,46,0,248,3,254,59,11,0,3,0,0,0,0,0,85,211,248,3,254,59,12,0,3,0,239,141,244,5,117,4,251,130,62,60,13,0,3,0,163,120,127,54,173,250,250,130,190,60,14,0,3,0,0,0,0,0,72,26,248,3,254,60,15,0,3,0,0,0,0,0,200,21,0,0,128,63,16,0,3,0,0,0,0,0,0,0,250,130,62,61,17,0,3,0,198,10,146,4,213,42,248,3,126,60,18,0,3,0,0,0,0,0,195,28,60,226,14,61,19,0,3,0,0,0,0,0,173,25,0,0,128,63,20,0,3,0,0,0,0,0,0,0,248,3,254,60,21,0,3,0,4,255,37,252,248,59,250,130,190,60,22,0,3,0,0,0,0,0,7,45,121,67,222,60,23,0,3,0,0,0,0,0,39,16,0,0,128,63,24,0,3,0,0,0,0,0,0,0,60,226,14,61,25,0,3,0,94,248,53,254,175,50,248,3,126,60,26,0,3,0,0,0,0,0,11,54,186,162,46,61,27,0,3,0,0,0,0,0,206,35,0,0,128,63,28,0,3,0,0,0,0,0,0,0,123,194,158,60,29,0,3,0,192,0,101,13,174,32,251,130,62,60,30,0,3,0,0,0,0,0,140,83,248,3,254,60,31,0,3,0,0,0,0,0,190,14,0,0,128,63,32,0,3,0,0,0,0,0,0,0,248,3,254,59,33,0,2,0,224,141,181,3,253,17,248,3,254,59,34,0,3,0,204,236,113,160,198,252,248,3,126,60,35,0,3,0,0,0,0,0,246,204,248,3,254,59,36,0,3,0,196,120,179,248,153,253,251,130,62,60,37,0,3,0,26,140,37,197,95,248,123,194,158,60,38,0,3,0,0,0,0,0,6,26,123,194,158,60,39,0,3,0,0,0,0,0,17,23,0,0,128,63,40,0,0,0,0,0,0,0,0,0,251,130,62,60,41,0,3,0,183,245,3,249,9,41,248,3,254,60,42,0,3,0,0,0,0,0,133,24,123,194,158,60,43,0,3,0,0,0,0,0,227,24,0,0,128,63,44,0,0,1,0,0,0,0,0,0,251,130,62,60,45,0,3,0,19,253,219,0,31,57,251,130,62,60,46,0,3,0,0,0,0,0,163,46,121,67,222,60,47,0,3,0,0,0,0,0,27,13,0,0,128,63,48,0,0,1,0,0,0,0,0,0,250,130,190,60,49,0,3,0,125,2,187,0,142,45,251,130,62,60,50,0,3,0,0,0,0,0,135,53,93,210,150,61,51,0,3,0,0,0,0,0,127,44,0,0,128,63,52,0,0,0,0,0,0,0,0,0,251,130,62,60,53,0,3,0,162,6,173,27,69,20,248,3,254,59,54,0,3,0,0,0,0,0,163,84,123,194,30,61,55,0,3,0,0,0,0,0,99,16,0,0,128,63,56,0,0,1,0,0,0,0,0,0,251,130,62,60,57,0,1,1,137,246,61,223,27,10,121,67,222,60,58,0,3,0,0,0,0,0,97,225,123,194,158,60,59,0,3,0,149,246,223,249,76,13,40,234,138,62,60,0,3,0,0,0,0,0,255,127,0,0,128,63,61,0,0,1,0,0,0,0,0,0,248,3,254,59,62,0,1,1,13,10,118,14,242,3,251,130,62,60,63,0,3,0,0,0,0,0,1,247,251,130,62,60,64,0,3,0,43,15,154,253,244,12,60,226,14,61,65,0,3,0,9,0,251,255,250,127,0,0,128,63,66,0,3,0,0,0,0,0,0,0,0,0,128,63,67,0,3,0,0,0,0,0,0,0,248,3,254,60,9,0,2,0,24,118,101,250,174,16,248,3,126,60,10,0,3,0,204,11,180,99,206,244,248,3,126,60,11,0,3,0,0,0,0,0,205,194,248,3,126,60,12,0,3,0,36,140,101,9,28,7,60,226,14,61,33,0,2,0,34,138,143,1,27,20,123,194,158,60,34,0,3,0,112,224,250,166,69,239,250,130,190,60,36,0,3,0,110,122,148,246,83,249,250,130,190,60,54,0,3,0,0,0,0,0,241,72,123,194,158,60,62,0,1,1,50,10,97,14,214,3,250,130,190,60,13,0,3,0,8,122,168,48,248,251,248,3,254,60,30,0,3,0,0,0,0,0,235,71,250,130,190,60,37,0,3,0,9,143,209,199,72,249,121,67,222,60,41,0,3,0,142,238,213,249,137,41,250,130,190,60,45,0,3,0,152,249,209,255,105,53,121,67,222,60,46,0,3,0,0,0,0,0,101,40,121,67,222,60,50,0,3,0,0,0,0,0,125,45,250,130,190,60,53,0,3,0,233,0,237,23,76,15,123,194,30,61,57,0,1,1,62,247,17,223,6,10,250,130,190,60,63,0,3,0,0,0,0,0,228,245,248,3,254,60,64,0,3,0,235,18,127,253,45,15,250,130,62,61,0,0,0,1,214,164,202,165,155,85,250,130,190,60,10,0,3,0,168,16,211,97,67,233,250,130,190,60,11,0,3,0,0,0,0,0,117,178,250,130,190,60,12,0,3,0,106,138,234,12,217,9,250,130,62,61,18,0,3,0,0,0,0,0,183,23,248,3,254,60,26,0,3,0,0,0,0,0,142,48,250,130,190,60,35,0,3,0,0,0,0,0,83,194,123,194,30,61,29,0,3,0,198,0,28,17,230,35,250,130,190,60,34,0,3,0,120,220,111,169,194,234,60,226,14,61,38,0,3,0,0,0,0,0,146,21,60,226,14,61,39,0,3,0,0,0,0,0,29,19,60,226,14,61,43,0,3,0,0,0,0,0,2,20,248,3,254,60,59,0,3,0,218,248,174,249,140,13,250,130,190,60,62,0,1,1,79,10,90,14,209,3,186,162,46,61,7,0,3,0,241,0,76,254,10,254,248,3,254,60,10,0,3,0,49,21,80,95,225,221,248,3,254,60,11,0,3,0,0,0,0,0,8,163,60,226,14,61,12,0,3,0,8,136,14,18,207,13,123,194,30,61,13,0,3,0,175,123,171,40,186,253,186,162,46,61,14,0,3,0,0,0,0,0,240,21,186,162,46,61,22,0,3,0,0,0,0,0,168,39,248,3,254,60,34,0,3,0,235,212,188,174,146,225,248,3,254,60,35,0,3,0,0,0,0,0,221,183,121,67,222,60,36,0,3,0,195,122,4,246,79,248,60,226,14,61,37,0,3,0,58,146,174,202,61,250,60,226,14,61,45,0,3,0,242,245,186,254,120,49,60,226,14,61,49,0,3,0,43,0,189,254,119,39,248,3,254,60,53,0,3,0,246,252,79,21,216,11,248,3,254,60,54,0,3,0,0,0,0,0,193,66,186,162,46,61,62,0,1,1,64,11,59,14,220,3,60,226,14,61,63,0,3,0,0,0,0,0,58,245,60,226,14,61,2,0,3,0,107,254,147,4,32,253,121,67,94,61,23,0,3,0,0,0,0,0,34,12,248,3,254,60,36,0,3,0,0,123,108,245,90,247,123,194,30,61,41,0,3,0,203,232,129,250,228,41,123,194,30,61,46,0,3,0,0,0,0,0,82,35,186,162,46,61,47,0,3,0,0,0,0,0,217,8,123,194,30,61,50,0,3,0,0,0,0,0,237,38,28,242,134,61,58,0,3,0,0,0,0,0,252,224,250,130,62,61,9,0,2,0,152,120,28,252,91,18,123,194,30,61,10,0,3,0,64,25,49,92,250,210,123,194,30,61,11,0,3,0,0,0,0,0,36,149,121,67,94,61,15,0,3,0,0,0,0,0,241,16,123,194,30,61,21,0,3,0,239,254,167,251,229,59,186,162,46,61,26,0,3,0,0,0,0,0,69,44,123,194,30,61,30,0,3,0,0,0,0,0,12,67,121,67,94,61,31,0,3,0,0,0,0,0,118,11,123,194,30,61,34,0,3,0,17,206,133,180,2,216,186,162,46,61,35,0,3,0,0,0,0,0,141,168,123,194,30,61,36,0,3,0,27,123,18,244,179,245,186,162,46,61,42,0,3,0,0,0,0,0,190,21,123,194,30,61,53,0,3,0,196,248,129,18,42,8,60,226,14,61,54,0,3,0,0,0,0,0,124,63,121,67,94,61,59,0,3,0,85,253,70,249,1,14,57,99,78,61,64,0,3,0,167,22,82,253,186,16,61,226,142,61,2,0,3,0,123,254,154,4,16,0,123,194,30,61,12,0,3,0,77,135,170,19,5,15,186,162,46,61,19,0,3,0,0,0,0,0,127,24,57,99,78,61,25,0,3,0,186,247,0,254,144,49,250,130,62,61,33,0,2,0,126,136,148,0,38,21,186,162,46,61,37,0,3,0,150,148,195,204,237,250,186,162,46,61,38,0,3,0,0,0,0,0,39,19,250,130,62,61,39,0,3,0,0,0,0,0,195,15,186,162,46,61,43,0,3,0,0,0,0,0,92,17,186,162,46,61,45,0,3,0,88,243,244,253,160,46,186,162,46,61,49,0,3,0,129,254,81,253,19,35,186,162,46,61,54,0,3,0,0,0,0,0,153,56,57,99,78,61,63,0,3,0,0,0,0,0,239,244,232,138,58,62,65,0,2,0,5,0,250,255,254,127,28,242,134,61,1,0,1,1,181,165,181,165,184,90,250,130,62,61,10,0,3,0,178,28,140,88,219,200,250,130,62,61,11,0,3,0,0,0,0,0,63,137,250,130,62,61,12,0,3,0,243,133,161,22,44,17,57,99,78,61,13,0,3,0,207,124,63,34,33,255,28,242,134,61,21,0,3,0,154,254,185,249,155,59,121,67,94,61,29,0,3,0,204,0,79,20,168,38,250,130,62,61,30,0,3,0,0,0,0,0,240,61,186,162,46,61,34,0,3,0,233,202,142,183,48,211,186,162,46,61,36,0,3,0,11,123,121,243,193,244,250,130,62,61,41,0,3,0,142,228,1,251,32,42,186,162,46,61,46,0,3,0,0,0,0,0,140,33,186,162,46,61,50,0,3,0,0,0,0,0,161,36,186,162,46,61,53,0,3,0,155,246,15,17,67,6,57,99,78,61,55,0,3,0,0,0,0,0,110,15,61,226,142,61,57,0,1,1,217,247,243,222,25,10,64,222,144,62,6,0,3,0,2,253,52,0,61,16,248,3,126,61,7,0,3,0,81,254,104,254,1,255,184,35,110,61,14,0,3,0,0,0,0,0,34,18,248,3,126,61,19,0,3,0,0,0,0,0,71,21,121,67,94,61,22,0,3,0,0,0,0,0,40,36,121,67,94,61,26,0,3,0,0,0,0,0,171,39,184,35,110,61,27,0,3,0,0,0,0,0,63,32,250,130,62,61,34,0,3,0,34,200,196,186,232,205,250,130,62,61,35,0,3,0,0,0,0,0,111,163,250,130,62,61,36,0,3,0,135,122,109,242,136,244,250,130,62,61,37,0,3,0,239,149,242,205,82,251,250,130,62,61,38,0,3,0,0,0,0,0,202,17,250,130,62,61,42,0,3,0,0,0,0,0,176,20,250,130,62,61,43,0,3,0,0,0,0,0,222,15,250,130,62,61,45,0,3,0,226,241,131,253,3,45,250,130,62,61,46,0,3,0,0,0,0,0,142,31,250,130,62,61,47,0,3,0,0,0,0,0,158,7,250,130,62,61,49,0,3,0,147,253,131,252,151,32,250,130,62,61,50,0,3,0,0,0,0,0,12,34,250,130,62,61,53,0,3,0,52,244,107,15,36,4,250,130,62,61,54,0,3,0,0,0,0,0,174,52,121,67,94,61,62,0,1,1,254,11,43,14,248,3,121,67,94,61,0,0,0,1,3,165,2,167,9,86,184,35,110,61,9,0,2,0,84,122,142,253,213,19,57,99,78,61,10,0,3,0,42,30,144,86,46,196,57,99,78,61,11,0,3,0,0,0,0,0,37,132,57,99,78,61,12,0,3,0,84,133,244,23,20,18,248,3,126,61,17,0,3,0,174,10,9,3,38,44,248,3,126,61,18,0,3,0,0,0,0,0,221,20,57,99,78,61,30,0,3,0,0,0,0,0,68,59,248,3,126,61,33,0,2,0,219,133,205,254,27,23,121,67,94,61,34,0,3,0,91,196,225,193,171,192,57,99,78,61,35,0,3,0,0,0,0,0,244,157,57,99,78,61,36,0,3,0,6,121,17,240,72,246,57,99,78,61,37,0,3,0,159,151,106,207,206,251,57,99,78,61,38,0,3,0,0,0,0,0,28,16,121,67,94,61,39,0,3,0,0,0,0,0,158,12,57,99,78,61,41,0,3,0,206,225,85,251,67,42,121,67,94,61,42,0,3,0,0,0,0,0,239,17,57,99,78,61,43,0,3,0,0,0,0,0,7,14,57,99,78,61,45,0,3,0,21,240,249,252,4,43,57,99,78,61,46,0,3,0,0,0,0,0,24,29,57,99,78,61,47,0,3,0,0,0,0,0,25,6,57,99,78,61,49,0,3,0,109,252,135,251,133,29,57,99,78,61,50,0,3,0,0,0,0,0,219,30,57,99,78,61,53,0,3,0,63,241,101,13,133,1,57,99,78,61,54,0,3,0,0,0,0,0,210,47,121,67,94,61,10,0,3,0,110,31,131,84,203,191,121,67,94,61,11,0,2,1,0,0,0,0,163,127,121,67,94,61,12,0,3,0,189,132,39,25,218,18,184,35,110,61,13,0,3,0,128,125,169,29,32,0,28,242,134,61,25,0,3,0,1,247,198,253,75,48,184,35,110,61,30,0,3,0,0,0,0,0,172,53,184,35,110,61,35,0,3,0,0,0,0,0,245,146,121,67,94,61,36,0,3,0,219,118,92,237,146,248,121,67,94,61,37,0,3,0,137,153,16,209,87,252,121,67,94,61,38,0,3,0,0,0,0,0,62,14,121,67,94,61,41,0,3,0,194,222,178,251,104,42,121,67,94,61,43,0,3,0,0,0,0,0,251,11,121,67,94,61,45,0,3,0,23,238,96,252,201,40,121,67,94,61,46,0,3,0,0,0,0,0,90,26,121,67,94,61,47,0,3,0,0,0,0,0,105,4,121,67,94,61,49,0,3,0,38,251,111,250,25,26,121,67,94,61,50,0,3,0,0,0,0,0,76,27,121,67,94,61,53,0,3,0,246,237,37,11,154,254,121,67,94,61,54,0,3,0,0,0,0,0,95,42,248,3,126,61,55,0,3,0,0,0,0,0,25,14,248,3,126,61,63,0,3,0,0,0,0,0,30,245,248,3,126,61,64,0,3,0,191,24,45,253,99,17,28,242,134,61,0,0,0,1,75,165,185,168,171,86,184,35,110,61,10,0,3,0,131,32,106,82,190,187,184,35,110,61,11,0,2,1,0,0,0,0,153,123,184,35,110,61,12,0,3,0,49,132,56,26,124,19,28,242,134,61,15,0,3,0,0,0,0,0,37,14,248,3,126,61,22,0,3,0,0,0,0,0,163,33,28,242,134,61,23,0,3,0,0,0,0,0,33,10,248,3,126,61,26,0,3,0,0,0,0,0,89,36,248,3,126,61,29,0,3,0,207,0,12,22,39,40,28,242,134,61,31,0,3,0,0,0,0,0,145,9,248,3,126,61,34,0,3,0,75,195,78,201,49,178,184,35,110,61,36,0,3,0,249,115,130,234,73,251,248,3,126,61,37,0,3,0,209,157,182,212,131,253,248,3,126,61,38,0,3,0,0,0,0,0,40,10,248,3,126,61,39,0,3,0,0,0,0,0,255,8,248,3,126,61,41,0,3,0,35,216,127,252,173,42,248,3,126,61,42,0,3,0,0,0,0,0,196,14,248,3,126,61,43,0,3,0,0,0,0,0,130,7,248,3,126,61,45,0,3,0,194,233,20,251,225,35,248,3,126,61,46,0,3,0,0,0,0,0,90,20,248,3,126,61,47,0,3,0,0,0,0,0,185,0,248,3,126,61,49,0,3,0,95,248,15,248,150,18,248,3,126,61,50,0,3,0,0,0,0,0,127,19,248,3,126,61,53,0,3,0,218,230,50,6,62,248,184,35,110,61,54,0,3,0,0,0,0,0,82,36,61,226,142,61,59,0,3,0,11,0,6,249,46,14,157,178,166,61,62,0,1,1,180,13,19,14,79,4,61,226,142,61,9,0,2,0,9,124,77,255,164,21,248,3,126,61,10,0,3,0,99,33,65,80,7,184,248,3,126,61,11,0,2,1,0,0,0,0,3,120,248,3,126,61,12,0,3,0,170,131,28,27,236,19,248,3,126,61,13,0,3,0,214,125,54,27,168,0,28,242,134,61,14,0,3,0,0,0,0,0,247,15,61,226,142,61,27,0,3,0,0,0,0,0,22,29,248,3,126,61,30,0,3,0,0,0,0,0,171,50,248,3,126,61,35,0,3,0,0,0,0,0,237,141,248,3,126,61,36,0,3,0,50,113,0,233,211,251,248,3,126,61,54,0,3,0,0,0,0,0,88,30,61,226,142,61,7,0,3,0,77,253,109,254,62,255,28,242,134,61,10,0,3,0,9,34,8,78,173,180,28,242,134,61,11,0,2,1,0,0,0,0,12,117,28,242,134,61,12,0,3,0,38,131,201,27,28,20,28,242,134,61,13,0,3,0,43,126,141,24,60,1,125,194,158,61,17,0,3,0,144,10,19,1,210,45,93,210,150,61,18,0,3,0,0,0,0,0,55,18,61,226,142,61,19,0,3,0,0,0,0,0,186,19,61,226,142,61,22,0,3,0,0,0,0,0,186,30,61,226,142,61,26,0,3,0,0,0,0,0,130,32,61,226,142,61,29,0,3,0,211,0,11,24,223,41,28,242,134,61,30,0,3,0,0,0,0,0,103,47,28,242,134,61,33,0,2,0,90,133,107,254,137,23,61,226,142,61,34,0,3,0,149,195,95,207,75,167,28,242,134,61,35,0,3,0,0,0,0,0,226,137,61,226,142,61,36,0,3,0,109,110,94,239,2,239,28,242,134,61,37,0,3,0,159,159,59,214,254,253,93,210,150,61,38,0,3,0,0,0,0,0,81,5,93,210,150,61,39,0,3,0,0,0,0,0,182,4,28,242,134,61,41,0,3,0,111,213,211,252,197,42,93,210,150,61,42,0,3,0,0,0,0,0,3,11,61,226,142,61,43,0,3,0,0,0,0,0,246,3,28,242,134,61,45,0,3,0,251,231,140,250,217,33,28,242,134,61,46,0,3,0,0,0,0,0,224,17,125,194,158,61,47,0,3,0,0,0,0,0,255,250,28,242,134,61,49,0,3,0,59,247,23,247,123,15,28,242,134,61,50,0,3,0,0,0,0,0,71,16,28,242,134,61,53,0,3,0,243,227,42,4,161,245,28,242,134,61,54,0,3,0,0,0,0,0,91,25,157,178,166,61,55,0,3,0,0,0,0,0,93,12,157,178,166,61,63,0,3,0,0,0,0,0,249,245,125,194,158,61,64,0,3,0,61,27,242,252,241,17,157,178,166,61,0,0,0,1,176,165,181,170,131,87,158,51,230,61,1,0,1,1,184,165,184,165,187,90,61,226,142,61,10,0,3,0,125,34,191,75,168,177,61,226,142,61,11,0,2,1,0,0,0,0,171,114,61,226,142,61,12,0,3,0,164,130,65,28,16,20,61,226,142,61,13,0,3,0,126,126,177,21,218,1,93,210,150,61,14,0,3,0,0,0,0,0,113,13,125,194,158,61,15,0,3,0,0,0,0,0,176,10,189,162,174,61,21,0,3,0,71,254,214,247,84,59,125,194,158,61,23,0,3,0,0,0,0,0,167,7,125,194,158,61,25,0,3,0,81,246,143,253,25,47,61,226,142,61,30,0,3,0,0,0,0,0,224,43,125,194,158,61,31,0,3,0,0,0,0,0,58,7,93,210,150,61,33,0,2,0,116,132,184,253,86,24,93,210,150,61,35,0,3,0,0,0,0,0,233,130,93,210,150,61,37,0,3,0,20,163,30,217,233,254,61,226,142,61,41,0,3,0,239,210,34,253,216,42,93,210,150,61,45,0,3,0,171,228,140,249,3,30,125,194,158,61,46,0,3,0,0,0,0,0,253,10,93,210,150,61,49,0,3,0,27,245,68,245,165,9,93,210,150,61,50,0,3,0,0,0,0,0,56,10,93,210,150,61,53,0,3,0,143,222,80,0,194,240,61,226,142,61,54,0,3,0,0,0,0,0,182,20,157,178,166,61,58,0,3,0,0,0,0,0,22,225,157,178,166,61,2,0,3,0,127,254,155,4,222,0,125,194,158,61,7,0,3,0,86,252,46,254,203,254,125,194,158,61,9,0,2,0,64,125,195,0,51,23,93,210,150,61,10,0,3,0,192,34,99,73,244,174,93,210,150,61,11,0,2,1,0,0,0,0,235,112,93,210,150,61,12,0,0,1,129,28,194,19,96,125,93,210,150,61,13,0,3,0,207,126,148,18,134,2,254,130,190,61,19,0,3,0,0,0,0,0,44,14,93,210,150,61,22,0,3,0,0,0,0,0,23,29,93,210,150,61,26,0,3,0,0,0,0,0,89,30,157,178,166,61,27,0,3,0,0,0,0,0,61,25,157,178,166,61,29,0,3,0,218,0,137,27,222,44,125,194,158,61,30,0,3,0,0,0,0,0,252,35,125,194,158,61,34,0,3,0,24,197,16,213,79,157,125,194,158,61,36,0,3,0,218,105,27,0,165,210,125,194,158,61,41,0,3,0,249,205,191,253,249,42,125,194,158,61,43,0,3,0,0,0,0,0,142,0,93,210,150,61,54,0,3,0,0,0,0,0,240,15,221,146,182,61,57,0,1,1,246,247,226,222,252,9,189,162,174,61,59,0,3,0,88,2,209,248,40,14,125,194,158,61,10,0,3,0,221,34,255,70,140,172,125,194,158,61,11,0,2,1,0,0,0,0,182,111,125,194,158,61,12,0,0,1,151,28,66,19,236,124,125,194,158,61,13,0,3,0,25,127,80,15,58,3,30,115,198,61,14,0,3,0,0,0,0,0,11,5,30,115,198,61,18,0,3,0,0,0,0,0,30,12,157,178,166,61,22,0,3,0,0,0,0,0,155,25,157,178,166,61,26,0,3,0,0,0,0,0,190,25,157,178,166,61,33,0,2,0,177,131,23,253,17,25,125,194,158,61,35,0,2,1,0,0,0,0,213,127,125,194,158,61,37,0,3,0,195,164,131,218,88,255,157,178,166,61,38,0,3,0,0,0,0,0,107,2,157,178,166,61,39,0,3,0,0,0,0,0,36,2,157,178,166,61,42,0,3,0,0,0,0,0,195,8,125,194,158,61,45,0,3,0,23,227,18,249,43,28,125,194,158,61,49,0,3,0,23,244,103,244,216,6,125,194,158,61,50,0,3,0,0,0,0,0,80,7,107,202,26,62,51,0,3,0,0,0,0,0,117,44,125,194,158,61,53,0,3,0,255,219,122,254,110,238,125,194,158,61,54,0,3,0,0,0,0,0,105,11,189,162,174,61,7,0,3,0,123,251,206,253,176,253,254,130,190,61,9,0,0,0,214,3,178,125,153,26,157,178,166,61,10,0,3,0,220,34,157,68,109,170,157,178,166,61,11,0,2,1,0,0,0,0,249,110,157,178,166,61,12,0,0,1,139,28,158,18,136,124,221,146,182,61,13,0,3,0,182,127,37,5,103,5,254,130,190,61,15,0,3,0,0,0,0,0,168,5,254,130,190,61,17,0,3,0,110,10,221,254,179,47,30,115,198,61,23,0,3,0,0,0,0,0,51,3,254,130,190,61,25,0,3,0,82,245,65,253,91,45,221,146,182,61,30,0,3,0,0,0,0,0,79,23,30,115,198,61,31,0,3,0,0,0,0,0,5,3,157,178,166,61,34,0,3,0,13,198,156,215,13,153,157,178,166,61,35,0,2,1,0,0,0,0,17,125,189,162,174,61,36,0,3,0,66,99,169,17,162,183,157,178,166,61,37,0,3,0,84,166,204,219,191,255,157,178,166,61,41,0,3,0,198,203,5,254,4,43,157,178,166,61,43,0,3,0,0,0,0,0,9,255,157,178,166,61,45,0,3,0,165,225,163,248,120,26,157,178,166,61,46,0,3,0,0,0,0,0,240,8,189,162,174,61,47,0,3,0,0,0,0,0,181,248,157,178,166,61,49,0,3,0,42,243,156,243,70,4,157,178,166,61,50,0,3,0,0,0,0,0,165,4,157,178,166,61,53,0,3,0,170,217,202,252,78,236,157,178,166,61,54,0,3,0,0,0,0,0,64,7,254,130,190,61,64,0,3,0,61,29,183,252,49,18,254,130,190,61,0,0,0,1,0,166,224,171,40,88,30,115,198,61,2,0,3,0,131,254,157,4,184,1,189,162,174,61,10,0,3,0,196,34,65,66,143,168,189,162,174,61,11,0,2,1,0,0,0,0,163,110,221,146,182,61,12,0,0,1,45,28,12,17,232,123,30,115,198,61,22,0,3,0,0,0,0,0,148,18,221,146,182,61,26,0,3,0,0,0,0,0,0,21,254,130,190,61,27,0,3,0,0,0,0,0,60,21,30,115,198,61,29,0,3,0,226,0,69,32,233,48,189,162,174,61,33,0,2,0,113,131,212,252,92,25,189,162,174,61,34,0,3,0,250,198,175,217,153,149,189,162,174,61,35,0,2,1,0,0,0,0,189,122,189,162,174,61,37,0,3,0,164,167,223,220,20,0,189,162,174,61,38,0,3,0,0,0,0,0,67,1,189,162,174,61,39,0,3,0,0,0,0,0,30,1,189,162,174,61,41,0,3,0,243,201,64,254,13,43,189,162,174,61,42,0,3,0,0,0,0,0,221,7,189,162,174,61,43,0,3,0,0,0,0,0,197,253,189,162,174,61,45,0,3,0,114,224,70,248,13,25,189,162,174,61,46,0,3,0,0,0,0,0,58,7,189,162,174,61,49,0,3,0,101,242,244,242,33,2,189,162,174,61,50,0,3,0,0,0,0,0,108,2,189,162,174,61,53,0,3,0,186,215,99,251,138,234,189,162,174,61,54,0,3,0,0,0,0,0,200,3,254,130,190,61,55,0,3,0,0,0,0,0,211,11,94,83,214,61,58,0,3,0,0,0,0,0,190,225,30,115,198,61,62,0,1,1,64,14,13,14,105,4,254,130,190,61,63,0,3,0,0,0,0,0,161,246,221,146,182,61,7,0,3,0,27,251,200,253,55,253,221,146,182,61,10,0,3,0,154,34,239,63,234,166,221,146,182,61,11,0,2,1,0,0,0,0,159,110,94,83,214,61,21,0,3,0,246,253,254,245,15,59,221,146,182,61,33,0,2,0,92,131,164,252,142,25,221,146,182,61,34,0,3,0,153,199,17,219,107,147,221,146,182,61,35,0,2,1,0,0,0,0,34,121,254,130,190,61,36,0,3,0,227,97,79,26,78,172,221,146,182,61,37,0,3,0,134,168,151,221,77,0,221,146,182,61,38,0,3,0,0,0,0,0,126,0,221,146,182,61,39,0,3,0,0,0,0,0,111,0,221,146,182,61,41,0,3,0,189,200,103,254,18,43,221,146,182,61,42,0,3,0,0,0,0,0,68,7,221,146,182,61,43,0,3,0,0,0,0,0,237,252,221,146,182,61,45,0,3,0,166,223,9,248,27,24,221,146,182,61,46,0,3,0,0,0,0,0,23,6,221,146,182,61,47,0,3,0,0,0,0,0,3,248,221,146,182,61,49,0,3,0,226,241,133,242,180,0,221,146,182,61,50,0,3,0,0,0,0,0,241,0,221,146,182,61,53,0,3,0,114,214,117,250,93,233,221,146,182,61,54,0,3,0,0,0,0,0,121,1,30,115,198,61,59,0,3,0,183,3,178,248,15,14,254,130,190,61,7,0,3,0,196,250,231,253,210,252,254,130,190,61,10,0,3,0,101,34,177,61,122,165,30,115,198,61,11,0,2,1,0,0,0,0,63,111,62,99,206,61,12,0,0,1,115,27,163,14,61,123,30,115,198,61,13,0,3,0,226,127,157,254,202,6,30,115,198,61,26,0,3,0,0,0,0,0,114,16,254,130,190,61,30,0,3,0,0,0,0,0,33,19,30,115,198,61,33,0,2,0,139,131,101,252,190,25,254,130,190,61,34,0,3,0,249,199,243,219,35,146,254,130,190,61,35,0,2,1,0,0,0,0,17,120,254,130,190,61,37,0,3,0,22,169,13,222,113,0,254,130,190,61,38,0,3,0,0,0,0,0,0,0,254,130,190,61,39,0,3,0,0,0,0,0,0,0,254,130,190,61,41,0,3,0,248,199,128,254,20,43,254,130,190,61,42,0,3,0,0,0,0,0,227,6,254,130,190,61,43,0,3,0,0,0,0,0,100,252,254,130,190,61,45,0,3,0,36,223,226,247,128,23,254,130,190,61,46,0,3,0,0,0,0,0,93,5,254,130,190,61,47,0,3,0,0,0,0,0,146,247,254,130,190,61,49,0,3,0,143,241,62,242,203,255,254,130,190,61,50,0,3,0,0,0,0,0,0,0,254,130,190,61,53,0,3,0,163,213]);fileData1.push.apply(fileData1,[219,249,159,232,254,130,190,61,54,0,3,0,0,0,0,0,0,0,94,83,214,61,57,0,1,1,205,247,208,222,170,9,94,83,214,61,0,0,0,1,83,166,181,172,216,88,62,99,206,61,7,0,3,0,49,250,178,254,89,252,62,99,206,61,9,0,0,0,52,5,122,124,37,28,30,115,198,61,10,0,3,0,42,34,145,59,57,164,94,83,214,61,15,0,3,0,0,0,0,0,82,2,94,83,214,61,17,0,3,0,86,10,102,253,239,48,30,115,198,61,19,0,3,0,0,0,0,0,72,13,94,83,214,61,25,0,3,0,169,244,13,253,51,44,62,99,206,61,27,0,3,0,0,0,0,0,201,18,30,115,198,61,30,0,3,0,0,0,0,0,30,15,30,115,198,61,34,0,3,0,20,200,83,220,174,145,30,115,198,61,35,0,2,1,0,0,0,0,130,119,30,115,198,61,36,0,3,0,214,99,58,27,11,172,30,115,198,61,37,0,3,0,87,169,66,222,130,0,126,67,222,61,38,0,3,0,0,0,0,0,118,255,94,83,214,61,39,0,3,0,0,0,0,0,157,255,30,115,198,61,41,0,3,0,159,199,139,254,22,43,158,51,230,61,42,0,3,0,0,0,0,0,102,6,126,67,222,61,43,0,3,0,0,0,0,0,205,251,30,115,198,61,45,0,3,0,234,222,208,247,59,23,30,115,198,61,46,0,3,0,0,0,0,0,10,5,30,115,198,61,47,0,3,0,0,0,0,0,95,247,30,115,198,61,49,0,3,0,105,241,30,242,98,255,30,115,198,61,50,0,3,0,0,0,0,0,147,255,30,115,198,61,53,0,3,0,69,213,151,249,73,232,30,115,198,61,54,0,3,0,0,0,0,0,86,255,76,218,18,62,55,0,3,0,0,0,0,0,162,11,94,83,214,61,63,0,3,0,0,0,0,0,244,246,126,67,222,61,64,0,3,0,175,30,142,252,123,18,221,19,246,61,2,0,3,0,133,254,159,4,129,2,62,99,206,61,10,0,3,0,238,33,147,57,30,163,126,67,222,61,11,0,2,1,0,0,0,0,161,112,62,99,206,61,13,0,0,0,157,251,108,7,205,127,94,83,214,61,14,0,3,0,0,0,0,0,159,2,126,67,222,61,18,0,3,0,0,0,0,0,156,9,126,67,222,61,19,0,3,0,0,0,0,0,252,10,94,83,214,61,22,0,3,0,0,0,0,0,138,15,126,67,222,61,23,0,3,0,0,0,0,0,2,1,94,83,214,61,26,0,3,0,0,0,0,0,107,12,62,99,206,61,29,0,3,0,228,0,84,33,208,49,62,99,206,61,30,0,3,0,0,0,0,0,87,11,126,67,222,61,31,0,3,0,0,0,0,0,243,0,14,250,2,62,33,0,2,0,238,132,226,251,235,25,62,99,206,61,34,0,3,0,14,200,119,220,159,145,158,51,230,61,35,0,2,1,0,0,0,0,60,118,62,99,206,61,36,0,3,0,140,102,33,27,85,173,190,35,238,61,37,0,3,0,228,169,180,222,165,0,190,35,238,61,41,0,3,0,225,198,163,254,24,43,190,35,238,61,45,0,3,0,108,222,170,247,165,22,221,19,246,61,46,0,3,0,0,0,0,0,65,4,221,19,246,61,47,0,3,0,0,0,0,0,229,246,158,51,230,61,49,0,3,0,37,241,227,241,162,254,190,35,238,61,50,0,3,0,0,0,0,0,170,254,190,35,238,61,53,0,3,0,125,212,4,249,145,231,158,51,230,61,54,0,3,0,0,0,0,0,31,254,158,51,230,61,59,0,3,0,12,5,149,248,190,13,94,83,214,61,62,0,1,1,49,14,12,14,102,4,158,51,230,61,7,0,3,0,127,249,117,0,223,251,94,83,214,61,9,0,0,0,203,5,252,123,208,28,94,83,214,61,10,0,3,0,180,33,187,55,32,162,126,67,222,61,12,0,0,1,61,27,128,13,232,122,94,83,214,61,13,0,0,0,219,248,1,8,167,127,126,67,222,61,27,0,3,0,0,0,0,0,184,16,126,67,222,61,29,0,3,0,232,0,42,35,94,51,94,83,214,61,30,0,3,0,0,0,0,0,221,7,158,51,230,61,34,0,3,0,9,200,228,220,69,145,94,83,214,61,36,0,3,0,252,104,93,27,44,174,158,51,230,61,0,0,0,1,142,166,25,173,85,89,126,67,222,61,9,0,0,0,78,6,154,123,99,29,126,67,222,61,10,0,3,0,128,33,17,54,55,161,126,67,222,61,13,0,0,0,103,246,133,8,128,127,158,51,230,61,14,0,3,0,0,0,0,0,187,0,158,51,230,61,15,0,3,0,0,0,0,0,165,0,190,35,238,61,17,0,3,0,70,10,98,252,203,49,221,19,246,61,21,0,3,0,206,253,19,245,235,58,158,51,230,61,22,0,3,0,0,0,0,0,41,13,221,19,246,61,25,0,3,0,22,244,223,252,47,43,126,67,222,61,26,0,3,0,0,0,0,0,179,10,126,67,222,61,30,0,3,0,0,0,0,0,196,4,126,67,222,61,36,0,3,0,118,107,127,27,49,175,158,51,230,61,39,0,3,0,0,0,0,0,114,255,190,35,238,61,57,0,1,1,123,247,192,222,72,9,76,218,18,62,58,0,3,0,0,0,0,0,95,227,190,35,238,61,62,0,1,1,151,13,14,14,73,4,158,51,230,61,63,0,3,0,0,0,0,0,202,246,158,51,230,61,9,0,0,0,183,6,77,123,217,29,158,51,230,61,10,0,3,0,95,33,161,52,96,160,221,19,246,61,11,0,2,1,0,0,0,0,24,113,158,51,230,61,12,0,0,1,67,27,43,13,192,122,158,51,230,61,13,0,0,0,92,244,243,8,90,127,221,19,246,61,18,0,3,0,0,0,0,0,248,7,221,19,246,61,19,0,3,0,0,0,0,0,124,9,158,51,230,61,23,0,3,0,0,0,0,0,118,0,158,51,230,61,26,0,3,0,0,0,0,0,69,9,190,35,238,61,27,0,3,0,0,0,0,0,57,15,190,35,238,61,29,0,3,0,234,0,125,36,125,52,158,51,230,61,30,0,3,0,0,0,0,0,48,2,190,35,238,61,31,0,3,0,0,0,0,0,0,0,190,35,238,61,36,0,3,0,114,112,119,27,182,177,29,242,6,62,38,0,3,0,0,0,0,0,40,255,45,234,10,62,43,0,3,0,0,0,0,0,116,251,252,3,254,61,64,0,3,0,172,31,129,252,54,19,14,250,2,62,0,0,0,1,5,167,140,173,88,90,92,210,22,62,1,0,1,1,186,165,186,165,189,90,221,19,246,61,7,0,3,0,28,249,159,1,238,251,190,35,238,61,9,0,0,0,9,7,55,123,43,30,190,35,238,61,10,0,3,0,54,33,93,51,132,159,190,35,238,61,12,0,0,1,146,27,37,13,157,122,221,19,246,61,13,0,0,0,10,241,164,9,18,127,221,19,246,61,14,0,3,0,0,0,0,0,84,255,221,19,246,61,15,0,3,0,0,0,0,0,104,255,221,19,246,61,22,0,3,0,0,0,0,0,101,11,221,19,246,61,23,0,3,0,0,0,0,0,147,255,221,19,246,61,26,0,3,0,0,0,0,0,240,6,190,35,238,61,30,0,3,0,0,0,0,0,0,0,252,3,254,61,34,0,3,0,230,199,251,220,83,145,252,3,254,61,35,0,2,1,0,0,0,0,154,117,29,242,6,62,39,0,3,0,0,0,0,0,65,255,76,218,18,62,42,0,3,0,0,0,0,0,56,6,14,250,2,62,49,0,3,0,4,241,199,241,69,254,221,19,246,61,54,0,3,0,0,0,0,0,191,253,29,242,6,62,59,0,3,0,22,6,129,248,53,13,221,19,246,61,63,0,3,0,0,0,0,0,91,246,221,19,246,61,9,0,0,0,65,7,118,123,77,30,221,19,246,61,10,0,3,0,236,32,37,50,117,158,221,19,246,61,12,0,0,1,115,28,161,13,128,122,252,3,254,61,17,0,3,0,62,10,239,251,43,50,221,19,246,61,27,0,3,0,0,0,0,0,151,14,221,19,246,61,29,0,3,0,235,0,12,37,246,52,221,19,246,61,30,0,3,0,0,0,0,0,252,253,252,3,254,61,31,0,3,0,0,0,0,0,80,255,252,3,254,61,36,0,0,0,26,27,180,180,59,112,45,234,10,62,37,0,3,0,19,170,218,222,177,0,76,218,18,62,41,0,3,0,159,198,172,254,25,43,29,242,6,62,45,0,3,0,70,222,158,247,119,22,45,234,10,62,50,0,3,0,0,0,0,0,91,254,29,242,6,62,53,0,3,0,63,212,214,248,88,231,29,242,6,62,57,0,1,1,221,246,169,222,159,8,252,3,254,61,62,0,1,1,235,12,16,14,41,4,107,202,26,62,2,0,3,0,132,254,160,4,237,2,252,3,254,61,7,0,3,0,244,248,30,2,88,252,252,3,254,61,9,0,0,0,88,7,2,124,60,30,252,3,254,61,10,0,3,0,134,32,63,49,122,157,252,3,254,61,11,0,2,1,0,0,0,0,97,113,252,3,254,61,12,0,0,1,170,29,123,14,113,122,252,3,254,61,13,0,0,0,231,239,225,9,247,126,252,3,254,61,14,0,3,0,0,0,0,0,217,254,252,3,254,61,15,0,3,0,0,0,0,0,251,254,252,3,254,61,18,0,3,0,0,0,0,0,159,7,252,3,254,61,19,0,3,0,0,0,0,0,42,9,29,242,6,62,21,0,3,0,199,253,238,244,230,58,252,3,254,61,22,0,3,0,0,0,0,0,203,10,252,3,254,61,23,0,3,0,0,0,0,0,69,255,252,3,254,61,25,0,3,0,1,244,217,252,10,43,252,3,254,61,26,0,3,0,0,0,0,0,35,6,252,3,254,61,27,0,3,0,0,0,0,0,35,14,252,3,254,61,29,0,3,0,236,0,114,37,76,53,252,3,254,61,30,0,3,0,0,0,0,0,140,252,252,3,254,61,46,0,3,0,0,0,0,0,49,4,154,178,38,62,47,0,3,0,0,0,0,0,209,246,61,226,14,62,54,0,3,0,0,0,0,0,108,253,45,234,10,62,63,0,3,0,0,0,0,0,254,244,14,250,2,62,7,0,3,0,226,248,139,2,171,253,14,250,2,62,9,0,0,0,57,7,230,124,228,29,14,250,2,62,10,0,3,0,247,31,254,48,215,156,29,242,6,62,11,0,2,1,0,0,0,0,181,114,14,250,2,62,12,0,0,1,40,31,179,15,128,122,14,250,2,62,13,0,0,0,159,239,240,9,241,126,14,250,2,62,14,0,3,0,0,0,0,0,187,254,14,250,2,62,15,0,3,0,0,0,0,0,224,254,14,250,2,62,17,0,3,0,62,10,227,251,53,50,29,242,6,62,18,0,3,0,0,0,0,0,151,7,29,242,6,62,19,0,3,0,0,0,0,0,36,9,14,250,2,62,22,0,3,0,0,0,0,0,165,10,29,242,6,62,23,0,3,0,0,0,0,0,63,255,29,242,6,62,25,0,3,0,255,243,216,252,7,43,14,250,2,62,26,0,3,0,0,0,0,0,241,5,14,250,2,62,27,0,3,0,0,0,0,0,7,14,14,250,2,62,29,0,3,0,236,0,139,37,97,53,14,250,2,62,30,0,3,0,0,0,0,0,49,252,14,250,2,62,31,0,3,0,0,0,0,0,61,255,29,242,6,62,34,0,3,0,194,199,230,220,134,145,76,218,18,62,35,0,2,1,0,0,0,0,8,117,29,242,6,62,36,0,0,0,123,26,251,183,146,109,92,210,22,62,46,0,3,0,0,0,0,0,25,4,61,226,14,62,62,0,1,1,52,11,21,14,207,3,76,218,18,62,64,0,3,0,112,32,146,252,81,20,61,226,14,62,0,0,0,1,94,167,170,173,27,91,29,242,6,62,7,0,3,0,216,248,221,2,50,255,45,234,10,62,9,0,2,0,148,125,177,6,224,28,29,242,6,62,10,0,3,0,95,31,24,49,105,156,45,234,10,62,12,0,0,1,27,34,93,18,180,122,29,242,6,62,13,0,0,0,208,239,230,9,245,126,45,234,10,62,14,0,3,0,0,0,0,0,255,254,61,226,14,62,15,0,3,0,0,0,0,0,84,255,92,210,22,62,17,0,3,0,68,10,66,252,229,49,29,242,6,62,22,0,3,0,0,0,0,0,191,10,29,242,6,62,26,0,3,0,0,0,0,0,19,6,61,226,14,62,27,0,3,0,0,0,0,0,130,14,45,234,10,62,29,0,3,0,235,0,82,37,50,53,29,242,6,62,30,0,3,0,0,0,0,0,110,252,61,226,14,62,31,0,3,0,0,0,0,0,140,255,76,218,18,62,33,0,2,0,156,133,181,251,239,25,92,210,22,62,49,0,3,0,254,240,194,241,53,254,45,234,10,62,7,0,3,0,214,248,13,3,128,0,45,234,10,62,10,0,3,0,214,30,102,49,39,156,61,226,14,62,11,0,2,1,0,0,0,0,19,116,61,226,14,62,13,0,0,0,215,240,175,9,14,127,123,194,30,62,18,0,3,0,0,0,0,0,103,8,107,202,26,62,19,0,3,0,0,0,0,0,209,9,123,194,30,62,21,0,3,0,213,253,61,245,242,58,76,218,18,62,22,0,3,0,0,0,0,0,149,11,123,194,30,62,23,0,3,0,0,0,0,0,244,255,123,194,30,62,25,0,3,0,49,244,231,252,95,43,92,210,22,62,26,0,3,0,0,0,0,0,135,7,61,226,14,62,30,0,3,0,0,0,0,0,187,253,92,210,22,62,34,0,3,0,107,199,130,220,41,146,61,226,14,62,36,0,0,0,172,25,86,187,27,107,8,123,66,62,38,0,3,0,0,0,0,0,48,255,154,178,38,62,39,0,3,0,0,0,0,0,65,255,217,146,54,62,45,0,3,0,69,222,158,247,118,22,123,194,30,62,53,0,3,0,61,212,213,248,87,231,76,218,18,62,57,0,1,1,84,246,153,222,15,8,123,194,30,62,59,0,3,0,180,6,132,248,157,12,61,226,14,62,7,0,3,0,211,248,28,3,69,1,61,226,14,62,9,0,2,0,189,124,96,6,90,28,61,226,14,62,10,0,3,0,98,30,209,49,8,156,61,226,14,62,12,0,0,1,79,35,142,19,205,122,92,210,22,62,14,0,3,0,0,0,0,0,174,255,107,202,26,62,29,0,3,0,234,0,162,36,157,52,201,154,50,62,37,0,3,0,17,170,217,222,176,0,23,115,70,62,43,0,3,0,0,0,0,0,133,251,139,186,34,62,50,0,3,0,0,0,0,0,97,254,170,170,42,62,63,0,3,0,0,0,0,0,204,241,92,210,22,62,0,0,0,1,151,167,172,173,152,91,76,218,18,62,7,0,3,0,191,248,5,3,214,0,76,218,18,62,9,0,2,0,10,124,26,6,236,27,92,210,22,62,10,0,3,0,221,29,142,50,12,156,76,218,18,62,11,0,2,1,0,0,0,0,152,116,76,218,18,62,12,0,0,1,43,36,125,20,225,122,92,210,22,62,13,0,0,0,224,241,120,9,37,127,107,202,26,62,15,0,3,0,0,0,0,0,217,255,107,202,26,62,27,0,3,0,0,0,0,0,15,15,92,210,22,62,30,0,3,0,0,0,0,0,11,255,123,194,30,62,31,0,3,0,0,0,0,0,244,255,76,218,18,62,36,0,0,0,56,25,249,188,246,105,248,130,62,62,54,0,3,0,0,0,0,0,133,253,170,170,42,62,62,0,1,1,242,7,25,14,10,3,107,202,26,62,7,0,3,0,141,248,165,2,195,254,92,210,22,62,9,0,2,0,122,123,223,5,146,27,107,202,26,62,11,0,2,1,0,0,0,0,56,117,92,210,22,62,12,0,0,1,192,36,50,21,240,122,92,210,22,62,22,0,3,0,0,0,0,0,215,11,248,130,62,62,33,0,2,0,107,135,71,251,240,25,232,138,58,62,35,0,2,1,0,0,0,0,93,116,92,210,22,62,36,0,0,0,193,24,140,190,226,104,217,146,54,62,41,0,3,0,165,198,171,254,24,43,248,130,62,62,42,0,3,0,0,0,0,0,62,6,201,154,50,62,55,0,3,0,0,0,0,0,163,11,107,202,26,62,57,0,1,1,245,245,143,222,172,7,185,162,46,62,58,0,3,0,0,0,0,0,95,228,154,178,38,62,64,0,3,0,222,32,192,252,80,21,201,154,50,62,0,0,0,1,73,168,127,173,21,93,217,146,54,62,1,0,1,1,188,165,188,165,191,90,107,202,26,62,9,0,2,0,22,123,181,5,84,27,123,194,30,62,10,0,3,0,197,29,241,50,52,156,107,202,26,62,12,0,0,1,5,37,163,21,249,122,123,194,30,62,13,0,0,0,116,242,89,9,50,127,139,186,34,62,14,0,3,0,0,0,0,0,249,255,170,170,42,62,17,0,3,0,70,10,98,252,203,49,139,186,34,62,22,0,3,0,0,0,0,0,54,12,123,194,30,62,26,0,3,0,0,0,0,0,238,7,123,194,30,62,30,0,3,0,0,0,0,0,198,255,232,138,58,62,34,0,3,0,175,198,85,219,185,147,107,202,26,62,36,0,0,0,73,24,7,192,226,103,23,115,70,62,46,0,3,0,0,0,0,0,48,4,232,138,58,62,49,0,3,0,1,241,197,241,62,254,23,115,70,62,2,0,3,0,125,254,170,4,11,3,170,170,42,62,7,0,3,0,34,248,169,1,139,249,123,194,30,62,9,0,2,0,212,122,154,5,43,27,139,186,34,62,11,0,2,1,0,0,0,0,99,117,123,194,30,62,12,0,0,1,21,37,226,21,254,122,170,170,42,62,15,0,3,0,0,0,0,0,0,0,217,146,54,62,19,0,3,0,0,0,0,0,238,9,185,162,46,62,27,0,3,0,0,0,0,0,57,15,154,178,38,62,29,0,3,0,234,0,126,36,126,52,123,194,30,62,36,0,0,0,210,23,100,193,246,102,232,138,58,62,51,0,3,0,0,0,0,0,117,44,217,146,54,62,57,0,1,1,202,244,117,222,96,6,154,178,38,62,9,0,2,0,159,122,132,5,12,27,170,170,42,62,10,0,3,0,229,29,7,51,91,156,154,178,38,62,12,0,0,1,221,36,250,21,0,123,139,186,34,62,13,0,0,0,146,242,83,9,53,127,1,254,128,62,18,0,3,0,0,0,0,0,117,8,8,123,66,62,21,0,3,0,214,253,67,245,243,58,220,142,184,62,23,0,3,0,0,0,0,0,19,0,86,83,86,62,25,0,3,0,52,244,232,252,100,43,185,162,46,62,26,0,3,0,0,0,0,0,14,8,139,186,34,62,30,0,3,0,0,0,0,0,236,255,189,158,176,62,31,0,3,0,0,0,0,0,238,255,139,186,34,62,36,0,0,0,95,23,153,194,33,102,8,123,66,62,53,0,3,0,76,212,223,248,100,231,8,123,66,62,59,0,3,0,19,7,204,248,6,12,185,162,46,62,11,0,2,1,0,0,0,0,88,117,248,130,62,62,13,0,0,0,162,242,79,9,54,127,217,142,56,63,14,0,3,0,0,0,0,0,0,0,201,154,50,62,22,0,3,0,0,0,0,0,62,12,232,138,58,62,30,0,3,0,0,0,0,0,0,0,154,178,38,62,36,0,0,0,243,22,164,195,101,101,23,115,70,62,50,0,3,0,0,0,0,0,121,254,201,154,50,62,9,0,2,0,141,122,127,5,3,27,185,162,46,62,12,0,0,1,180,36,241,21,255,122,8,123,66,62,29,0,3,0,234,0,125,36,125,52,170,170,42,62,36,0,0,0,146,22,118,196,197,100,23,115,70,62,39,0,3,0,0,0,0,0,76,255,8,123,66,62,47,0,3,0,0,0,0,0,215,246,201,154,50,62,64,0,3,0,12,33,229,252,202,21,185,162,46,62,7,0,3,0,8,248,111,1,99,248,185,162,46,62,10,0,3,0,242,29,3,51,100,156,217,142,56,63,15,0,3,0,0,0,0,0,0,0,148,51,102,62,17,0,3,0,70,10,98,252,203,49,201,154,50,62,36,0,0,0,206,21,193,197,212,99,217,146,54,62,62,0,1,1,203,6,24,14,180,2,8,123,66,62,63,0,3,0,0,0,0,0,239,239,201,154,50,62,7,0,3,0,241,247,61,1,111,247,248,130,62,62,10,0,3,0,213,30,226,50,246,156,117,67,94,62,11,0,2,1,0,0,0,0,15,116,8,123,66,62,12,0,0,1,76,34,51,21,234,122,8,123,66,62,26,0,3,0,0,0,0,0,14,8,56,226,142,62,27,0,3,0,0,0,0,0,57,15,86,83,86,62,58,0,3,0,0,0,0,0,38,229,39,107,74,62,0,0,0,1,191,168,73,173,5,94,217,146,54,62,7,0,3,0,219,247,23,1,193,246,248,130,62,62,9,0,2,0,111,122,119,5,245,26,173,166,172,62,22,0,3,0,0,0,0,0,70,12,217,146,54,62,36,0,0,0,102,21,73,198,128,99,232,138,58,62,37,0,3,0,14,170,214,222,175,0,71,218,146,62,55,0,3,0,0,0,0,0,205,11,39,107,74,62,64,0,3,0,71,33,65,253,156,22,39,107,74,62,1,0,1,1,189,165,189,165,193,90,232,138,58,62,7,0,3,0,200,247,2,1,121,246,9,250,130,62,19,0,3,0,0,0,0,0,238,9,248,130,62,62,36,0,0,0,136,20,43,199,29,99,8,123,66,62,41,0,3,0,178,198,169,254,24,43,101,75,90,62,45,0,3,0,114,222,172,247,172,22,70,91,82,62,57,0,1,1,197,243,90,222,20,5,54,99,78,62,62,0,1,1,164,4,15,14,238,1,248,130,62,62,7,0,3,0,182,247,249,0,135,246,217,142,56,63,30,0,3,0,0,0,0,0,0,0,39,107,74,62,34,0,3,0,89,198,190,218,163,148,101,75,90,62,35,0,2,1,0,0,0,0,63,116,8,123,66,62,37,0,3,0,6,170,208,222,173,0,86,83,86,62,49,0,3,0,24,241,216,241,126,254,54,99,78,62,51,0,3,0,0,0,0,0,117,44,196,27,114,62,65,0,2,0,2,0,250,255,249,127,8,123,66,62,7,0,3,0,162,247,254,0,236,246,86,83,86,62,9,0,2,0,84,122,112,5,233,26,70,91,82,62,10,0,3,0,186,31,211,50,120,157,1,254,128,62,13,0,0,0,162,242,79,9,54,127,39,107,74,62,33,0,2,0,230,135,45,251,237,25,8,123,66,62,36,0,0,0,20,20,133,199,9,99,227,11,122,62,42,0,3,0,0,0,0,0,142,6,117,67,94,62,54,0,3,0,0,0,0,0,16,254,117,67,94,62,3,0,3,0,157,1,171,1,26,1,132,59,98,62,5,0,3,0,130,3,178,0,50,2,23,115,70,62,7,0,3,0,141,247,13,1,142,247,86,83,86,62,12,0,0,1,41,32,118,20,211,122,86,83,86,62,21,0,3,0,214,253,67,245,243,58,189,158,176,62,26,0,3,0,0,0,0,0,27,8,117,67,94,62,29,0,3,0,234,0,125,36,125,52,23,115,70,62,36,0,0,0,158,19,210,199,8,99,179,35,110,62,37,0,3,0,176,169,138,222,152,0,71,218,146,62,38,0,3,0,0,0,0,0,227,255,132,59,98,62,41,0,3,0,1,199,159,254,23,43,1,254,128,62,47,0,3,0,0,0,0,0,62,247,39,107,74,62,53,0,3,0,91,212,235,248,114,231,117,67,94,62,59,0,3,0,251,6,43,249,206,11,23,115,70,62,63,0,3,0,0,0,0,0,162,239,148,51,102,62,2,0,3,0,105,254,228,4,19,3,54,99,78,62,7,0,3,0,91,247,58,1,52,249,70,91,82,62,36,0,0,0,46,18,114,200,95,99,103,202,154,62,39,0,3,0,0,0,0,0,0,0,103,202,154,62,43,0,3,0,0,0,0,0,100,252,212,19,118,62,46,0,3,0,0,0,0,0,176,4,179,35,110,62,50,0,3,0,0,0,0,0,0,255,227,11,122,62,63,0,3,0,0,0,0,0,206,235,164,43,106,62,0,0,0,1,66,169,178,172,16,95,196,27,114,62,1,0,1,1,191,165,191,165,195,90,101,75,90,62,33,0,2,0,136,136,14,251,231,25,117,67,94,62,34,0,3,0,226,197,247,217,10,150,164,43,106,62,53,0,3,0,185,212,48,249,200,231,179,35,110,62,64,0,3,0,39,33,240,253,148,23,86,83,86,62,7,0,3,0,34,247,124,1,89,251,87,210,150,62,51,0,3,0,0,0,0,0,119,44,148,51,102,62,62,0,1,1,92,2,250,13,254,0,56,226,142,62,4,0,3,0,0,3,13,2,212,1,148,51,102,62,10,0,3,0,131,32,217,50,219,157,117,67,94,62,36,0,0,0,182,16,193,200,29,100,101,75,90,62,57,0,1,1,115,243,81,222,171,4,117,67,94,62,7,0,3,0,230,246,204,1,216,253,132,59,98,62,9,0,2,0,83,122,112,5,232,26,196,27,114,62,12,0,0,1,69,29,92,19,171,122,48,230,140,62,21,0,3,0,214,253,67,245,243,58,71,218,146,62,25,0,3,0,52,244,232,252,100,43,32,238,136,62,49,0,3,0,99,241,24,242,80,255,243,3,126,62,58,0,3,0,0,0,0,0,139,229,9,250,130,62,33,0,2,0,71,138,189,250,210,25,179,35,110,62,35,0,2,1,0,0,0,0,79,116,87,210,150,62,45,0,3,0,22,223,221,247,111,23,212,19,118,62,57,0,1,1,78,242,52,222,56,3,56,226,142,62,3,0,3,0,190,1,205,1,26,1,227,11,122,62,7,0,3,0,25,246,3,3,122,7,196,27,114,62,11,0,2,1,0,0,0,0,133,115,32,238,136,62,29,0,3,0,234,0,125,36,125,52,164,43,106,62,34,0,3,0,152,197,123,217,246,150,164,43,106,62,36,0,0,0,66,15,219,200,19,101,9,250,130,62,54,0,3,0,0,0,0,0,253,254,243,3,126,62,59,0,3,0,134,6,183,249,174,11,48,230,140,62,5,0,3,0,194,3,191,0,50,2,196,27,114,62,9,0,2,0,90,122,114,5,236,26,32,238,136,62,41,0,3,0,144,199,141,254,22,43,25,242,134,62,2,0,3,0,82,254,45,5,243,2,9,250,130,62,10,0,3,0,230,33,239,50,146,158,103,202,154,62,17,0,3,0,70,10,98,252,203,49,243,3,126,62,62,0,1,1,31,0,224,13,6,0,17,246,132,62,0,0,3,0,227,160,182,169,229,171,9,250,130,62,34,0,3,0,246,196,76,216,25,153,243,3,126,62,36,0,0,0,252,12,231,200,171,102,243,3,126,62,53,0,3,0,252,212,97,249,6,232,212,19,118,62,35,0,2,1,0,0,0,0,87,116,95,206,152,62,37,0,3,0,42,169,6,222,113,0,9,250,130,62,50,0,3,0,0,0,0,0,90,255,64,222,144,62,64,0,3,0,128,32,23,255,145,24,48,230,140,62,1,0,1,1,193,165,193,165,196,90,1,254,128,62,9,0,2,0,104,122,118,5,242,26,32,238,136,62,11,0,2,1,0,0,0,0,134,114,227,11,122,62,12,0,0,1,103,28,4,19,157,122,243,3,126,62,65,0,2,0,1,0,250,255,254,127,17,246,132,62,35,0,2,1,0,0,0,0,98,116,118,194,158,62,46,0,3,0,0,0,0,0,123,5,17,246,132,62,57,0,1,1,124,241,37,222,62,2,243,3,126,62,7,0,3,0,2,246,41,3,189,8,1,254,128,62,12,0,0,1,128,27,167,18,142,122,50,99,206,62,42,0,3,0,0,0,0,0,128,7,56,226,142,62,63,0,3,0,0,0,0,0,125,233,9,250,130,62,7,0,3,0,218,245,104,3,5,11,9,250,130,62,36,0,0,0,44,12,251,200,38,103,56,226,142,62,53,0,3,0,89,213,165,249,91,232,79,214,148,62,58,0,3,0,0,0,0,0,127,229,79,214,148,62,59,0,3,0,178,5,159,250,197,11,48,230,140,62,62,0,1,1,189,253,195,13,2,255,134,186,162,62,65,0,2,0,254,255,250,255,252,127,48,230,140,62,9,0,2,0,130,122,124,5,254,26,32,238,136,62,12,0,0,1,135,25,219,17,105,122,9,250,130,62,13,0,0,0,162,242,79,9,54,127,48,230,140,62,18,0,3,0,0,0,0,0,117,8,95,206,152,62,47,0,3,0,0,0,0,0,139,247,17,246,132,62,7,0,3,0,203,245,128,3,0,12,56,226,142,62,10,0,3,0,89,35,236,50,129,159,32,238,136,62,13,0,0,0,162,242,79,9,54,127,134,186,162,62,19,0,3,0,0,0,0,0,241,9,56,226,142,62,33,0,2,0,63,139,143,250,199,25,48,230,140,62,34,0,3,0,144,196,96,215,118,154,25,242,134,62,36,0,0,0,112,11,35,201,120,103,64,222,144,62,50,0,3,0,0,0,0,0,185,255,111,198,156,62,54,0,3,0,0,0,0,0,3,0,95,206,152,62,0,0,3,0,51,162,71,170,218,170,32,238,136,62,7,0,3,0,184,245,157,3,144,13,79,214,148,62,35,0,2,1,0,0,0,0,111,116,40,234,138,62,57,0,1,1,1,241,33,222,184,1,87,210,150,62,2,0,3,0,81,254,34,5,158,2,40,234,138,62,36,0,0,0,244,10,39,201,183,103,40,234,138,62,7,0,3,0,180,245,159,3,28,14,103,202,154,62,11,0,2,1,0,0,0,0,4,113,64,222,144,62,12,0,0,1,65,23,242,16,56,122,134,186,162,62,13,0,0,0,151,242,81,9,45,127,126,190,160,62,29,0,3,0,230,0,123,36,132,52,103,202,154,62,41,0,3,0,248,199,128,254,20,43,103,202,154,62,49,0,3,0,143,241,62,242,203,255,56,226,142,62,7,0,3,0,188,245,137,3,169,14,48,230,140,62,36,0,0,0,215,10,11,201,219,103,64,222,144,62,57,0,1,1,139,240,34,222,66,1,118,194,158,62,60,0,3,0,0,0,0,0,255,127,111,198,156,62,1,0,1,1,193,165,193,165,196,90,126,190,160,62,5,0,3,0,135,3,179,0,50,2,111,198,156,62,9,0,2,0,151,122,129,5,8,27,34,107,202,62,18,0,3,0,0,0,0,0,123,8,142,182,164,62,21,0,3,0,200,253,59,245,0,59,95,206,152,62,34,0,3,0,58,196,9,214,239,155,71,218,146,62,36,0,0,0,204,10,120,200,77,104,87,210,150,62,62,0,1,1,75,252,182,13,116,254,142,182,164,62,3,0,3,0,148,1,162,1,26,1,126,190,160,62,4,0,3,0,209,2,237,1,212,1,64,222,144,62,7,0,3,0,195,245,126,3,219,14,87,210,150,62,10,0,3,0,163,36,213,50,118,160,126,190,160,62,27,0,3,0,0,0,0,0,54,15,87,210,150,62,33,0,2,0,228,139,114,250,190,25,87,210,150,62,53,0,3,0,140,213,203,249,138,232,111,198,156,62,63,0,3,0,0,0,0,0,11,232,87,210,150,62,6,0,3,0,2,253,52,0,61,16,71,218,146,62,7,0,3,0,216,245,75,3,94,14,95,206,152,62,12,0,0,1,149,20,229,15,246,121,118,194,158,62,50,0,3,0,0,0,0,0,35,0,87,210,150,62,57,0,1,1,29,240,40,222,224,0,103,202,154,62,64,0,3,0,67,32,152,255,195,24,79,214,148,62,7,0,3,0,2,246,197,2,141,12,142,182,164,62,25,0,3,0,41,244,225,252,119,43,87,210,150,62,36,0,0,0,211,10,21,200,153,104,126,190,160,62,38,0,3,0,0,0,0,0,0,0,103,202,154,62,55,0,3,0,0,0,0,0,211,11,87,210,150,62,7,0,3,0,71,246,244,1,118,9,118,194,158,62,35,0,2,1,0,0,0,0,104,116,111,198,156,62,58,0,3,0,0,0,0,0,55,229,111,198,156,62,59,0,3,0,108,5,12,251,7,12,142,182,164,62,2,0,3,0,107,254,183,4,23,2,196,154,178,62,6,0,3,0,2,253,52,0,61,16,95,206,152,62,7,0,3,0,172,246,187,0,173,4,103,202,154,62,10,0,3,0,105,37,191,50,18,161,103,202,154,62,33,0,2,0,55,140,99,250,187,25,103,202,154,62,36,0,0,0,241,10,5,200,215,104,103,202,154,62,45,0,3,0,36,223,226,247,128,23,103,202,154,62,51,0,3,0,0,0,0,0,119,44,95,206,152,62,53,0,3,0,138,213,210,249,131,232,111,198,156,62,57,0,1,1,168,239,52,222,152,0,111,198,156,62,62,0,1,1,154,251,181,13,56,254,111,198,156,62,0,0,3,0,101,162,108,170,158,170,103,202,154,62,7,0,3,0,31,247,83,255,8,255,118,194,158,62,12,0,0,1,67,18,1,15,182,121,111,198,156,62,34,0,3,0,59,196,173,213,45,156,103,202,154,62,37,0,3,0,22,169,13,222,113,0,126,190,160,62,47,0,3,0,0,0,0,0,217,247,103,202,154,62,53,0,3,0,163,213,219,249,159,232,111,198,156,62,7,0,3,0,163,247,224,253,14,249,118,194,158,62,10,0,3,0,70,38,163,50,200,161,157,174,168,62,11,0,2,1,0,0,0,0,183,111,228,138,186,62,17,0,3,0,196,9,84,252,219,49,118,194,158,62,33,0,2,0,25,140,79,250,209,25,126,190,160,62,36,0,0,0,189,11,100,199,134,104,111,198,156,62,37,0,3,0,199,168,85,222,125,0,221,140,57,63,39,0,3,0,0,0,0,0,238,255,111,198,156,62,41,0,3,0,76,200,137,254,37,43,134,186,162,62,43,0,3,0,0,0,0,0,20,253,111,198,156,62,45,0,3,0,93,223,1,248,191,23,111,198,156,62,49,0,3,0,187,241,95,242,28,0,118,194,158,62,51,0,3,0,0,0,0,0,249,43,111,198,156,62,53,0,3,0,0,214,234,249,20,233,134,186,162,62,55,0,3,0,0,0,0,0,58,11,126,190,160,62,64,0,3,0,3,32,21,0,175,24,134,186,162,62,0,0,3,0,134,162,154,170,34,170,34,107,202,62,1,0,1,1,188,165,188,165,191,90,118,194,158,62,7,0,3,0,35,248,129,252,74,243,212,146,182,62,9,0,2,0,165,122,138,5,19,27,134,186,162,62,34,0,3,0,97,196,16,213,68,156,118,194,158,62,37,0,3,0,71,168,208,222,145,0,118,194,158,62,41,0,3,0,211,200,153,254,65,43,118,194,158,62,45,0,3,0,184,223,51,248,36,24,118,194,158,62,49,0,3,0,2,242,148,242,158,0,118,194,158,62,53,0,3,0,152,214,255,249,210,233,182,160,47,63,54,0,3,0,0,0,0,0,240,255,134,186,162,62,57,0,1,1,42,239,71,222,142,0,142,182,164,62,58,0,3,0,0,0,0,0,32,228,134,186,162,62,59,0,3,0,15,5,160,251,141,12,134,186,162,62,62,0,1,1,80,251,186,13,29,254,126,190,160,62,63,0,3,0,0,0,0,0,228,231,126,190,160,62,7,0,3,0,159,248,98,251,83,238,134,186,162,62,10,0,3,0,88,38,164,50,247,161,126,190,160,62,12,0,0,1,18,18,36,15,157,121,173,166,172,62,33,0,2,0,79,139,201,249,103,26,134,186,162,62,35,0,2,1,0,0,0,0,126,116,142,182,164,62,37,0,3,0,230,165,21,225,239,0,165,170,170,62,41,0,3,0,222,205,46,255,68,44,165,170,170,62,45,0,3,0,35,227,21,250,227,27,196,154,178,62,46,0,3,0,0,0,0,0,157,6,150,178,166,62,49,0,3,0,200,243,234,243,220,3,11,119,196,62,50,0,3,0,0,0,0,0,147,2,196,154,178,62,51,0,3,0,0,0,0,0,59,39,126,190,160,62,53,0,3,0,125,215,32,250,240,234,136,55,228,62,60,0,2,0,0,0,0,0,252,127,196,154,178,62,4,0,3,0,58,2,134,1,212,1,142,182,164,62,5,0,3,0,104,3,173,0,50,2,134,186,162,62,7,0,3,0,13,249,148,250,122,234,142,182,164,62,12,0,0,1,232,17,149,15,117,121,167,39,236,62,27,0,3,0,0,0,0,0,104,14,243,130,190,62,29,0,3,0,113,0,75,36,90,53,181,162,174,62,36,0,0,0,171,13,248,197,86,104,217,142,56,63,38,0,3,0,0,0,0,0,237,255,243,130,190,62,47,0,3,0,0,0,0,0,226,249,142,182,164,62,53,0,3,0,116,217,105,250,97,237,142,182,164,62,63,0,3,0,0,0,0,0,243,231,150,178,166,62,64,0,3,0,108,31,178,0,47,24,157,174,168,62,0,0,3,0,104,162,131,170,127,169,142,182,164,62,7,0,3,0,94,249,75,250,145,232,165,170,170,62,10,0,3,0,123,38,162,50,116,162,142,182,164,62,13,0,0,0,143,242,82,9,39,127,190,27,242,62,19,0,3,0,0,0,0,0,79,10,181,162,174,62,34,0,3,0,187,196,138,211,126,156,220,142,184,62,35,0,2,1,0,0,0,0,31,117,251,126,192,62,43,0,3,0,0,0,0,0,80,0,220,142,184,62,55,0,3,0,0,0,0,0,33,9,157,174,168,62,57,0,1,1,234,238,95,222,246,0,157,174,168,62,59,0,3,0,88,4,88,252,78,13,142,182,164,62,62,0,1,1,95,251,191,13,34,254,189,158,176,62,65,0,2,0,253,255,250,255,252,127,181,162,174,62,2,0,3,0,144,254,37,4,133,1,243,130,190,62,3,0,3,0,247,0,0,1,26,1,212,146,182,62,5,0,3,0,146,2,131,0,50,2,150,178,166,62,7,0,3,0,166,249,78,250,165,231,150,178,166,62,12,0,0,1,194,17,197,15,102,121,204,150,180,62,13,0,0,0,75,242,92,9,238,126,11,119,196,62,21,0,3,0,94,253,4,245,101,59,228,138,186,62,25,0,3,0,244,243,184,252,215,43,204,150,180,62,37,0,3,0,239,159,247,230,222,1,173,166,172,62,53,0,3,0,54,221,244,250,8,242,165,170,170,62,58,0,3,0,0,0,0,0,220,226,157,174,168,62,62,0,1,1,186,251,204,13,66,254,157,174,168,62,63,0,3,0,0,0,0,0,62,232,157,174,168,62,7,0,3,0,235,249,112,250,6,231,189,158,176,62,12,0,0,1,239,16,236,16,248,120,204,150,180,62,49,0,3,0,202,246,46,246,84,9,173,166,172,62,64,0,3,0,105,30,88,1,71,23,181,162,174,62,0,0,3,0,37,162,61,170,173,168,173,166,172,62,7,0,3,0,114,250,4,251,164,230,204,150,180,62,11,0,2,1,0,0,0,0,79,110,189,158,176,62,57,0,1,1,217,238,141,222,12,2,173,166,172,62,59,0,3,0,173,3,222,252,248,13,181,162,174,62,62,0,1,1,179,252,232,13,165,254,181,162,174,62,63,0,3,0,0,0,0,0,25,233,212,146,182,62,10,0,3,0,183,38,158,50,101,163,189,158,176,62,41,0,3,0,85,208,118,255,190,44,204,150,180,62,45,0,3,0,230,229,152,251,224,30,220,142,184,62,58,0,3,0,0,0,0,0,143,223,181,162,174,62,7,0,3,0,182,250,107,251,186,230,228,138,186,62,22,0,3,0,0,0,0,0,79,12,204,150,180,62,33,0,2,0,224,138,128,249,187,26,220,142,184,62,53,0,3,0,189,226,193,251,208,248,204,150,180,62,59,0,3,0,16,2,255,253,60,15,204,150,180,62,64,0,3,0,182,28,64,2,151,21,212,146,182,62,0,0,0,1,202,169,109,167,185,92,243,130,190,62,2,0,3,0,229,254,229,2,51,0,189,158,176,62,7,0,3,0,251,250,227,251,255,230,251,126,192,62,34,0,3,0,85,197,241,208,208,156,235,134,188,62,36,0,0,0,39,15,180,196,43,104,212,146,182,62,62,0,1,1,144,254,23,14,99,255,204,150,180,62,63,0,3,0,0,0,0,0,100,234,196,154,178,62,7,0,3,0,65,251,105,252,108,231,212,146,182,62,12,0,0,1,109,16,171,17,162,120,243,130,190,62,26,0,3,0,0,0,0,0,37,8,214,15,248,62,31,0,3,0,0,0,0,0,176,255,235,134,188,62,41,0,3,0,35,213,2,0,165,45,212,146,182,62,57,0,1,1,248,238,186,222,14,3,196,154,178,62,65,0,2,0,253,255,250,255,252,127,42,103,204,62,4,0,3,0,228,0,156,0,212,1,151,47,232,62,6,0,3,0,2,253,52,0,61,16,212,146,182,62,7,0,3,0,205,251,148,253,173,232,120,63,224,62,46,0,3,0,0,0,0,0,233,8,212,146,182,62,51,0,3,0,0,0,0,0,81,38,104,71,220,62,65,0,2,0,251,255,250,255,252,127,251,126,192,62,11,0,2,1,0,0,0,0,186,108,50,99,206,62,13,0,0,0,220,241,109,9,146,126,235,134,188,62,33,0,2,0,118,138,57,249,13,27,3,123,194,62,37,0,3,0,40,155,228,235,165,2,243,130,190,62,45,0,3,0,148,232,15,253,190,33,251,126,192,62,49,0,3,0,66,249,11,248,203,13,243,130,190,62,59,0,3,0,252,255,102,255,155,16,228,138,186,62,63,0,3,0,0,0,0,0,9,236,243,130,190,62,64,0,3,0,143,26,86,3,255,18,251,126,192,62,0,0,0,1,58,169,255,165,63,90,42,103,204,62,5,0,3,0,30,1,57,0,50,2,235,134,188,62,7,0,3,0,170,252,125,255,68,235,50,99,206,62,9,0,2,0,179,122,148,5,31,27,11,119,196,62,10,0,3,0,8,39,154,50,190,164,11,119,196,62,12,0,0,1,92,15,88,19,176,119,11,119,196,62,51,0,3,0,0,0,0,0,55,35,251,126,192,62,57,0,1,1,144,239,16,223,185,4,19,115,198,62,62,0,1,1,32,3,125,14,232,0,3,123,194,62,23,0,3,0,0,0,0,0,27,0,42,103,204,62,35,0,2,1,0,0,0,0,219,117,251,126,192,62,53,0,3,0,84,230,70,252,46,253,50,99,206,62,55,0,3,0,0,0,0,0,49,7,243,130,190,62,58,0,3,0,0,0,0,0,125,222,81,83,214,62,17,0,3,0,58,9,70,252,237,49,206,19,246,62,22,0,3,0,0,0,0,0,109,12,58,95,208,62,25,0,3,0,190,243,143,252,54,44,11,119,196,62,63,0,3,0,0,0,0,0,36,239,3,123,194,62,7,0,3,0,149,253,91,1,58,238,26,111,200,62,33,0,2,0,221,137,212,248,132,27,11,119,196,62,36,0,0,0,218,15,11,196,19,104,11,119,196,62,41,0,3,0,61,216,92,0,52,46,50,99,206,62,2,0,3,0,78,255,92,1,153,254,112,67,222,62,3,0,3,0,227,255,226,255,26,1,128,59,226,62,26,0,3,0,0,0,0,0,64,8,58,95,208,62,29,0,3,0,41,0,46,36,222,53,11,119,196,62,45,0,3,0,37,234,233,253,104,35,136,55,228,62,47,0,3,0,0,0,0,0,34,252,11,119,196,62,58,0,3,0,0,0,0,0,207,221,19,115,198,62,59,0,3,0,179,254,106,0,54,17,11,119,196,62,64,0,3,0,136,25,233,3,107,17,19,115,198,62,0,0,0,1,244,168,104,165,28,89,50,99,206,62,11,0,2,1,0,0,0,0,214,106,112,67,222,62,34,0,3,0,104,198,108,204,67,157,73,87,212,62,43,0,3,0,0,0,0,0,70,2,50,99,206,62,49,0,3,0,1,252,31,250,188,18,34,107,202,62,53,0,3,0,178,234,231,252,117,2,19,115,198,62,57,0,1,1,35,240,69,223,131,5,26,111,200,62,7,0,3,0,145,254,235,2,4,241,190,27,242,62,23,0,3,0,0,0,0,0,60,0,34,107,202,62,37,0,3,0,156,152,154,238,17,3,97,75,218,62,10,0,3,0,145,39,135,50,54,167,50,99,206,62,12,0,0,1,209,14,81,20,235,118,136,55,228,62,21,0,3,0,244,252,205,244,203,59,73,87,212,62,36,0,0,0,9,17,209,194,224,103,73,87,212,62,41,0,3,0,48,222,8,1,58,47,65,91,210,62,45,0,3,0,171,237,210,255,27,39,136,55,228,62,50,0,3,0,0,0,0,0,93,4,89,79,216,62,51,0,3,0,0,0,0,0,15,31,26,111,200,62,58,0,3,0,0,0,0,0,159,221,34,107,202,62,63,0,3,0,0,0,0,0,193,240,34,107,202,62,64,0,3,0,228,24,102,4,22,16,34,107,202,62,0,0,0,1,208,168,48,165,158,88,42,103,204,62,57,0,1,1,218,240,116,223,255,5,42,103,204,62,59,0,3,0,51,254,15,1,74,17,42,103,204,62,62,0,1,1,138,4,156,14,56,1,34,107,202,62,7,0,3,0,232,254,84,3,208,241,112,67,222,62,33,0,2,0,219,136,42,248,81,28,50,99,206,62,58,0,3,0,0,0,0,0,207,221,50,99,206,62,0,0,0,1,185,168,37,165,104,88,143,51,230,62,1,0,1,1,179,165,179,165,183,90,50,99,206,62,7,0,3,0,156,255,239,3,21,243,104,200,27,63,18,0,3,0,0,0,0,0,122,8,89,79]);fileData1.push.apply(fileData1,[216,62,37,0,3,0,119,148,39,243,197,3,65,91,210,62,53,0,3,0,22,238,101,253,134,6,50,99,206,62,63,0,3,0,0,0,0,0,105,241,50,99,206,62,64,0,3,0,194,24,171,4,126,15,222,11,250,62,4,0,3,0,43,254,192,254,212,1,214,15,248,62,5,0,3,0,215,253,146,255,50,2,143,51,230,62,35,0,2,1,0,0,0,0,226,118,73,87,212,62,57,0,1,1,248,241,166,223,17,6,58,95,208,62,59,0,3,0,39,254,109,1,36,17,65,91,210,62,62,0,1,1,103,5,182,14,70,1,73,87,212,62,0,0,0,1,174,168,97,165,137,88,159,43,234,62,2,0,3,0,35,0,110,254,210,251,81,83,214,62,7,0,3,0,13,1,172,4,45,245,112,67,222,62,9,0,2,0,189,122,154,5,39,27,89,79,216,62,11,0,2,1,0,0,0,0,140,105,89,79,216,62,12,0,0,1,142,14,245,20,31,118,89,79,216,62,13,0,0,0,177,241,115,9,111,126,14,246,4,63,42,0,3,0,0,0,0,0,21,8,104,71,220,62,49,0,3,0,153,254,21,252,94,23,159,43,234,62,55,0,3,0,0,0,0,0,250,4,73,87,212,62,58,0,3,0,0,0,0,0,128,222,65,91,210,62,63,0,3,0,0,0,0,0,173,241,73,87,212,62,64,0,3,0,250,24,10,5,11,15,167,39,236,62,25,0,3,0,124,243,93,252,174,44,89,79,216,62,29,0,3,0,9,0,33,36,24,54,81,83,214,62,59,0,3,0,113,254,246,1,181,16,112,67,222,62,45,0,3,0,137,240,95,1,19,42,89,79,216,62,53,0,3,0,143,240,193,253,122,9,89,79,216,62,62,0,1,1,205,5,202,14,32,1,89,79,216,62,63,0,3,0,0,0,0,0,125,241,89,79,216,62,0,0,0,1,181,168,176,165,214,88,112,67,222,62,36,0,0,0,183,17,21,194,180,103,136,55,228,62,41,0,3,0,194,227,167,1,33,48,198,23,244,62,43,0,3,0,0,0,0,0,15,5,97,75,218,62,57,0,1,1,223,242,196,223,206,5,104,71,220,62,58,0,3,0,0,0,0,0,238,223,97,75,218,62,64,0,3,0,145,25,103,5,1,15,104,71,220,62,7,0,3,0,38,2,12,5,208,246,183,31,240,62,17,0,3,0,203,8,58,252,251,49,112,67,222,62,59,0,3,0,81,255,167,2,185,15,120,63,224,62,0,0,0,1,216,168,148,166,208,89,112,67,222,62,11,0,2,1,0,0,0,0,210,104,120,63,224,62,12,0,0,1,162,14,39,21,123,117,136,55,228,62,13,0,0,0,126,241,123,9,68,126,143,51,230,62,29,0,3,0,208,255,9,36,127,54,120,63,224,62,37,0,3,0,71,146,163,245,38,4,151,47,232,62,51,0,3,0,0,0,0,0,252,27,143,51,230,62,53,0,3,0,24,246,142,254,10,16,120,63,224,62,62,0,1,1,210,5,221,14,176,0,112,67,222,62,63,0,3,0,0,0,0,0,195,240,159,43,234,62,10,0,3,0,233,39,88,50,15,169,104,71,220,62,57,0,1,1,46,243,205,223,171,5,128,59,226,62,64,0,3,0,190,26,225,5,92,15,128,59,226,62,7,0,3,0,65,3,72,5,121,248,159,43,234,62,49,0,3,0,7,1,236,253,175,27,151,47,232,62,57,0,1,1,45,245,246,223,132,4,136,55,228,62,58,0,3,0,0,0,0,0,212,225,128,59,226,62,65,0,2,0,251,255,250,255,252,127,2,252,1,63,3,0,3,0,166,254,155,254,26,1,214,15,248,62,9,0,2,0,195,122,158,5,44,27,183,31,240,62,11,0,2,1,0,0,0,0,237,102,214,15,248,62,33,0,2,0,207,135,123,247,44,29,175,35,238,62,34,0,3,0,245,198,65,202,108,157,120,63,224,62,36,0,0,0,223,17,239,193,166,103,159,43,234,62,45,0,3,0,64,243,213,2,219,44,136,55,228,62,59,0,3,0,55,0,36,3,206,14,128,59,226,62,63,0,3,0,0,0,0,0,18,240,151,47,232,62,0,0,0,1,13,169,179,167,26,91,136,55,228,62,12,0,0,1,214,14,26,21,43,117,143,51,230,62,36,0,0,0,101,18,121,193,115,103,143,51,230,62,37,0,3,0,183,144,112,247,108,4,18,244,5,63,46,0,3,0,0,0,0,0,171,10,128,59,226,62,62,0,1,1,194,5,227,14,140,0,175,35,238,62,7,0,3,0,114,5,96,5,185,251,143,51,230,62,26,0,3,0,0,0,0,0,67,8,136,55,228,62,62,0,1,1,97,6,207,14,158,0,136,55,228,62,63,0,3,0,0,0,0,0,167,240,136,55,228,62,64,0,3,0,63,27,245,5,136,15,136,55,228,62,65,0,3,0,226,255,235,255,214,127,151,47,232,62,12,0,0,1,99,15,199,20,217,116,159,43,234,62,13,0,0,0,100,241,126,9,47,126,175,35,238,62,21,0,3,0,217,252,191,244,228,59,198,23,244,62,41,0,3,0,236,232,58,2,235,48,2,252,1,63,47,0,3,0,0,0,0,0,184,253,245,255,255,62,50,0,3,0,0,0,0,0,181,5,175,35,238,62,58,0,3,0,0,0,0,0,165,228,175,35,238,62,59,0,3,0,229,1,219,3,35,13,10,248,3,63,60,0,3,0,0,0,0,0,252,127,143,51,230,62,62,0,1,1,151,5,14,15,56,0,143,51,230,62,63,0,3,0,0,0,0,0,69,239,143,51,230,62,64,0,3,0,74,27,28,6,168,15,143,51,230,62,65,0,3,0,0,0,0,0,255,127,206,19,246,62,1,0,1,1,138,165,138,165,142,90,10,248,3,63,26,0,3,0,0,0,0,0,61,8,183,31,240,62,29,0,3,0,182,255,255,35,174,54,6,250,2,63,35,0,2,1,0,0,0,0,252,119,151,47,232,62,36,0,0,0,150,18,80,193,94,103,175,35,238,62,37,0,3,0,190,142,193,249,198,4,183,31,240,62,53,0,3,0,211,249,24,255,109,20,151,47,232,62,62,0,1,1,90,0,73,16,130,254,151,47,232,62,63,0,3,0,0,0,0,0,24,231,151,47,232,62,64,0,3,0,232,25,131,6,233,15,151,47,232,62,65,0,2,0,218,0,118,0,215,126,167,39,236,62,0,0,0,1,40,169,75,168,204,91,8,119,68,63,6,0,3,0,2,253,52,0,61,16,159,43,234,62,12,0,0,1,186,15,144,20,178,116,183,31,240,62,36,0,0,0,110,19,170,192,253,102,214,15,248,62,51,0,3,0,0,0,0,0,40,25,222,11,250,62,57,0,1,1,110,248,29,224,137,2,159,43,234,62,62,0,1,1,42,250,248,17,110,252,159,43,234,62,63,0,3,0,0,0,0,0,249,222,159,43,234,62,64,0,3,0,59,24,240,6,139,15,159,43,234,62,65,0,2,0,177,1,51,1,76,125,206,19,246,62,2,0,3,0,183,0,63,253,231,250,198,23,244,62,10,0,3,0,4,40,48,50,33,170,167,39,236,62,12,0,0,1,238,15,109,20,145,116,183,31,240,62,13,0,0,0,89,241,128,9,37,126,183,31,240,62,45,0,3,0,140,244,135,3,44,46,214,15,248,62,49,0,3,0,71,3,161,255,170,31,222,11,250,62,55,0,3,0,0,0,0,0,217,3,167,39,236,62,62,0,1,1,164,245,136,19,124,250,167,39,236,62,63,0,3,0,0,0,0,0,172,217,167,39,236,62,64,0,3,0,3,23,53,7,97,13,167,39,236,62,65,0,2,0,9,2,35,2,141,123,175,35,238,62,0,0,0,1,53,169,151,168,37,92,175,35,238,62,12,0,0,1,214,15,125,20,117,116,254,253,0,63,25,0,3,0,146,243,110,252,134,44,198,23,244,62,27,0,3,0,0,0,0,0,105,14,175,35,238,62,62,0,1,1,134,242,37,21,195,248,175,35,238,62,63,0,3,0,0,0,0,0,233,214,175,35,238,62,64,0,3,0,124,22,121,7,211,10,175,35,238,62,65,0,2,0,170,1,86,3,83,122,214,15,248,62,0,0,0,1,100,169,248,169,188,93,206,19,246,62,7,0,3,0,222,6,54,5,189,253,190,27,242,62,12,0,0,1,40,14,161,21,79,116,198,23,244,62,21,0,3,0,221,252,193,244,225,59,237,3,254,62,34,0,3,0,113,199,120,200,126,157,198,23,244,62,37,0,3,0,89,141,110,251,6,5,222,11,250,62,58,0,3,0,0,0,0,0,31,232,214,15,248,62,59,0,3,0,107,3,103,4,121,11,183,31,240,62,62,0,1,1,214,241,195,22,146,247,183,31,240,62,63,0,3,0,0,0,0,0,243,215,183,31,240,62,64,0,3,0,85,23,198,7,43,9,183,31,240,62,65,0,2,0,18,0,233,4,192,122,237,3,254,62,11,0,2,1,0,0,0,0,210,101,206,19,246,62,13,0,0,0,101,241,126,9,48,126,237,3,254,62,17,0,3,0,242,8,62,252,246,49,6,250,2,63,29,0,3,0,234,255,20,36,80,54,229,7,252,62,36,0,0,0,228,20,162,191,71,102,214,15,248,62,45,0,3,0,53,246,107,4,218,47,198,23,244,62,53,0,3,0,67,251,77,255,27,22,190,27,242,62,62,0,1,1,81,242,93,24,161,246,190,27,242,62,63,0,3,0,0,0,0,0,241,218,190,27,242,62,64,0,3,0,228,24,17,8,149,7,190,27,242,62,65,0,2,0,208,253,171,6,201,123,198,23,244,62,12,0,0,1,26,14,181,21,47,116,14,246,4,63,19,0,3,0,0,0,0,0,60,10,69,218,18,63,23,0,3,0,0,0,0,0,35,0,198,23,244,62,62,0,1,1,1,243,1,26,205,245,198,23,244,62,63,0,3,0,0,0,0,0,103,222,198,23,244,62,64,0,3,0,197,26,93,8,178,5,198,23,244,62,65,0,2,0,45,251,112,8,199,124,237,3,254,62,10,0,3,0,249,39,4,50,14,171,254,253,0,63,12,0,0,1,186,14,156,21,71,115,45,230,12,63,21,0,3,0,43,253,234,244,150,59,96,204,25,63,27,0,3,0,0,0,0,0,211,14,254,253,0,63,37,0,3,0,90,138,28,255,147,5,245,255,255,62,41,0,3,0,127,236,158,2,113,49,2,252,1,63,43,0,3,0,0,0,0,0,70,6,245,255,255,62,53,0,3,0,95,255,229,255,229,26,206,19,246,62,62,0,1,1,9,244,161,27,27,245,206,19,246,62,63,0,3,0,0,0,0,0,141,226,206,19,246,62,64,0,3,0,225,28,157,8,120,3,206,19,246,62,65,0,2,0,85,248,66,10,178,125,14,246,4,63,1,0,0,1,178,165,75,165,78,90,254,253,0,63,2,0,3,0,84,1,49,252,74,250,254,253,0,63,7,0,3,0,222,8,183,4,91,0,37,234,10,63,13,0,0,0,187,241,114,9,119,126,18,244,5,63,22,0,3,0,0,0,0,0,100,12,214,15,248,62,62,0,1,1,72,245,74,29,128,244,222,11,250,62,63,0,3,0,0,0,0,0,21,236,214,15,248,62,64,0,3,0,42,31,203,8,128,0,214,15,248,62,65,0,2,0,111,244,56,13,98,126,245,255,255,62,0,0,0,1,98,169,199,170,164,94,18,244,5,63,5,0,3,0,170,252,86,255,50,2,245,255,255,62,9,0,2,0,192,122,156,5,41,27,2,252,1,63,31,0,3,0,0,0,0,0,184,255,6,250,2,63,33,0,2,0,81,135,41,247,150,29,10,248,3,63,45,0,3,0,75,249,17,6,240,50,229,7,252,62,49,0,3,0,226,3,23,0,189,32,6,250,2,63,51,0,3,0,0,0,0,0,228,22,245,255,255,62,59,0,3,0,55,4,181,4,109,10,222,11,250,62,62,0,1,1,157,246,195,30,9,244,222,11,250,62,64,0,3,0,45,33,215,8,138,253,222,11,250,62,65,0,2,0,186,242,222,13,176,126,22,242,6,63,4,0,3,0,68,253,34,254,212,1,34,236,9,63,55,0,3,0,0,0,0,0,65,2,254,253,0,63,57,0,1,1,181,249,42,224,250,1,254,253,0,63,58,0,3,0,0,0,0,0,5,234,229,7,252,62,62,0,1,1,250,247,215,31,204,243,229,7,252,62,63,0,3,0,0,0,0,0,37,240,229,7,252,62,64,0,3,0,89,34,176,8,36,251,237,3,254,62,65,0,2,0,203,254,216,254,93,125,18,244,5,63,36,0,0,0,16,23,38,190,38,101,10,248,3,63,49,0,3,0,157,5,104,1,201,35,237,3,254,62,62,0,1,1,4,249,136,32,169,243,237,3,254,62,63,0,3,0,0,0,0,0,247,242,237,3,254,62,64,0,3,0,1,35,138,8,128,249,14,246,4,63,10,0,3,0,196,39,176,49,226,171,14,246,4,63,11,0,2,1,0,0,0,0,62,101,92,206,24,63,17,0,3,0,139,9,78,252,227,49,10,248,3,63,34,0,3,0,178,199,158,199,124,157,245,255,255,62,62,0,1,1,38,249,171,32,130,243,245,255,255,62,63,0,3,0,0,0,0,0,53,243,245,255,255,62,64,0,3,0,53,35,153,8,82,249,245,255,255,62,65,0,2,0,143,255,233,253,61,125,6,250,2,63,0,0,3,0,19,161,60,169,26,171,10,248,3,63,9,0,2,0,189,122,154,5,39,27,26,240,7,63,41,0,3,0,215,240,24,3,12,50,57,224,15,63,50,0,3,0,0,0,0,0,243,6,6,250,2,63,53,0,3,0,78,1,45,0,35,29,6,250,2,63,59,0,3,0,107,4,221,4,8,10,254,253,0,63,62,0,1,1,252,248,151,32,99,243,254,253,0,63,63,0,3,0,0,0,0,0,143,242,254,253,0,63,64,0,3,0,47,35,183,8,167,249,254,253,0,63,65,0,2,0,203,254,217,254,93,125,18,244,5,63,2,0,3,0,167,1,116,251,23,250,10,248,3,63,7,0,3,0,199,9,102,4,107,1,18,244,5,63,12,0,0,1,44,15,156,21,177,114,112,196,29,63,25,0,3,0,228,243,172,252,243,43,10,248,3,63,37,0,3,0,47,137,149,0,203,5,10,248,3,63,57,0,1,1,111,250,51,224,214,1,10,248,3,63,58,0,3,0,0,0,0,0,234,234,10,248,3,63,62,0,1,1,22,249,178,32,51,243,10,248,3,63,63,0,3,0,0,0,0,0,75,242,6,250,2,63,64,0,3,0,50,35,220,8,186,249,30,238,8,63,65,0,2,0,202,254,236,254,112,125,34,236,9,63,3,0,3,0,88,254,74,254,26,1,57,224,15,63,31,0,3,0,0,0,0,0,203,255,57,224,15,63,43,0,3,0,0,0,0,0,18,8,49,228,13,63,47,0,3,0,0,0,0,0,179,254,14,246,4,63,0,0,3,0,54,161,12,169,35,171,61,222,16,63,29,0,3,0,46,0,48,36,212,53,22,242,6,63,33,0,2,0,15,135,253,246,206,29,30,238,8,63,35,0,2,1,0,0,0,0,66,120,18,244,5,63,51,0,3,0,0,0,0,0,253,21,22,242,6,63,53,0,3,0,194,3,136,0,247,31,18,244,5,63,59,0,3,0,42,4,244,4,250,9,18,244,5,63,64,0,3,0,217,34,2,9,163,249,22,242,6,63,7,0,3,0,150,10,11,4,56,2,53,226,14,63,9,0,2,0,181,122,149,5,32,27,73,216,19,63,26,0,3,0,0,0,0,0,47,8,26,240,7,63,34,0,3,0,216,199,60,199,103,157,34,236,9,63,37,0,3,0,11,135,85,3,52,6,34,236,9,63,45,0,3,0,98,251,45,7,1,53,37,234,10,63,49,0,3,0,113,7,204,2,252,38,22,242,6,63,57,0,1,1,211,250,58,224,251,1,22,242,6,63,58,0,3,0,0,0,0,0,43,235,84,210,22,63,60,0,2,0,0,0,1,0,249,127,22,242,6,63,62,0,1,1,88,249,210,32,80,243,26,240,7,63,63,0,3,0,0,0,0,0,163,242,30,238,8,63,0,0,0,1,115,168,203,170,110,94,26,240,7,63,1,0,0,1,181,165,72,165,75,90,22,242,6,63,10,0,3,0,201,39,136,49,26,172,26,240,7,63,11,0,2,1,0,0,0,0,86,101,73,216,19,63,19,0,3,0,0,0,0,0,37,10,80,212,21,63,42,0,3,0,0,0,0,0,80,8,26,240,7,63,2,0,3,0,182,1,61,251,74,250,37,234,10,63,5,0,3,0,105,252,73,255,50,2,30,238,8,63,12,0,0,1,157,15,135,21,96,114,65,220,17,63,22,0,3,0,0,0,0,0,91,12,26,240,7,63,36,0,0,0,177,23,181,189,187,100,92,206,24,63,46,0,3,0,0,0,0,0,194,11,30,238,8,63,51,0,3,0,0,0,0,0,32,21,30,238,8,63,59,0,3,0,122,3,254,4,89,10,34,236,9,63,64,0,3,0,191,33,35,9,94,249,49,228,13,63,4,0,3,0,37,253,13,254,212,1,30,238,8,63,7,0,3,0,242,10,182,3,77,2,30,238,8,63,10,0,3,0,144,39,43,49,26,172,61,222,16,63,33,0,2,0,125,134,159,246,74,30,37,234,10,63,53,0,3,0,13,6,221,0,154,34,34,236,9,63,57,0,1,1,109,250,49,224,21,2,37,234,10,63,58,0,3,0,0,0,0,0,161,234,34,236,9,63,62,0,1,1,16,249,245,32,145,243,57,224,15,63,1,0,0,1,187,165,66,165,69,90,37,234,10,63,2,0,3,0,188,1,24,251,63,251,37,234,10,63,11,0,2,1,0,0,0,0,237,101,34,236,9,63,34,0,3,0,221,199,91,199,67,157,30,238,8,63,36,0,0,0,15,24,115,189,117,100,30,238,8,63,41,0,3,0,88,241,38,3,29,50,88,208,23,63,63,0,3,0,0,0,0,0,209,244,41,232,11,63,0,0,0,1,211,167,78,170,179,93,37,234,10,63,7,0,3,0,37,11,81,3,0,2,41,232,11,63,10,0,3,0,211,38,78,48,193,171,37,234,10,63,12,0,0,1,42,16,74,21,53,114,69,218,18,63,35,0,2,1,0,0,0,0,76,120,41,232,11,63,36,0,0,0,103,25,136,188,145,99,57,224,15,63,41,0,3,0,163,244,130,3,141,50,57,224,15,63,51,0,3,0,0,0,0,0,73,19,41,232,11,63,59,0,3,0,122,2,252,4,15,11,57,224,15,63,65,0,2,0,202,254,16,255,143,125,37,234,10,63,3,0,3,0,86,254,72,254,26,1,49,228,13,63,34,0,3,0,210,199,26,200,213,156,57,224,15,63,37,0,3,0,44,133,204,5,144,6,49,228,13,63,45,0,3,0,168,252,219,7,66,54,92,206,24,63,55,0,3,0,0,0,0,0,214,0,45,230,12,63,57,0,1,1,100,249,26,224,21,2,49,228,13,63,62,0,1,1,225,247,34,33,0,244,49,228,13,63,64,0,3,0,28,32,69,9,21,249,53,226,14,63,2,0,3,0,178,1,32,251,74,253,61,222,16,63,3,0,3,0,97,254,83,254,26,1,73,216,19,63,5,0,3,0,153,252,83,255,50,2,49,228,13,63,7,0,3,0,59,11,170,2,9,1,53,226,14,63,11,0,2,1,0,0,0,0,59,103,53,226,14,63,12,0,0,1,175,17,136,20,245,113,61,222,16,63,13,0,0,0,217,241,109,9,144,126,45,230,12,63,49,0,3,0,236,7,42,3,212,39,57,224,15,63,53,0,3,0,175,8,62,1,158,37,53,226,14,63,58,0,3,0,0,0,0,0,111,233,57,224,15,63,0,0,0,1,210,166,104,169,97,92,53,226,14,63,10,0,3,0,208,37,56,47,33,171,49,228,13,63,36,0,0,0,106,26,217,187,239,98,57,224,15,63,59,0,3,0,189,0,234,4,108,12,139,182,36,63,21,0,3,0,127,253,22,245,70,59,69,218,18,63,49,0,3,0,64,9,45,4,37,42,73,216,19,63,57,0,1,1,71,246,200,223,36,2,88,208,23,63,4,0,3,0,86,253,46,254,212,1,73,216,19,63,7,0,3,0,20,11,137,1,85,254,65,220,17,63,34,0,3,0,185,199,36,201,86,156,69,218,18,63,36,0,0,0,239,28,31,186,123,97,61,222,16,63,45,0,3,0,140,253,84,8,32,55,116,194,30,63,47,0,3,0,0,0,0,0,179,255,69,218,18,63,62,0,1,1,25,246,81,33,173,244,69,218,18,63,64,0,3,0,130,29,106,9,208,248,73,216,19,63,2,0,3,0,154,1,79,251,12,0,73,216,19,63,9,0,2,0,178,122,147,5,29,27,61,222,16,63,10,0,3,0,24,37,120,46,165,170,76,214,20,63,11,0,2,1,0,0,0,0,106,105,73,216,19,63,12,0,0,1,187,19,131,19,192,113,84,210,22,63,58,0,3,0,0,0,0,0,51,230,76,214,20,63,0,0,0,1,102,165,2,168,80,90,69,218,18,63,1,0,0,1,189,165,64,165,67,90,162,170,42,63,31,0,3,0,0,0,0,0,239,255,84,210,22,63,37,0,3,0,86,131,73,8,237,6,80,212,21,63,41,0,3,0,23,247,198,3,221,50,108,198,28,63,43,0,3,0,0,0,0,0,78,9,116,194,30,63,50,0,3,0,0,0,0,0,197,7,92,206,24,63,51,0,3,0,0,0,0,0,79,17,76,214,20,63,53,0,3,0,10,11,150,1,77,40,80,212,21,63,59,0,3,0,132,253,171,4,215,14,104,200,27,63,65,0,2,0,199,254,114,255,234,125,88,208,23,63,3,0,3,0,116,254,103,254,26,1,73,216,19,63,10,0,3,0,27,36,108,45,236,169,84,210,22,63,13,0,0,0,246,241,105,9,168,126,80,212,21,63,29,0,3,0,69,0,57,36,170,53,69,218,18,63,33,0,2,0,100,134,142,246,97,30,73,216,19,63,45,0,3,0,98,254,197,8,241,55,158,172,41,63,22,0,3,0,0,0,0,0,76,12,80,212,21,63,34,0,3,0,164,199,6,202,237,155,80,212,21,63,1,0,0,1,191,165,62,165,65,90,166,168,43,63,23,0,3,0,0,0,0,0,1,0,112,196,29,63,33,0,2,0,239,133,66,246,198,30,147,178,38,63,35,0,2,1,0,0,0,0,92,120,76,214,20,63,36,0,0,0,203,29,130,185,13,97,96,204,25,63,49,0,3,0,144,10,44,5,109,44,80,212,21,63,62,0,1,1,90,245,102,33,32,245,100,202,26,63,64,0,3,0,171,24,161,9,92,248,84,210,22,63,2,0,3,0,145,1,98,251,68,1,92,206,24,63,5,0,3,0,170,252,86,255,50,2,84,210,22,63,7,0,3,0,27,11,70,1,49,253,84,210,22,63,9,0,2,0,176,122,145,5,28,27,84,210,22,63,10,0,3,0,106,35,164,44,93,169,84,210,22,63,12,0,0,1,180,20,29,19,166,113,119,192,31,63,19,0,3,0,0,0,0,0,21,10,162,170,42,63,26,0,3,0,0,0,0,0,26,8,100,202,26,63,45,0,3,0,19,0,170,9,148,57,80,212,21,63,57,0,1,1,160,245,178,223,72,2,104,200,27,63,0,0,1,1,255,163,201,165,9,87,92,206,24,63,11,0,2,1,0,0,0,0,106,106,88,208,23,63,36,0,0,0,193,30,195,184,177,96,92,206,24,63,53,0,3,0,180,12,211,1,49,42,96,204,25,63,1,0,0,1,193,165,60,165,63,90,131,186,34,63,29,0,3,0,122,0,79,36,74,53,96,204,25,63,34,0,3,0,161,199,102,202,183,155,100,202,26,63,41,0,3,0,214,248,247,3,21,51,100,202,26,63,42,0,3,0,0,0,0,0,93,8,92,206,24,63,57,0,1,1,36,245,153,223,173,2,119,192,31,63,59,0,3,0,145,247,252,3,224,18,92,206,24,63,62,0,1,1,44,245,118,33,151,245,104,200,27,63,2,0,3,0,144,1,97,251,64,2,100,202,26,63,7,0,3,0,108,11,103,1,41,252,108,198,28,63,9,0,2,0,172,122,143,5,25,27,96,204,25,63,10,0,3,0,31,35,55,44,14,169,96,204,25,63,12,0,0,1,76,21,5,19,136,113,92,206,24,63,13,0,0,0,0,242,103,9,176,126,100,202,26,63,37,0,3,0,118,130,127,9,26,7,112,196,29,63,58,0,3,0,0,0,0,0,110,227,108,198,28,63,60,0,2,0,0,0,0,0,249,127,178,162,46,63,3,0,3,0,116,254,102,254,26,1,151,176,39,63,4,0,3,0,86,253,46,254,212,1,104,200,27,63,36,0,0,0,123,31,8,184,136,96,108,198,28,63,63,0,3,0,0,0,0,0,88,245,201,150,52,63,5,0,3,0,148,252,82,255,50,2,108,198,28,63,11,0,2,1,0,0,0,0,33,107,123,190,32,63,13,0,0,0,34,242,98,9,205,126,135,184,35,63,17,0,3,0,192,9,84,252,220,49,119,192,31,63,46,0,3,0,0,0,0,0,8,12,123,190,32,63,51,0,3,0,0,0,0,0,255,15,104,200,27,63,53,0,3,0,208,13,252,1,115,43,131,186,34,63,55,0,3,0,0,0,0,0,54,0,108,198,28,63,57,0,1,1,243,244,128,223,85,3,108,198,28,63,62,0,1,1,83,245,131,33,53,246,112,196,29,63,1,0,0,1,195,165,58,165,61,90,119,192,31,63,10,0,3,0,3,35,204,43,173,168,116,194,30,63,12,0,0,1,223,21,33,19,99,113,158,172,41,63,27,0,3,0,0,0,0,0,254,14,116,194,30,63,34,0,3,0,165,199,143,202,152,155,116,194,30,63,49,0,3,0,82,11,192,5,189,45,116,194,30,63,7,0,3,0,223,11,240,1,18,251,112,196,29,63,37,0,3,0,228,129,74,10,56,7,104,200,27,63,41,0,3,0,38,249,255,3,30,51,174,164,45,63,42,0,3,0,0,0,0,0,115,8,112,196,29,63,45,0,3,0,174,0,252,9,42,58,127,188,33,63,64,0,3,0,119,20,193,9,66,248,112,196,29,63,0,0,1,1,80,164,37,165,23,86,123,190,32,63,2,0,3,0,145,1,96,251,193,2,143,180,37,63,18,0,3,0,0,0,0,0,120,8,123,190,32,63,36,0,0,0,37,32,72,183,146,96,127,188,33,63,41,0,3,0,191,250,44,4,80,51,123,190,32,63,53,0,3,0,93,15,54,2,51,45,158,172,41,63,65,0,2,0,196,254,6,0,122,126,116,194,30,63,9,0,2,0,171,122,142,5,24,27,119,192,31,63,11,0,2,1,0,0,0,0,147,107,147,178,38,63,43,0,3,0,0,0,0,0,220,9,123,190,32,63,57,0,1,1,7,245,110,223,3,4,162,170,42,63,60,0,2,0,0,0,0,0,255,127,127,188,33,63,62,0,1,1,172,245,136,33,237,246,127,188,33,63,63,0,3,0,0,0,0,0,149,245,123,190,32,63,0,0,1,1,201,164,51,164,184,84,139,182,36,63,1,0,2,1,55,165,198,165,58,90,131,186,34,63,25,0,3,0,240,243,181,252,222,43,127,188,33,63,33,0,2,0,209,133,47,246,225,30,127,188,33,63,37,0,3,0,67,129,45,11,89,7,131,186,34,63,45,0,3,0,127,1,106,10,244,58,131,186,34,63,58,0,3,0,0,0,0,0,199,225,135,184,35,63,7,0,3,0,146,12,16,3,144,249,162,170,42,63,9,0,2,0,161,122,136,5,15,27,135,184,35,63,12,0,0,1,45,22,65,19,103,113,151,176,39,63,34,0,3,0,178,199,129,202,145,155,158,172,41,63,47,0,3,0,0,0,0,0,252,255,135,184,35,63,49,0,3,0,229,11,48,6,188,46,166,168,43,63,50,0,3,0,0,0,0,0,12,8,143,180,37,63,10,0,3,0,90,35,187,43,144,168,139,182,36,63,11,0,2,1,0,0,0,0,42,108,158,172,41,63,19,0,3,0,0,0,0,0,9,10,151,176,39,63,46,0,3,0,0,0,0,0,56,12,135,184,35,63,59,0,3,0,92,245,166,3,53,20,143,180,37,63,0,0,1,1,141,165,193,162,175,82,151,176,39,63,2,0,3,0,149,1,96,251,251,2,139,182,36,63,13,0,0,0,50,242,96,9,217,126,135,184,35,63,36,0,0,0,117,32,5,183,165,96,151,176,39,63,51,0,3,0,0,0,0,0,83,15,135,184,35,63,53,0,3,0,22,16,81,2,4,46,143,180,37,63,57,0,1,1,69,245,99,223,210,4,151,176,39,63,33,0,2,0,180,133,28,246,250,30,135,184,35,63,37,0,3,0,2,129,137,11,102,7,147,178,38,63,41,0,3,0,160,251,68,4,107,51,147,178,38,63,62,0,1,1,219,245,132,33,143,247,135,184,35,63,63,0,3,0,0,0,0,0,138,245,139,182,36,63,64,0,3,0,220,18,199,9,84,248,158,172,41,63,25,0,3,0,0,244,193,252,193,43,158,172,41,63,29,0,3,0,149,0,90,36,25,53,143,180,37,63,45,0,3,0,219,1,155,10,75,59,170,166,44,63,55,0,3,0,0,0,0,0,255,255,139,182,36,63,58,0,3,0,0,0,0,0,53,225,147,178,38,63,7,0,3,0,11,13,237,3,148,248,151,176,39,63,12,0,0,1,64,22,40,19,179,113,158,172,41,63,17,0,3,0,221,9,87,252,216,49,143,180,37,63,36,0,0,0,171,32,24,183,161,96,151,176,39,63,37,0,3,0,170,128,7,12,120,7,147,178,38,63,49,0,3,0,33,12,94,6,37,47,147,178,38,63,53,0,3,0,158,16,100,2,157,46,151,176,39,63,59,0,3,0,116,243,76,3,84,21,151,176,39,63,63,0,3,0,0,0,0,0,49,245,162,170,42,63,1,0,0,1,200,165,53,165,56,90,170,166,44,63,11,0,2,1,0,0,0,0,222,108,158,172,41,63,13,0,0,0,71,242,93,9,235,126,143,180,37,63,21,0,3,0,130,253,23,245,67,59,155,174,40,63,58,0,3,0,0,0,0,0,63,224,155,174,40,63,64,0,3,0,11,17,194,9,163,248,158,172,41,63,0,0,1,1,29,166,199,161,108,81,166,168,43,63,10,0,3,0,234,35,196,43,155,168,178,162,46,63,18,0,3,0,0,0,0,0,88,8,162,170,42,63,21,0,3,0,164,253,41,245,34,59,147,178,38,63,36,0,0,0,196,32,42,183,159,96,162,170,42,63,45,0,3,0,23,2,186,10,133,59,166,168,43,63,57,0,1,1,103,245,104,223,165,5,170,166,44,63,7,0,3,0,11,14,240,5,106,246,221,140,57,63,35,0,2,1,0,0,0,0,113,120,151,176,39,63,36,0,0,0,210,32,36,183,175,96,170,166,44,63,41,0,3,0,230,251,76,4,115,51,182,160,47,63,43,0,3,0,0,0,0,0,235,9,170,166,44,63,49,0,3,0,68,12,121,6,97,47,166,168,43,63,53,0,3,0,230,16,110,2,238,46,155,174,40,63,62,0,1,1,213,245,128,33,202,247,170,166,44,63,2,0,3,0,152,1,96,251,1,3,194,154,50,63,4,0,3,0,77,253,40,254,212,1,155,174,40,63,12,0,0,1,57,22,255,18,244,113,166,168,43,63,33,0,2,0,175,133,24,246,255,30,166,168,43,63,34,0,3,0,183,199,97,202,160,155,155,174,40,63,36,0,0,0,211,32,242,182,217,96,162,170,42,63,37,0,3,0,150,128,36,12,124,7,174,164,45,63,46,0,3,0,0,0,0,0,59,12,198,152,51,63,51,0,3,0,0,0,0,0,47,15,162,170,42,63,59,0,3,0,76,242,7,3,238,21,170,166,44,63,63,0,3,0,0,0,0,0,59,244,158,172,41,63,12,0,0,1,25,22,111,18,195,114,158,172,41,63,36,0,0,0,190,32,106,182,47,97,170,166,44,63,58,0,3,0,0,0,0,0,133,223,170,166,44,63,62,0,1,1,129,245,119,33,52,248,166,168,43,63,64,0,3,0,255,15,180,9,255,248,166,168,43,63,0,0,1,1,94,166,95,161,244,80,162,170,42,63,12,0,0,1,4,22,30,18,65,115,162,170,42,63,13,0,0,0,97,242,89,9,1,127,166,168,43,63,17,0,3,0,63,10,97,252,204,49,170,166,44,63,19,0,3,0,0,0,0,0,198,9,170,166,44,63,22,0,3,0,0,0,0,0,42,12,166,168,43,63,25,0,3,0,49,244,229,252,107,43,166,168,43,63,27,0,3,0,0,0,0,0,53,15,162,170,42,63,29,0,3,0,174,0,100,36,235,52,166,168,43,63,36,0,0,0,133,32,36,181,246,97,31,107,74,63,47,0,3,0,0,0,0,0,217,255,182,160,47,63,65,0,2,0,194,254,73,0,186,126,217,142,56,63,1,0,0,1,202,165,50,165,54,90,170,166,44,63,9,0,2,0,133,122,117,5,248,26,166,168,43,63,12,0,0,1,52,22,233,18,63,114,166,168,43,63,13,0,0,0,156,242,81,9,49,127,166,168,43,63,21,0,3,0,210,253,64,245,247,58,170,166,44,63,26,0,3,0,0,0,0,0,247,7,166,168,43,63,29,0,3,0,229,0,122,36,136,52,170,166,44,63,31,0,3,0,0,0,0,0,35,0,182,160,47,63,37,0,3,0,142,128,60,12,129,7,190,156,49,63,45,0,3,0,33,2,193,10,141,59,178,162,46,63,59,0,3,0,59,241,170,2,118,22,43,101,77,63,60,0,2,0,0,0,0,0,255,127,178,162,46,63,0,0,1,1,180,166,223,160,127,80,174,164,45,63,10,0,3,0,237,35,119,43,72,168,170,166,44,63,12,0,0,1,103,22,218,19,20,113,170,166,44,63,13,0,3,0,94,127,41,243,59,9,170,166,44,63,17,0,3,0,226,10,114,252,183,49,170,166,44,63,21,0,3,0,63,254,122,245,142,58,174,164,45,63,23,0,3,0,0,0,0,0,173,255,170,166,44,63,25,0,3,0,129,244,35,253,218,42,170,166,44,63,27,0,3,0,0,0,0,0,144,15,170,166,44,63,29,0,3,0,105,1,176,36,149,51,201,150,52,63,33,0,2,0,171,133,19,246,5,31,190,156,49,63,34,0,3,0,189,199,58,202,175,155,170,166,44,63,36,0,0,0,108,32,154,180,77,98,240,130,62,63,50,0,3,0,0,0,0,0,220,7,190,156,49,63,53,0,3,0,237,16,104,2,250,46,182,160,47,63,57,0,1,1,35,245,120,223,25,6,182,160,47,63,64,0,3,0,26,15,141,9,166,249,217,142,56,63,2,0,3,0,172,1,32,251,22,3,194,154,50,63,7,0,3,0,38,15,58,8,12,244,201,150,52,63,9,0,2,0,246,120,109,4,183,25,186,158,48,63,11,0,2,1,0,0,0,0,114,109,174,164,45,63,12,0,0,1,105,22,15,20,5,113,174,164,45,63,13,0,3,0,125,126,101,244,11,9,174,164,45,63,17,0,3,0,77,12,151,252,135,49,201,150,52,63,19,0,3,0,0,0,0,0,138,6,174,164,45,63,21,0,3,0,51,255,250,245,164,57,217,142,56,63,22,0,3,0,0,0,0,0,178,9,174,164,45,63,25,0,3,0,54,245,172,253,152,41,217,142,56,63,26,0,3,0,0,0,0,0,18,5,194,154,50,63,27,0,3,0,0,0,0,0,220,20,174,164,45,63,29,0,3,0,144,2,40,37,118,49,217,142,56,63,31,0,3,0,0,0,0,0,99,4,178,162,46,63,36,0,0,0,82,32,32,180,182,98,194,154,50,63,41,0,3,0,230,251,79,4,118,51,182,160,47,63,49,0,3,0,69,12,121,6,96,47,31,107,74,63,55,0,3,0,0,0,0,0,219,255,213,144,55,63,58,0,3,0,0,0,0,0,18,222,186,158,48,63,62,0,1,1,197,244,109,33,166,248,194,154,50,63,63,0,3,0,0,0,0,0,116,242,198,152,51,63,10,0,3,0,131,35,226,41,204,166,178,162,46,63,12,0,0,1,98,22,31,20,49,113,182,160,47,63,13,0,3,0,100,124,67,247,157,8,178,162,46,63,17,0,3,0,2,14,197,252,78,49,178,162,46,63,21,0,3,0,89,0,147,246,137,56,190,156,49,63,23,0,3,0,0,0,0,0,165,254,182,160,47,63,25,0,3,0,217,246,232,254,169,38,178,162,46,63,29,0,3,0,243,3,179,37,231,46,24,111,72,63,42,0,3,0,0,0,0,0,76,8,24,111,72,63,46,0,3,0,0,0,0,0,248,11,194,154,50,63,0,0,1,1,31,167,72,160,60,80,201,150,52,63,3,0,3,0,106,254,92,254,26,1,190,156,49,63,12,0,0,1,132,22,25,21,181,112,194,154,50,63,17,0,3,0,85,20,109,253,109,48,217,142,56,63,18,0,3,0,0,0,0,0,224,7,190,156,49,63,21,0,3,0,139,3,65,248,108,53,194,154,50,63,29,0,3,0,23,9,165,39,71,37,205,148,53,63,36,0,0,0,212,31,67,179,247,99,194,154,50,63,59,0,3,0,146,240,69,2,204,22,194,154,50,63,13,0,3,0,63,121,104,251,252,7,201,150,52,63,25,0,3,0,205,250,225,1,139,31,190,156,49,63,37,0,3,0,142,128,66,12,130,7,244,128,63,63,43,0,3,0,0,0,0,0,217,9,209,146,54,63,49,0,3,0,71,12,122,6,93,47,213,144,55,63,54,0,3,0,0,0,0,0,204,255,198,152,51,63,57,0,1,1,119,244,154,223,164,6,201,150,52,63,64,0,3,0,145,14,55,9,167,250,240,130,62,63,65,0,2,0,191,254,223,0,81,127,205,148,53,63,11,0,2,1,0,0,0,0,179,109,205,148,53,63,62,0,1,1,108,243,104,33,116,249,201,150,52,63,12,0,0,1,100,22,105,22,47,112,205,148,53,63,21,0,3,0,203,7,127,250,56,49,221,140,57,63,23,0,3,0,0,0,0,0,144,252,201,150,52,63,34,0,3,0,193,199,39,202,176,155,213,144,55,63,37,0,3,0,143,128,88,12,134,7,31,107,74,63,45,0,3,0,35,2,208,10,139,59,229,136,59,63,53,0,3,0,240,16,89,2,5,47,213,144,55,63,0,0,2,1,153,167,12,160,88,80,16,115,70,63,4,0,3,0,251,252,240,253,212,1,221,140,57,63,7,0,3,0,145,16,4,11,101,241,201,150,52,63,13,0,3,0,20,119,44,254,143,7,205,148,53,63,17,0,3,0,13,25,236,253,186,47,209,146,54,63,27,0,3,0,0,0,0,0,99,24,209,146,54,63,29,0,3,0,47,14,110,41,135,27,221,140,57,63,41,0,3,0,230,251,83,4,122,51,217,142,56,63,59,0,3,0,35,240,146,1,236,22,209,146,54,63,63,0,3,0,0,0,0,0,25,241,209,146,54,63,10,0,3,0,38,35,21,41,10,166,217,142,56,63,51,0,3,0,0,0,0,0,39,15,217,142,56,63,57,0,1,1,47,243,219,223,114,7,248,126,64,63,3,0,3,0,71,254,56,254,26,1,221,140,57,63,5,0,3,0,117,252,76,255,50,2,205,148,53,63,9,0,2,0,195,120,76,4,143,25,209,146,54,63,12,0,0,1,54,22,111,23,210,111,213,144,55,63,13,0,3,0,178,115,98,2,230,6,221,140,57,63,19,0,3,0,0,0,0,0,117,4,217,142,56,63,25,0,3,0,249,253,65,4,204,25,233,134,60,63,33,0,2,0,168,133,13,246,11,31,229,136,59,63,34,0,3,0,206,199,246,201,176,155,225,138,58,63,64,0,3,0,150,14,162,8,6,252,221,140,57,63,9,0,2,0,235,119,177,3,222,24,217,142,56,63,11,0,2,1,0,0,0,0,189,109,217,142,56,63,17,0,3,0,192,29,108,254,254,46,217,142,56,63,21,0,3,0,249,10,47,252,7,46,225,138,58,63,36,0,0,0,34,31,221,178,234,100,229,136,59,63,62,0,1,1,110,241,105,33,168,250,213,144,55,63,10,0,3,0,239,34,239,40,186,165,213,144,55,63,12,0,0,1,22,22,88,24,182,111,217,142,56,63,27,0,3,0,0,0,0,0,38,26,217,142,56,63,29,0,3,0,183,16,68,42,156,22,240,130,62,63,49,0,3,0,73,12,123,6,88,47,225,138,58,63,63,0,3,0,0,0,0,0,176,239,233,134,60,63,0,0,2,1,7,168,161,160,216,80,217,142,56,63,10,0,3,0,217,34,143,40,127,165,217,142,56,63,12,0,0,1,251,21,140,24,114,111,217,142,56,63,13,0,3,0,143,114,179,3,178,6,244,128,63,63,37,0,3,0,144,128,123,12,142,7,8,119,68,63,54,0,3,0,0,0,0,0,124,255,248,126,64,63,58,0,3,0,0,0,0,0,43,221,35,105,75,63,1,0,0,1,201,165,52,165,55,90,12,117,69,63,2,0,3,0,197,1,196,250,236,2,221,140,57,63,10,0,3,0,42,35,135,39,133,165,240,130,62,63,11,0,2,1,0,0,0,0,148,110,221,140,57,63,12,0,0,1,252,21,155,22,183,110,225,138,58,63,13,0,3,0,124,112,118,5,117,6,240,130,62,63,14,0,3,0,0,0,0,0,24,255,240,130,62,63,15,0,3,0,0,0,0,0,51,255,233,134,60,63,17,0,3,0,92,35,196,254,73,46,240,130,62,63,18,0,3,0,0,0,0,0,248,6,233,134,60,63,21,0,3,0,194,14,8,254,30,42,237,132,61,63,22,0,3,0,0,0,0,0,198,7,233,134,60,63,25,0,3,0,183,0,90,6,96,20,240,130,62,63,26,0,3,0,0,0,0,0,73,2,240,130,62,63,27,0,3,0,0,0,0,0,243,29,225,138,58,63,29,0,3,0,251,18,65,43,100,18,229,136,59,63,30,0,3,0,0,0,0,0,144,254,20,113,71,63,31,0,3,0,0,0,0,0,210,7,252,124,65,63,38,0,3,0,0,0,0,0,219,255,27,109,73,63,51,0,3,0,0,0,0,0,249,14,244,128,63,63,57,0,1,1,244,240,74,224,164,8,240,130,62,63,59,0,3,0,61,240,204,0,180,22,16,115,70,63,5,0,3,0,55,252,64,255,50,2,237,132,61,63,7,0,3,0,75,17,111,12,23,240,248,126,64,63,9,0,2,0,24,118,18,2,43,23,233,134,60,63,10,0,3,0,139,36,183,35,214,165,225,138,58,63,12,0,0,1,13,22,223,19,194,109,240,130,62,63,19,0,3,0,0,0,0,0,43,2,237,132,61,63,23,0,3,0,0,0,0,0,63,251,24,111,72,63,35,0,2,1,0,0,0,0,135,120,4,121,67,63,39,0,3,0,0,0,0,0,219,255,8,119,68,63,41,0,3,0,231,251,92,4,130,51,229,136,59,63,12,0,0,1,20,22,73,17,200,108,237,132,61,63,13,0,3,0,94,109,245,7,31,6,233,134,60,63,29,0,3,0,61,21,63,44,47,14,237,132,61,63,36,0,0,0,149,30,193,178,127,101,244,128,63,63,63,0,3,0,0,0,0,0,235,237,252,124,65,63,64,0,3,0,72,15,200,7,169,253,237,132,61,63,12,0,0,1,40,22,6,12,218,106,240,130,62,63,30,0,3,0,0,0,0,0,73,253,24,111,72,63,34,0,3,0,229,199,125,201,211,155,24,111,72,63,53,0,3,0,244,16,60,2,25,47,12,117,69,63,62,0,1,1,227,237,102,33,169,252,240,130,62,63,0,0,2,1,47,168,234,160,32,81,240,130,62,63,10,0,3,0,54,37,117,33,42,166,240,130,62,63,17,0,3,0,244,37,241,254,237,45,237,132,61,63,21,0,3,0,168,15,122,254,46,41,240,130,62,63,25,0,3,0,0,2,84,7,221,17,237,132,61,63,29,0,3,0,78,22,177,44,41,12,16,115,70,63,33,0,2,0,162,133,3,246,22,31,252,124,65,63,7,0,3,0,223,17,144,13,7,239,240,130,62,63,12,0,0,1,52,22,124,9,254,105,244,128,63,63,13,0,3,0,123,107,183,9,220,5,244,128,63,63,21,0,3,0,76,17,79,255,121,39,4,121,67,63,22,0,3,0,0,0,0,0,106,6,0,123,66,63,23,0,3,0,0,0,0,0,28,250,244,128,63,63,29,0,3,0,62,24,101,45,103,8,248,126,64,63,36,0,0,0,238,29,198,178,21,102,248,126,64,63,0,0,2,1,86,168,57,161,114,81,0,123,66,63,10,0,3,0,97,37,28,30,5,167,4,121,67,63,11,0,2,1,0,0,0,0,138,111,4,121,67,63,12,0,0,1,114,22,239,253,139,102,12,117,69,63,14,0,3,0,0,0,0,0,199,254,0,123,66,63,15,0,3,0,0,0,0,0,10,255,4,121,67,63,17,0,3,0,163,43,119,255,254,44,20,113,71,63,18,0,3,0,0,0,0,0,106,6,12,117,69,63,19,0,3,0,0,0,0,0,223,255,8,119,68,63,25,0,3,0,115,5,233,9,88,11,16,115,70,63,26,0,3,0]);fileData1.push.apply(fileData1,[0,0,0,0,79,0,27,109,73,63,27,0,3,0,0,0,0,0,128,36,16,115,70,63,30,0,3,0,0,0,0,0,68,252,31,107,74,63,49,0,3,0,78,12,125,6,78,47,27,109,73,63,50,0,3,0,0,0,0,0,157,7,4,121,67,63,59,0,3,0,158,240,34,0,91,22,252,124,65,63,65,0,2,0,190,254,248,0,108,127,252,124,65,63,13,0,3,0,175,105,137,11,148,5,12,117,69,63,21,0,3,0,228,21,182,1,164,34,12,117,69,63,29,0,3,0,153,29,13,47,173,253,4,121,67,63,37,0,3,0,145,128,145,12,147,7,31,107,74,63,43,0,3,0,0,0,0,0,197,9,12,117,69,63,57,0,1,1,12,239,169,224,143,9,12,117,69,63,63,0,3,0,0,0,0,0,222,235,12,117,69,63,0,0,2,1,171,168,7,162,91,82,27,109,73,63,3,0,3,0,65,254,50,254,26,1,31,107,74,63,9,0,2,0,144,115,179,255,219,20,8,119,68,63,36,0,0,0,236,28,15,179,218,102,8,119,68,63,58,0,3,0,0,0,0,0,241,220,4,121,67,63,7,0,3,0,21,18,250,13,156,238,12,117,69,63,13,0,3,0,255,101,29,15,4,5,20,113,71,63,38,0,3,0,0,0,0,0,203,255,47,99,78,63,64,0,3,0,114,17,250,5,168,0,16,115,70,63,65,0,2,0,189,254,27,1,142,127,12,117,69,63,10,0,3,0,44,37,158,27,128,167,24,111,72,63,15,0,3,0,0,0,0,0,236,254,20,113,71,63,23,0,3,0,0,0,0,0,27,249,20,113,71,63,7,0,3,0,78,18,111,14,14,238,20,113,71,63,11,0,2,1,0,0,0,0,72,112,12,117,69,63,12,0,0,1,127,22,80,249,8,101,16,115,70,63,17,0,3,0,241,46,200,255,105,44,20,113,71,63,22,0,3,0,0,0,0,0,177,5,8,119,68,63,37,0,3,0,145,128,151,12,148,7,31,107,74,63,39,0,3,0,0,0,0,0,201,255,27,109,73,63,59,0,3,0,75,241,83,255,176,21,59,93,81,63,6,0,3,0,2,253,52,0,61,16,20,113,71,63,25,0,3,0,25,7,34,11,67,8,20,113,71,63,36,0,0,0,24,28,144,179,97,103,24,111,72,63,37,0,3,0,146,128,179,12,154,7,31,107,74,63,41,0,3,0,231,251,99,4,136,51,24,111,72,63,54,0,3,0,0,0,0,0,89,255,20,113,71,63,58,0,3,0,0,0,0,0,220,220,35,105,75,63,0,0,2,1,253,168,245,162,138,83,47,99,78,63,2,0,3,0,183,1,248,250,114,2,20,113,71,63,10,0,3,0,233,36,60,26,226,167,16,115,70,63,12,0,0,1,136,22,14,247,84,100,24,111,72,63,13,0,3,0,94,99,228,17,144,4,27,109,73,63,14,0,3,0,0,0,0,0,215,254,24,111,72,63,19,0,3,0,0,0,0,0,14,255,24,111,72,63,21,0,3,0,255,23,218,2,104,32,20,113,71,63,29,0,3,0,64,31,121,47,68,250,31,107,74,63,57,0,1,1,188,237,232,224,32,10,31,107,74,63,62,0,1,1,75,236,88,33,101,253,55,95,80,63,63,0,3,0,0,0,0,0,82,232,39,103,76,63,4,0,3,0,10,253,250,253,212,1,35,105,75,63,5,0,3,0,68,252,66,255,50,2,24,111,72,63,12,0,0,1,161,22,190,242,40,99,27,109,73,63,17,0,3,0,225,49,35,0,210,43,27,109,73,63,26,0,3,0,0,0,0,0,253,255,24,111,72,63,30,0,3,0,0,0,0,0,88,252,31,107,74,63,33,0,2,0,159,133,254,245,27,31,35,105,75,63,65,0,2,0,189,254,53,1,176,127,31,107,74,63,7,0,3,0,64,18,91,14,239,237,27,109,73,63,10,0,3,0,143,36,70,25,107,168,27,109,73,63,11,0,2,1,0,0,0,0,211,112,35,105,75,63,18,0,3,0,0,0,0,0,137,6,27,109,73,63,22,0,3,0,0,0,0,0,140,5,35,105,75,63,23,0,3,0,0,0,0,0,184,248,27,109,73,63,25,0,3,0,25,8,222,11,119,6,27,109,73,63,29,0,3,0,187,32,189,47,25,247,47,99,78,63,31,0,3,0,0,0,0,0,185,9,24,111,72,63,36,0,0,0,209,27,211,179,137,103,31,107,74,63,38,0,3,0,0,0,0,0,194,255,47,99,78,63,58,0,3,0,0,0,0,0,252,220,27,109,73,63,12,0,0,1,181,22,183,240,188,98,31,107,74,63,13,0,3,0,202,97,218,19,56,4,39,103,76,63,15,0,3,0,0,0,0,0,92,255,35,105,75,63,19,0,3,0,0,0,0,0,144,254,35,105,75,63,21,0,3,0,194,25,225,3,141,30,31,107,74,63,30,0,3,0,0,0,0,0,210,252,27,109,73,63,34,0,3,0,224,199,126,201,192,155,27,109,73,63,35,0,2,1,0,0,0,0,114,120,27,109,73,63,36,0,0,0,214,27,237,179,131,103,27,109,73,63,37,0,3,0,147,128,209,12,160,7,31,107,74,63,42,0,3,0,0,0,0,0,72,8,31,107,74,63,46,0,3,0,0,0,0,0,240,11,31,107,74,63,53,0,3,0,244,16,54,2,30,47,27,109,73,63,54,0,3,0,0,0,0,0,51,255,63,91,82,63,3,0,3,0,107,254,93,254,26,1,35,105,75,63,10,0,3,0,34,36,222,24,43,169,39,103,76,63,11,0,2,1,0,0,0,0,11,114,31,107,74,63,12,0,0,1,206,22,205,238,118,98,39,103,76,63,14,0,3,0,0,0,0,0,71,255,35,105,75,63,17,0,3,0,134,51,104,0,108,43,39,103,76,63,22,0,3,0,0,0,0,0,200,5,35,105,75,63,25,0,3,0,253,8,130,12,247,4,35,105,75,63,26,0,3,0,0,0,0,0,29,0,35,105,75,63,27,0,3,0,0,0,0,0,166,37,31,107,74,63,29,0,3,0,100,33,205,47,163,245,31,107,74,63,34,0,3,0,230,199,105,201,225,155,31,107,74,63,35,0,2,1,0,0,0,0,132,120,31,107,74,63,36,0,0,0,73,27,147,180,198,103,31,107,74,63,37,0,3,0,147,128,193,12,157,7,31,107,74,63,50,0,3,0,0,0,0,0,168,7,35,105,75,63,51,0,3,0,0,0,0,0,51,15,31,107,74,63,54,0,3,0,0,0,0,0,71,255,39,103,76,63,59,0,3,0,173,241,236,254,60,21,39,103,76,63,7,0,3,0,253,17,237,13,23,238,51,97,79,63,9,0,2,0,128,114,132,254,200,19,35,105,75,63,12,0,0,1,236,22,252,236,80,98,39,103,76,63,13,0,3,0,108,96,243,21,212,3,39,103,76,63,29,0,3,0,129,34,190,47,4,243,35,105,75,63,30,0,3,0,0,0,0,0,55,253,39,103,76,63,33,0,2,0,196,133,60,246,216,30,35,105,75,63,34,0,3,0,7,200,27,201,133,156,35,105,75,63,35,0,2,1,0,0,0,0,253,120,35,105,75,63,36,0,0,0,108,25,128,182,179,104,35,105,75,63,37,0,3,0,142,128,62,12,129,7,35,105,75,63,38,0,3,0,0,0,0,0,250,255,39,103,76,63,39,0,3,0,0,0,0,0,76,0,39,103,76,63,41,0,3,0,228,251,43,4,86,51,35,105,75,63,42,0,3,0,0,0,0,0,112,8,39,103,76,63,43,0,3,0,0,0,0,0,39,10,51,97,79,63,45,0,3,0,8,2,50,10,164,59,39,103,76,63,46,0,3,0,0,0,0,0,169,12,39,103,76,63,47,0,3,0,0,0,0,0,54,0,43,101,77,63,49,0,3,0,31,12,108,6,165,47,35,105,75,63,50,0,3,0,0,0,0,0,4,8,39,103,76,63,53,0,3,0,225,16,191,2,188,46,35,105,75,63,54,0,3,0,0,0,0,0,238,255,39,103,76,63,55,0,3,0,0,0,0,0,51,0,47,99,78,63,57,0,1,1,3,237,9,225,102,10,51,97,79,63,62,0,1,1,246,234,56,33,199,253,59,93,81,63,0,0,2,1,55,169,169,163,164,84,74,85,85,63,1,0,0,1,198,165,55,165,58,90,70,87,84,63,5,0,3,0,191,252,90,255,50,2,39,103,76,63,10,0,3,0,226,35,255,24,176,169,39,103,76,63,12,0,0,1,24,23,94,235,118,98,43,101,77,63,17,0,3,0,190,52,186,0,6,43,43,101,77,63,18,0,3,0,0,0,0,0,215,6,43,101,77,63,19,0,3,0,0,0,0,0,142,254,43,101,77,63,21,0,3,0,155,26,118,4,175,29,43,101,77,63,23,0,3,0,0,0,0,0,210,248,43,101,77,63,25,0,3,0,179,9,255,12,244,3,43,101,77,63,26,0,3,0,0,0,0,0,182,0,55,95,80,63,27,0,3,0,0,0,0,0,86,40,39,103,76,63,30,0,3,0,0,0,0,0,212,253,39,103,76,63,34,0,3,0,65,200,170,200,146,157,39,103,76,63,35,0,2,1,0,0,0,0,194,121,39,103,76,63,36,0,0,0,57,22,150,185,54,106,39,103,76,63,37,0,3,0,134,128,101,11,83,7,39,103,76,63,38,0,3,0,0,0,0,0,86,0,47,99,78,63,42,0,3,0,0,0,0,0,128,9,39,103,76,63,50,0,3,0,0,0,0,0,157,8,43,101,77,63,51,0,3,0,0,0,0,0,7,16,39,103,76,63,54,0,3,0,0,0,0,0,1,1,55,95,80,63,65,0,2,0,188,254,71,1,196,127,66,89,83,63,4,0,3,0,86,253,46,254,212,1,47,99,78,63,7,0,3,0,137,17,45,13,113,238,43,101,77,63,10,0,3,0,154,35,94,25,79,170,43,101,77,63,11,0,2,1,0,0,0,0,154,114,43,101,77,63,12,0,0,1,83,23,238,233,225,98,43,101,77,63,13,0,3,0,220,95,20,23,155,3,43,101,77,63,14,0,3,0,0,0,0,0,139,255,43,101,77,63,15,0,3,0,0,0,0,0,153,255,43,101,77,63,22,0,3,0,0,0,0,0,12,6,43,101,77,63,29,0,3,0,236,34,150,47,234,241,43,101,77,63,30,0,3,0,0,0,0,0,162,254,55,95,80,63,33,0,2,0,86,134,41,247,217,29,43,101,77,63,34,0,3,0,159,200,26,200,32,159,47,99,78,63,35,0,2,1,0,0,0,0,33,124,47,99,78,63,36,0,0,0,235,10,189,195,241,110,43,101,77,63,37,0,3,0,124,128,41,10,16,7,51,97,79,63,38,0,3,0,0,0,0,0,250,1,63,91,82,63,39,0,3,0,0,0,0,0,70,3,43,101,77,63,41,0,3,0,225,251,249,3,41,51,66,89,83,63,43,0,3,0,0,0,0,0,209,12,47,99,78,63,46,0,3,0,0,0,0,0,12,14,63,91,82,63,47,0,3,0,0,0,0,0,88,2,59,93,81,63,50,0,3,0,0,0,0,0,54,13,63,91,82,63,53,0,3,0,112,16,220,5,130,44,43,101,77,63,54,0,3,0,0,0,0,0,143,2,66,89,83,63,55,0,3,0,0,0,0,0,154,2,63,91,82,63,59,0,3,0,114,242,40,254,76,20,47,99,78,63,10,0,3,0,60,35,112,26,65,171,47,99,78,63,11,0,2,1,0,0,0,0,99,115,47,99,78,63,12,0,0,1,176,23,10,233,29,100,47,99,78,63,13,0,3,0,138,95,94,24,87,3,47,99,78,63,14,0,3,0,0,0,0,0,2,0,47,99,78,63,15,0,3,0,0,0,0,0,2,0,47,99,78,63,17,0,3,0,246,52,238,0,211,42,47,99,78,63,18,0,3,0,0,0,0,0,44,7,47,99,78,63,19,0,3,0,0,0,0,0,207,254,47,99,78,63,21,0,3,0,197,26,171,4,140,29,47,99,78,63,22,0,3,0,0,0,0,0,154,6,47,99,78,63,23,0,3,0,0,0,0,0,20,249,47,99,78,63,25,0,3,0,228,9,27,13,230,3,47,99,78,63,26,0,3,0,0,0,0,0,115,1,47,99,78,63,29,0,3,0,18,35,52,47,58,241,47,99,78,63,30,0,3,0,0,0,0,0,6,0,51,97,79,63,34,0,3,0,126,201,0,199,157,162,51,97,79,63,37,0,3,0,109,128,127,7,127,6,63,91,82,63,41,0,3,0,209,251,230,2,51,50,55,95,80,63,49,0,3,0,216,11,82,6,42,48,66,89,83,63,51,0,3,0,0,0,0,0,80,19,59,93,81,63,54,0,3,0,0,0,0,0,73,9,148,47,104,63,60,0,2,0,0,0,0,0,255,127,74,85,85,63,2,0,3,0,138,1,158,251,197,1,55,95,80,63,7,0,3,0,232,16,35,12,247,238,51,97,79,63,10,0,3,0,168,34,215,28,214,172,51,97,79,63,11,0,2,1,0,0,0,0,149,116,51,97,79,63,12,0,0,1,94,24,45,233,238,102,51,97,79,63,13,0,3,0,174,95,246,25,250,2,51,97,79,63,14,0,3,0,0,0,0,0,216,0,55,95,80,63,15,0,3,0,0,0,0,0,174,1,51,97,79,63,17,0,3,0,138,52,54,1,162,42,55,95,80,63,18,0,3,0,0,0,0,0,149,8,51,97,79,63,19,0,3,0,0,0,0,0,124,255,51,97,79,63,21,0,3,0,130,26,190,4,231,29,51,97,79,63,22,0,3,0,0,0,0,0,183,7,51,97,79,63,23,0,3,0,0,0,0,0,174,249,51,97,79,63,25,0,3,0,208,9,252,12,151,4,51,97,79,63,26,0,3,0,0,0,0,0,234,2,51,97,79,63,29,0,3,0,183,34,95,46,79,241,51,97,79,63,30,0,3,0,0,0,0,0,136,2,74,85,85,63,31,0,3,0,0,0,0,0,218,12,59,93,81,63,35,0,2,1,0,0,0,0,167,127,55,95,80,63,36,0,0,0,156,254,4,207,3,115,66,89,83,63,42,0,3,0,0,0,0,0,156,11,63,91,82,63,46,0,3,0,0,0,0,0,228,16,59,93,81,63,57,0,1,1,184,236,19,225,121,10,66,89,83,63,58,0,3,0,0,0,0,0,86,221,74,85,85,63,64,0,3,0,166,18,9,5,78,2,66,89,83,63,9,0,2,0,21,114,161,253,8,19,55,95,80,63,10,0,3,0,251,33,254,31,222,174,55,95,80,63,11,0,2,1,0,0,0,0,19,118,55,95,80,63,12,0,0,1,38,25,235,233,135,106,55,95,80,63,13,0,3,0,26,96,180,27,143,2,59,93,81,63,14,0,3,0,0,0,0,0,16,3,55,95,80,63,17,0,3,0,186,51,137,1,113,42,59,93,81,63,19,0,3,0,0,0,0,0,123,1,55,95,80,63,21,0,3,0,252,25,187,4,143,30,59,93,81,63,22,0,3,0,0,0,0,0,198,10,59,93,81,63,23,0,3,0,0,0,0,0,105,251,55,95,80,63,25,0,3,0,145,9,186,12,186,5,55,95,80,63,26,0,3,0,0,0,0,0,204,4,55,95,80,63,29,0,3,0,12,34,73,45,225,241,55,95,80,63,30,0,3,0,0,0,0,0,175,5,59,93,81,63,34,0,3,0,95,202,253,197,56,166,63,91,82,63,37,0,3,0,100,128,105,3,161,5,66,89,83,63,38,0,3,0,0,0,0,0,88,4,74,85,85,63,45,0,3,0,218,1,32,9,207,59,66,89,83,63,62,0,1,1,46,234,15,33,192,253,63,91,82,63,7,0,3,0,31,16,219,10,163,239,59,93,81,63,10,0,3,0,72,33,144,35,67,177,59,93,81,63,11,0,2,1,0,0,0,0,217,119,59,93,81,63,12,0,0,1,221,25,17,235,100,110,59,93,81,63,13,0,3,0,185,96,124,29,32,2,70,87,84,63,15,0,3,0,0,0,0,0,50,6,59,93,81,63,17,0,3,0,165,50,223,1,68,42,66,89,83,63,18,0,3,0,0,0,0,0,106,11,63,91,82,63,21,0,3,0,113,24,133,4,110,32,59,93,81,63,25,0,3,0,51,9,95,12,43,7,59,93,81,63,26,0,3,0,0,0,0,0,236,6,86,79,88,63,27,0,3,0,0,0,0,0,142,43,59,93,81,63,29,0,3,0,41,33,10,44,207,242,59,93,81,63,30,0,3,0,0,0,0,0,48,9,66,89,83,63,33,0,2,0,209,134,240,247,7,29,63,91,82,63,36,0,0,0,191,242,139,218,2,118,66,89,83,63,49,0,3,0,138,11,54,6,187,48,70,87,84,63,63,0,3,0,0,0,0,0,3,231,78,83,86,63,65,0,2,0,188,254,80,1,208,127,70,87,84,63,0,0,2,1,68,169,219,163,34,85,168,37,109,63,6,0,3,0,2,253,52,0,61,16,63,91,82,63,10,0,3,0,154,32,121,39,250,179,66,89,83,63,11,0,2,1,0,0,0,0,226,123,63,91,82,63,12,0,0,1,146,26,135,236,122,114,66,89,83,63,13,0,3,0,73,98,35,33,52,1,70,87,84,63,14,0,3,0,0,0,0,0,255,6,66,89,83,63,17,0,3,0,252,47,150,2,237,41,70,87,84,63,19,0,3,0,0,0,0,0,58,5,66,89,83,63,22,0,3,0,0,0,0,0,95,14,70,87,84,63,23,0,3,0,0,0,0,0,155,254,66,89,83,63,25,0,3,0,64,8,122,11,150,10,66,89,83,63,26,0,3,0,0,0,0,0,161,11,63,91,82,63,29,0,3,0,29,32,170,42,255,243,63,91,82,63,30,0,3,0,0,0,0,0,251,12,66,89,83,63,34,0,3,0,56,203,204,196,52,170,66,89,83,63,35,0,3,0,0,0,0,0,58,130,66,89,83,63,50,0,3,0,0,0,0,0,72,15,63,91,82,63,54,0,3,0,0,0,0,0,22,11,66,89,83,63,57,0,1,1,173,236,18,225,114,10,113,65,95,63,3,0,3,0,16,255,7,255,26,1,70,87,84,63,7,0,3,0,51,15,94,9,111,240,66,89,83,63,10,0,3,0,8,32,129,43,229,182,66,89,83,63,12,0,0,1,59,27,31,238,140,118,70,87,84,63,21,0,3,0,147,22,50,4,166,34,70,87,84,63,29,0,3,0,201,29,187,39,186,246,66,89,83,63,30,0,3,0,0,0,0,0,224,16,70,87,84,63,36,0,0,0,195,232,71,229,229,119,70,87,84,63,37,0,3,0,106,128,54,0,242,4,70,87,84,63,39,0,3,0,0,0,0,0,120,4,74,85,85,63,41,0,3,0,196,251,27,2,124,49,70,87,84,63,46,0,3,0,0,0,0,0,148,18,74,85,85,63,47,0,3,0,0,0,0,0,175,3,74,85,85,63,53,0,3,0,39,16,209,7,24,43,66,89,83,63,54,0,3,0,0,0,0,0,5,13,74,85,85,63,59,0,3,0,247,242,202,253,178,19,109,67,94,63,4,0,3,0,71,254,210,254,212,1,102,71,92,63,9,0,2,0,140,113,170,251,109,17,70,87,84,63,10,0,3,0,133,31,189,47,10,186,78,83,86,63,11,0,3,0,0,0,0,0,122,130,70,87,84,63,12,0,0,1,230,27,235,239,188,122,74,85,85,63,13,0,3,0,22,100,250,36,57,0,74,85,85,63,17,0,3,0,226,44,89,3,146,41,90,77,89,63,18,0,3,0,0,0,0,0,3,18,74,85,85,63,22,0,3,0,0,0,0,0,86,18,74,85,85,63,25,0,3,0,31,7,110,10,126,14,74,85,85,63,26,0,3,0,0,0,0,0,208,16,70,87,84,63,30,0,3,0,0,0,0,0,243,20,78,83,86,63,33,0,2,0,113,135,240,248,253,27,70,87,84,63,34,0,3,0,156,203,16,196,98,172,74,85,85,63,35,0,3,0,0,0,0,0,55,133,78,83,86,63,38,0,3,0,0,0,0,0,169,6,78,83,86,63,42,0,3,0,0,0,0,0,75,13,78,83,86,63,43,0,3,0,0,0,0,0,91,14,82,81,87,63,49,0,3,0,254,10,4,6,190,49,74,85,85,63,50,0,3,0,0,0,0,0,184,17,74,85,85,63,51,0,3,0,0,0,0,0,177,20,74,85,85,63,54,0,3,0,0,0,0,0,104,17,78,83,86,63,55,0,3,0,0,0,0,0,253,3,74,85,85,63,57,0,1,1,230,236,5,225,73,10,74,85,85,63,58,0,3,0,0,0,0,0,177,221,74,85,85,63,62,0,1,1,225,233,245,32,122,253,78,83,86,63,0,0,2,1,39,169,216,163,148,85,109,67,94,63,5,0,3,0,215,253,146,255,50,2,86,79,88,63,7,0,3,0,27,13,5,6,75,242,74,85,85,63,10,0,3,0,12,31,66,52,105,189,78,83,86,63,12,0,3,0,198,135,99,29,37,244,90,77,89,63,14,0,3,0,0,0,0,0,76,14,90,77,89,63,15,0,3,0,0,0,0,0,170,12,90,77,89,63,19,0,3,0,0,0,0,0,91,12,78,83,86,63,21,0,3,0,106,20,202,3,47,37,90,77,89,63,23,0,3,0,0,0,0,0,167,4,74,85,85,63,29,0,3,0,120,28,28,38,77,248,74,85,85,63,30,0,3,0,0,0,0,0,71,25,74,85,85,63,34,0,3,0,250,203,53,195,183,174,74,85,85,63,36,0,0,0,223,228,4,234,129,120,74,85,85,63,37,0,3,0,113,128,100,254,142,4,82,81,87,63,39,0,3,0,0,0,0,0,188,6,78,83,86,63,46,0,3,0,0,0,0,0,155,20,78,83,86,63,63,0,3,0,0,0,0,0,1,230,109,67,94,63,1,0,0,1,194,165,59,165,62,90,106,69,93,63,2,0,3,0,55,1,212,252,174,0,82,81,87,63,10,0,3,0,24,30,104,61,156,196,82,81,87,63,13,0,3,0,5,102,233,40,50,255,86,79,88,63,17,0,3,0,188,39,135,4,6,41,86,79,88,63,22,0,3,0,0,0,0,0,156,24,78,83,86,63,25,0,3,0,127,6,219,9,153,16,82,81,87,63,26,0,3,0,0,0,0,0,79,22,90,77,89,63,29,0,3,0,222,22,113,31,35,255,86,79,88,63,30,0,3,0,0,0,0,0,109,38,94,75,90,63,31,0,3,0,0,0,0,0,40,15,78,83,86,63,34,0,3,0,79,204,50,194,59,177,78,83,86,63,35,0,3,0,0,0,0,0,236,134,78,83,86,63,36,0,0,0,249,225,33,238,244,120,78,83,86,63,37,0,3,0,126,128,95,252,32,4,86,79,88,63,41,0,3,0,180,251,7,1,131,48,90,77,89,63,45,0,3,0,170,1,252,7,251,59,86,79,88,63,47,0,3,0,0,0,0,0,127,5,82,81,87,63,50,0,3,0,0,0,0,0,178,20,82,81,87,63,51,0,3,0,0,0,0,0,97,22,82,81,87,63,53,0,3,0,233,15,122,9,228,41,78,83,86,63,54,0,3,0,0,0,0,0,241,19,82,81,87,63,57,0,1,1,123,237,234,224,241,9,82,81,87,63,58,0,3,0,0,0,0,0,88,222,86,79,88,63,59,0,3,0,6,244,110,253,142,18,82,81,87,63,62,0,1,1,221,233,239,32,236,252,78,83,86,63,64,0,3,0,238,18,229,4,167,2,90,77,89,63,0,0,2,1,201,168,166,163,105,86,90,77,89,63,11,0,3,0,0,0,0,0,196,137,82,81,87,63,12,0,3,0,116,140,3,30,96,246,90,77,89,63,21,0,3,0,13,17,27,3,19,41,90,77,89,63,25,0,3,0,147,4,25,8,233,22,86,79,88,63,33,0,2,0,254,135,207,249,24,27,82,81,87,63,34,0,3,0,155,204,254,192,243,179,82,81,87,63,35,0,3,0,0,0,0,0,207,136,82,81,87,63,36,0,0,0,65,224,114,241,78,121,82,81,87,63,37,0,3,0,145,128,32,250,164,3,86,79,88,63,38,0,3,0,0,0,0,0,170,8,86,79,88,63,42,0,3,0,0,0,0,0,191,14,86,79,88,63,43,0,3,0,0,0,0,0,175,15,82,81,87,63,46,0,3,0,0,0,0,0,202,21,82,81,87,63,54,0,3,0,0,0,0,0,195,22,86,79,88,63,55,0,3,0,0,0,0,0,48,5,82,81,87,63,63,0,3,0,0,0,0,0,46,230,82,81,87,63,64,0,3,0,108,19,172,4,157,2,82,81,87,63,65,0,2,0,192,254,75,1,243,127,86,79,88,63,10,0,3,0,143,29,203,65,83,200,86,79,88,63,12,0,3,0,9,145,130,30,143,248,86,79,88,63,13,0,3,0,251,102,202,42,179,254,86,79,88,63,26,0,3,0,0,0,0,0,1,25,86,79,88,63,34,0,3,0,219,204,148,191,237,182,86,79,88,63,35,0,3,0,0,0,0,0,232,138,86,79,88,63,36,0,0,0,225,223,220,243,148,121,86,79,88,63,37,0,3,0,172,128,155,247,26,3,90,77,89,63,39,0,3,0,0,0,0,0,192,8,90,77,89,63,46,0,3,0,0,0,0,0,163,24,94,75,90,63,49,0,3,0,99,10,205,5,219,50,86,79,88,63,50,0,3,0,0,0,0,0,116,22,86,79,88,63,51,0,3,0,0,0,0,0,96,23,86,79,88,63,53,0,3,0,196,15,117,10,44,41,86,79,88,63,54,0,3,0,0,0,0,0,235,25,94,75,90,63,57,0,1,1,213,238,177,224,50,9,94,75,90,63,58,0,3,0,0,0,0,0,195,223,86,79,88,63,62,0,1,1,139,233,189,32,144,252,86,79,88,63,63,0,3,0,0,0,0,0,191,228,86,79,88,63,64,0,3,0,166,19,153,4,119,3,86,79,88,63,65,0,2,0,210,254,57,1,221,127,106,69,93,63,7,0,3,0,81,10,163,1,217,244,90,77,89,63,10,0,3,0,248,28,229,69,10,204,90,77,89,63,12,0,3,0,81,149,201,30,158,250,94,75,90,63,13,0,3,0,204,104,41,46,204,253,94,75,90,63,17,0,3,0,108,36,58,5,179,40,94,75,90,63,22,0,3,0,0,0,0,0,112,28,90,77,89,63,26,0,3,0,0,0,0,0,150,27,90,77,89,63,27,0,3,0,0,0,0,0,226,43,90,77,89,63,30,0,3,0,0,0,0,0,136,42,94,75,90,63,33,0,2,0,182,136,238,250,249,25,90,77,89,63,34,0,3,0,12,205,223,189,60,186,90,77,89,63,35,0,3,0,0,0,0,0,69,141,90,77,89,63,36,0,0,0,73,225,28,245,204,121,90,77,89,63,37,0,3,0,212,128,185,244,123,2,94,75,90,63,38,0,3,0,0,0,0,0,53,11,98,73,91,63,41,0,3,0,158,251,136,255,41,47,98,73,91,63,42,0,3,0,0,0,0,0,158,17,98,73,91,63,43,0,3,0,0,0,0,0,80,18,98,73,91,63,47,0,3,0,0,0,0,0,1,8,90,77,89,63,50,0,3,0,0,0,0,0,119,24,94,75,90,63,51,0,3,0,0,0,0,0,194,25,94,75,90,63,53,0,3,0,107,15,207,12,116,39,90,77,89,63,54,0,3,0,0,0,0,0,134,29,98,73,91,63,55,0,3,0,0,0,0,0,143,7,106,69,93,63,59,0,3,0,76,246,213,252,250,15,90,77,89,63,62,0,1,1,198,231,230,31,25,252,94,75,90,63,63,0,3,0,0,0,0,0,232,214,90,77,89,63,64,0,3,0,1,19,244,4,16,7,90,77,89,63,65,0,2,0,22,255,250,0,39,127,106,69,93,63,0,0,2,1,37,168,65,163,150,87,94,75,90,63,10,0,3,0,71,28,157,73,171,207,102,71,92,63,11,0,3,0,0,0,0,0,164,145,94,75,90,63,12,0,3,0,13,153,213,30,119,252,98,73,91,63,14,0,3,0,0,0,0,0,193,16,98,73,91,63,15,0,3,0,0,0,0,0,216,14,98,73,91,63,18,0,3,0,0,0,0,0,228,19,98,73,91,63,19,0,3,0,0,0,0,0,208,14,98,73,91,63,21,0,3,0,8,15,167,2,96,43,98,73,91,63,23,0,3,0,0,0,0,0,187,6,94,75,90,63,25,0,3,0,247,3,139,7,220,24,94,75,90,63,26,0,3,0,0,0,0,0,255,29,94,75,90,63,27,0,3,0,0,0,0,0,43,44,94,75,90,63,29,0,3,0,138,21,235,29,204,0,94,75,90,63,30,0,3,0,0,0,0,0,86,46,94,75,90,63,34,0,3,0,58,205,251,187,206,189,94,75,90,63,35,0,3,0,0,0,0,0,218,143,94,75,90,63,36,0,0,0,243,227,133,245,250,121,94,75,90,63,37,0,3,0,9,129,148,241,205,1,94,75,90,63,39,0,3,0,0,0,0,0,237,9,109,67,94,63,45,0,3,0,82,1,244,5,73,60,98,73,91,63,46,0,3,0,0,0,0,0,17,28,94,75,90,63,50,0,3,0,0,0,0,0,168,26,94,75,90,63,54,0,3,0,0,0,0,0,114,33,94,75,90,63,62,0,1,1,208,229,209,30,171,251,94,75,90,63,64,0,3,0,12,18,99,5,53,11,94,75,90,63,65,0,2,0,66,255,216,0,26,126,98,73,91,63,10,0,3,0,121,27,195,76,25,211,98,73,91,63,12,0,3,0,229,155,146,30,244,253,102,71,92,63,13,0,3,0,93,106,185,48,23,253,102,71,92,63,17,0,3,0,144,33,198,5,116,40,98,73,91,63,22,0,3,0,0,0,0,0,19,30,102,71,92,63,25,0,3,0,222,2,143,6,64,28,102,71,92,63,26,0,3,0,0,0,0,0,12,34,106,69,93,63,27,0,3,0,0,0,0,0,179,44,98,73,91,63,29,0,3,0,84,20,142,28,85,2,98,73,91,63,30,0,3,0,0,0,0,0,175,49,109,67,94,63,31,0,3,0,0,0,0,0,75,16,102,71,92,63,33,0,2,0,140,137,56,252,181,24,98,73,91,63,34,0,3,0,102,205,250,185,159,193,98,73,91,63,35,0,3,0,0,0,0,0,161,146,98,73,91,63,36,0,0,0,158,231,68,245,24,122,98,73,91,63,37,0,3,0,77,129,56,238,19,1,109,67,94,63,38,0,3,0,0,0,0,0,32,17,106,69,93,63,39,0,3,0,0,0,0,0,212,13,125,59,98,63,49,0,3,0,109,8,25,5,113,54,102,71,92,63,50,0,3,0,0,0,0,0,110,31,106,69,93,63,51,0,3,0,0,0,0,0,227,29,109,67,94,63,53,0,3,0,150,14,71,18,100,35,102,71,92,63,54,0,3,0,0,0,0,0,245,41,113,65,95,63,57,0,1,1,147,241,70,224,208,7,125,59,98,63,58,0,3,0,0,0,0,0,105,228,98,73,91,63,62,0,1,1,111,228,198,29,105,251,98,73,91,63,63,0,3,0,0,0,0,0,227,208,98,73,91,63,64,0,3,0,44,17,181,5,4,14,98,73,91,63,65,0,2,0,216,254,83,1,169,124,102,71,92,63,10,0,3,0,142,26,122,79,105,214,102,71,92,63,12,0,3,0,245,157,5,30,42,255,109,67,94,63,14,0,3,0,0,0,0,0,147,19,113,65,95,63,15,0,3,0,0,0,0,0,24,18,106,69,93,63,18,0,3,0,0,0,0,0,102,21,106,69,93,63,19,0,3,0,0,0,0,0,211,16,106,69,93,63,21,0,3,0,73,13,57,2,86,45,102,71,92,63,22,0,3,0,0,0,0,0,141,31,109,67,94,63,23,0,3,0,0,0,0,0,43,9,106,69,93,63,29,0,3,0,36,18,50,26,48,5,102,71,92,63,30,0,3,0,0,0,0,0,174,52,106,69,93,63,34,0,3,0,232,205,224,181,197,201,106,69,93,63,35,0,3,0,0,0,0,0,164,152,102,71,92,63,36,0,0,0,239,235,149,244,42,122,102,71,92,63,37,0,3,0,161,129,185,234,81,0,121,61,97,63,41,0,3,0,108,251,49,252,29,44,117,63,96,63,42,0,3,0,0,0,0,0,5,23,117,63,96,63,43,0,3,0,0,0,0,0,65,23,106,69,93,63,46,0,3,0,0,0,0,0,203,31,117,63,96,63,47,0,3,0,0,0,0,0,189,12,121,61,97,63,55,0,3,0,0,0,0,0,219,12,102,71,92,63,62,0,1,1,4,228,180,28,102,251,102,71,92,63,63,0,3,0,0,0,0,0,152,204,102,71,92,63,64,0,3,0,78,16,214,5,109,16,102,71,92,63,65,0,2,0,144,254,150,1,119,123,113,65,95,63,9,0,2,0,106,113,246,250,220,16,106,69,93,63,10,0,3,0,130,25,196,81,162,217,106,69,93,63,11,0,3,0,0,0,0,0,110,148,106,69,93,63,12,0,3,0,44,159,46,29,18,0,106,69,93,63,13,0,3,0,21,107,188,49,205,252,109,67,94,63,17,0,3,0,7,31,51,6,70,40,109,67,94,63,22,0,3,0,0,0,0,0,29,34,117,63,96,63,25,0,3,0,222,0,205,4,12,34,113,65,95,63,26,0,3,0,0,0,0,0,243,38,109,67,94,63,30,0,3,0,0,0,0,0,206,57,113,65,95,63,33,0,2,0,229,138,70,254,195,22,106,69,93,63,36,0,0,0,140,240,178,243,42,122,109,67,94,63,37,0,3,0,117,130,148,227,195,254,113,65,95,63,50,0,3,0,0,0,0,0,216,38,113,65,95,63,54,0,3,0,0,0,0,0,15,55,106,69,93,63,62,0,1,1,76,229,171,27,205,251,106,69,93,63,63,0,3,0,0,0,0,0,73,203,106,69,93,63,64,0,3,0,137,15,157,5,216,18,106,69,93,63,65,0,2,0,96,255,137,0,76,123,113,65,95,63,0,0,1,1,219,167,64,163,24,88,141,51,102,63,2,0,3,0,189,0,151,254,42,255,117,63,96,63,7,0,3,0,185,8,50,255,86,246,109,67,94,63,10,0,3,0,97,24,200,83,218,220,109,67,94,63,11,0,3,0,0,0,0,0,85,151,109,67,94,63,12,0,3,0,207,159,29,28,204,0,113,65,95,63,13,0,3,0,129,108,123,51,75,252,121,61,97,63,18,0,3,0,0,0,0,0,242,23,125,59,98,63,19,0,3,0,0,0,0,0,38,21,121,61,97,63,21,0,3,0,3,10,83,1,241,48,125,59,98,63,27,0,3,0,0,0,0,0,247,44,117,63,96,63,29,0,3,0,15,15,18,23,91,9,109,67,94,63,34,0,3,0,57,206,229,179,246,205,109,67,94,63,35,0,3,0,0,0,0,0,207,155,109,67,94,63,36,0,0,0,32,245,209,242,40,122,117,63,96,63,39,0,3,0,0,0,0,0,200,17,117,63,96,63,46,0,3,0,0,0,0,0,86,37,121,61,97,63,51,0,3,0,0,0,0,0,87,35,125,59,98,63,59,0,3,0,50,248,53,252,91,13,109,67,94,63,62,0,1,1,254,231,158,26,137,252,109,67,94,63,63,0,3,0,0,0,0,0,124,204,109,67,94,63,64,0,3,0,199,14,24,5,252,20,109,67,94,63,65,0,2,0,36,0,138,255,196,123,121,61,97,63,1,0,0,1,192,165,60,165,64,90,148,47,104,63,4,0,3,0,113,255,159,255,212,1,160,41,107,63,5,0,3,0,201,255,245,255,50,2,117,63,96,63,10,0,3,0,235,21,112,87,141,227,121,61,97,63,11,0,3,0,0,0,0,0,204,160,113,65,95,63,12,0,3,0,37,160,228,26,116,1,125,59,98,63,14,0,3,0,0,0,0,0,195,22,129,57,99,63,17,0,3,0,226,24,15,7,243,39,121,61,97,63,22,0,3,0,0,0,0,0,164,37,129,57,99,63,23,0,3,0,0,0,0,0,169,12,117,63,96,63,30,0,3,0,0,0,0,0,136,62,125,59,98,63,31,0,3,0,0,0,0,0,18,17,117,63,96,63,34,0,3,0,51,207,112,176,103,214,121,61,97,63,35,0,3,0,0,0,0,0,121,165,113,65,95,63,36,0,0,0,75,249,48,242,42,122,117,63,96,63,37,0,3,0,119,131,171,220,64,253,117,63,96,63,38,0,3,0,0,0,0,0,18,20,141,51,102,63,45,0,3,0,202,0,200,2,191,60,121,61,97,63,53,0,3,0,248,13,67,22,100,32,113,65,95,63,62,0,1,1,82,236,137,25,161,253,113,65,95,63,63,0,3,0,0,0,0,0,140,208,113,65,95,63,64,0,3,0,240,13,57,4,211,22,113,65,95,63,65,0,2,0,176,255,3,0,230,124,125,59,98,63,0,0,1,1,118,167,121,164,193,88,160,41,107,63,3,0,3,0,230,255,230,255,26,1,141,51,102,63,9,0,2,0,36,113,62,249,123,15,117,63,96,63,12,0,3,0,37,160,134,25,5,2,125,59,98,63,13,0,3,0,158,110,169,53,160,251,129,57,99,63,15,0,3,0,0,0,0,0,207,20,125,59,98,63,26,0,3,0,0,0,0,0,89,43,129,57,99,63,33,0,2,0,165,140,227,0,97,20,117,63,96,63,36,0,0,0,196,252,251,241,77,122,121,61,97,63,50,0,3,0,0,0,0,0,118,43,117,63,96,63,54,0,3,0,0,0,0,0,56,59,133,55,100,63,57,0,1,1,84,244,228,223,181,6,117,63,96,63,62,0,1,1,138,241,119,24,228,254,117,63,96,63,63,0,3,0,0,0,0,0,107,214,117,63,96,63,64,0,3,0,29,13,40,3,247,23,117,63,96,63,65,0,2,0,28,255,184,0,53,126,129,57,99,63,7,0,3,0,81,7,22,253,172,247,121,61,97,63,10,0,3,0,160,20,7,89,237,230,121,61,97,63,12,0,3,0,219,159,11,24,127,2,129,57,99,63,25,0,3,0,102,255,135,3,26,38,129,57,99,63,29,0,3,0,22,12,51,20,124,13,125,59,98,63,30,0,3,0,0,0,0,0,218,66,125,59,98,63,34,0,3,0,179,208,218,173,184,222,121,61,97,63,36,0,0,0,7,255,132,242,171,122,125,59,98,63,37,0,3,0,149,132,71,214,217,251,141,51,102,63,38,0,3,0,0,0,0,0,99,28,137,53,101,63,39,0,3,0,0,0,0,0,253,23,133,55,100,63,42,0,3,0,0,0,0,0,21,27,141,51,102,63,43,0,3,0,0,0,0,0,200,28,129,57,99,63,46,0,3,0,0,0,0,0,128,42,129,57,99,63,47,0,3,0,0,0,0,0,100,15,125,59,98,63,54,0,3,0,0,0,0,0,248,66,121,61,97,63,62,0,1,1,162,247,77,23,60,0,125,59,98,63,63,0,3,0,0,0,0,0,183,228,121,61,97,63,64,0,3,0,48,12,237,1,167,23,121,61,97,63,65,0,2,0,68,255,172,0,59,127,210,19,118,63,1,0,0,1,169,165,84,165,87,90,125,59,98,63,10,0,3,0,78,19,119,90,73,234,129,57,99,63,11,0,3,0,0,0,0,0,119,167,125,59,98,63,12,0,3,0,83,159,123,22,228,2,133,55,100,63,18,0,3,0,0,0,0,0,156,25,137,53,101,63,21,0,3,0,245,6,107,0,61,52,137,53,101,63,22,0,3,0,0,0,0,0,181,41,125,59,98,63,35,0,3,0,0,0,0,0,190,168,125,59,98,63,36,0,0,0,103,0,162,243,81,123,133,55,100,63,41,0,3,0,84,251,151,250,164,42,133,55,100,63,50,0,3,0,0,0,0,0,81,50,137,53,101,63,51,0,3,0,0,0,0,0,150,40,137,53,101,63,53,0,3,0,36,13,112,27,111,28,141,51,102,63,55,0,3,0,0,0,0,0,10,17,125,59,98,63,62,0,1,1,148,252,84,22,71,1,125,59,98,63,64,0,3,0,170,11,227,0,252,22,125,59,98,63,65,0,2,0,141,255,119,0,242,127,133,55,100,63,0,0,1,1,47,167,62,165,28,89,129,57,99,63,10,0,3,0,251,17,193,91,153,237,129,57,99,63,12,0,3,0,153,158,221,20,56,3,137,53,101,63,13,0,3,0,153,112,94,55,19,251,141,51,102,63,14,0,3,0,0,0,0,0,107,25,137,53,101,63,19,0,3,0,0,0,0,0,103,23,133,55,100,63,26,0,3,0,0,0,0,0,249,45,148,47,104,63,27,0,3,0,0,0,0,0,221,44,129,57,99,63,30,0,3,0,0,0,0,0,219,68,141,51,102,63,31,0,3,0,0,0,0,0,165,17,133,55,100,63,34,0,3,0,251,210,229,171,214,231,141,51,102,63,35,0,3,0,0,0,0,0,228,182,129,57,99,63,36,0,0,0,240,0,85,245,102,124,137,53,101,63,37,0,3,0,167,134,110,204,172,249,145,49,103,63,49,0,3,0,69,7,176,4,137,56,137,53,101,63,54,0,3,0,0,0,0,0,197,78,133,55,100,63,58,0,3,0,0,0,0,0,162,229,133,55,100,63,59,0,3,0,219,248,238,251,71,12,129,57,99,63,62,0,1,1,110,253,185,21,76,1,129,57,99,63,63,0,3,0,0,0,0,0,114,229,129,57,99,63,64,0,3,0,86,12,136,0,5,23,129,57,99,63,65,0,3,0,149,255,113,0,239,127,137,53,101,63,7,0,3,0,135,6,243,251,110,248,133,55,100,63,10,0,3,0,170,16,233,92,213,240,137,53,101,63,11,0,3,0,0,0,0,0,46,174,137,53,101,63,12,0,3,0,191,156,145,17,178,3,145,49,103,63,15,0,3,0,0,0,0,0,10,23,141,51,102,63,17,0,3,0,145,21,117,7,207,39,145,49,103,63,23,0,3,0,0,0,0,0,248,14,141,51,102,63,25,0,3,0,10,254,92,2,189,41,137,53,101,63,29,0,3,0,61,10,120,18,22,16,137,53,101,63,30,0,3,0,0,0,0,0,142,72,141,51,102,63,33,0,2,0,253,141,221,2,167,18,133,55,100,63,36,0,0,0,226,0,100,247,173,125,141,51,102,63,46,0,3,0,0,0,0,0,159,47,141,51,102,63,47,0,3,0,0,0,0,0,10,18,133,55,100,63,62,0,1,1,246,252,75,21,250,0,133,55,100,63,63,0,3,0,0,0,0,0,98,228,133,55,100,63,64,0,3,0,76,13,107,0,45,23,137,53,101,63,65,0,2,0,144,255,116,0,243,127,141,51,102,63,0,0,1,1,250,166,161,165,54,89,137,53,101,63,10,0,3,0,96,15,239,93,246,243,145,49,103,63,18,0,3,0,0,0,0,0,10,27,145,49,103,63,26,0,3,0,0,0,0,0,109,49,137,53,101,63,34,0,3,0,75,212,34,171,98,236,137,53,101,63,36,0,0,0,121,0,161,249,13,127,141,51,102,63,41,0,3,0,69,251,141,249,175,41,141,51,102,63,42,0,3,0,0,0,0,0,16,29,137,53,101,63,50,0,3,0,0,0,0,0,148,52,141,51,102,63,57,0,1,1,48,245,198,223,130,6,141,51,102,63,58,0,3,0,0,0,0,0,113,230,141,51,102,63,59,0,3,0,45,249,178,251,133,11,141,51,102,63,62,0,1,1,115,253,193,20,206,0,141,51,102,63,63,0,3,0,0,0,0,0,114,228,141,51,102,63,64,0,3,0,25,14,5,0,30,23,148,47,104,63,7,0,3,0,166,5,192,250,78,249,141,51,102,63,10,0,3,0,31,14,216,94,246,246,145,49,103,63,11,0,3,0,0,0,0,0,184,180,145,49,103,63,12,0,3,0,171,154,97,14,253,3,145,49,103,63,13,0,3,0,201,113,74,56,196,250,152,45,105,63,19,0,3,0,0,0,0,0,229,25,148,47,104,63,21,0,3,0,250,4,207,255,90,54,148,47,104,63,22,0,3,0,0,0,0,0,60,44,141,51,102,63,29,0,3,0,94,9,170,17,80,17,145,49,103,63,30,0,3,0,0,0,0,0,214,75,141,51,102,63,34,0,3,0,154,213,122,170,180,240,141,51,102,63,36,0,3,0,146,127,219,255,223,251,141,51,102,63,37,0,3,0,98,135,102,201,255,248,145,49,103,63,39,0,3,0,0,0,0,0,58,26,141,51,102,63,50,0,3,0,0,0,0,0,181,54,145,49,103,63,51,0,3,0,0,0,0,0,238,42,145,49,103,63,53,0,3,0,195,12,193,29,164,26,141,51,102,63,54,0,3,0,0,0,0,0,93,82,164,39,108,63,65,0,2,0,165,255,94,0,245,127,152,45,105,63,0,0,1,1,227,166,59,165,197,88,205,21,117,63,2,0,3,0,200,255,248,1,81,252,152,45,105,63,9,0,2,0,12,113,158,248,250,14,145,49,103,63,10,0,3,0,237,12,165,95,204,249,156,43,106,63,14,0,3,0,0,0,0,0,128,27,152,45,105,63,17,0,3,0,185,18,199,7,176,39,152,45,105,63,25,0,3,0,224,252,92,1,210,44,148,47,104,63,29,0,3,0,196,7,48,16,149,19,176,33,111,63,31,0,3,0,0,0,0,0,115,18,148,47,104,63,33,0,2,0,183,142,241,3,188,17,145,49,103,63,34,0,3,0,218,214,233,169,156,244]);fileData1.push.apply(fileData1,[148,47,104,63,35,0,3,0,0,0,0,0,244,189,145,49,103,63,36,0,3,0,123,126,64,255,244,253,145,49,103,63,37,0,3,0,19,136,171,198,99,248,148,47,104,63,38,0,3,0,0,0,0,0,157,30,148,47,104,63,41,0,3,0,56,251,180,248,230,40,148,47,104,63,42,0,3,0,0,0,0,0,174,30,148,47,104,63,43,0,3,0,0,0,0,0,68,30,152,45,105,63,45,0,3,0,165,0,236,1,223,60,148,47,104,63,46,0,3,0,0,0,0,0,93,50,148,47,104,63,47,0,3,0,0,0,0,0,118,19,145,49,103,63,50,0,3,0,0,0,0,0,162,56,145,49,103,63,54,0,3,0,0,0,0,0,150,85,145,49,103,63,55,0,3,0,0,0,0,0,195,17,148,47,104,63,57,0,1,1,126,245,182,223,158,6,148,47,104,63,58,0,3,0,0,0,0,0,115,230,145,49,103,63,59,0,3,0,30,249,157,251,99,11,160,41,107,63,62,0,1,1,248,254,132,19,37,1,152,45,105,63,63,0,3,0,0,0,0,0,118,229,152,45,105,63,64,0,3,0,101,14,173,255,119,22,148,47,104,63,10,0,3,0,206,11,91,96,113,252,148,47,104,63,11,0,3,0,0,0,0,0,217,183,152,45,105,63,12,0,3,0,183,152,137,11,42,4,152,45,105,63,13,0,3,0,212,114,21,57,127,250,156,43,106,63,15,0,3,0,0,0,0,0,96,24,160,41,107,63,18,0,3,0,0,0,0,0,139,28,160,41,107,63,23,0,3,0,0,0,0,0,192,16,152,45,105,63,26,0,3,0,0,0,0,0,99,51,148,47,104,63,30,0,3,0,0,0,0,0,81,77,148,47,104,63,34,0,3,0,231,215,102,169,241,247,148,47,104,63,36,0,3,0,169,125,204,254,185,255,148,47,104,63,37,0,3,0,180,136,82,196,221,247,148,47,104,63,39,0,3,0,0,0,0,0,37,27,156,43,106,63,49,0,3,0,219,6,137,4,74,57,148,47,104,63,50,0,3,0,0,0,0,0,73,58,148,47,104,63,51,0,3,0,0,0,0,0,228,43,148,47,104,63,53,0,3,0,155,12,180,30,232,25,148,47,104,63,54,0,3,0,0,0,0,0,87,88,152,45,105,63,55,0,3,0,0,0,0,0,223,18,164,39,108,63,59,0,3,0,61,248,77,251,86,11,229,11,122,63,4,0,3,0,206,1,60,1,212,1,160,41,107,63,7,0,3,0,37,5,38,250,234,249,152,45,105,63,10,0,3,0,196,10,253,96,223,254,152,45,105,63,11,0,3,0,0,0,0,0,215,186,156,43,106,63,21,0,3,0,221,3,119,255,136,55,160,41,107,63,22,0,3,0,0,0,0,0,68,46,156,43,106,63,27,0,3,0,0,0,0,0,209,44,156,43,106,63,29,0,3,0,96,6,231,14,139,21,156,43,106,63,30,0,3,0,0,0,0,0,245,79,152,45,105,63,33,0,2,0,248,142,87,4,103,17,152,45,105,63,34,0,3,0,163,216,225,168,118,250,156,43,106,63,35,0,3,0,0,0,0,0,170,196,152,45,105,63,36,0,3,0,77,125,198,254,241,0,152,45,105,63,37,0,3,0,53,137,129,194,116,247,152,45,105,63,38,0,3,0,0,0,0,0,107,31,152,45,105,63,39,0,3,0,0,0,0,0,219,27,156,43,106,63,41,0,3,0,48,251,42,248,102,40,156,43,106,63,42,0,3,0,0,0,0,0,180,31,156,43,106,63,43,0,3,0,0,0,0,0,51,31,152,45,105,63,46,0,3,0,0,0,0,0,90,51,156,43,106,63,47,0,3,0,0,0,0,0,92,20,152,45,105,63,50,0,3,0,0,0,0,0,146,59,156,43,106,63,51,0,3,0,0,0,0,0,51,45,152,45,105,63,53,0,3,0,124,12,112,31,84,25,152,45,105,63,54,0,3,0,0,0,0,0,119,90,168,37,109,63,57,0,1,1,219,245,152,223,35,7,164,39,108,63,58,0,3,0,0,0,0,0,252,229,172,35,110,63,60,0,2,0,0,0,0,0,255,127,168,37,109,63,0,0,1,1,216,166,86,164,247,87,168,37,109,63,9,0,2,0,244,112,5,248,128,14,156,43,106,63,10,0,3,0,212,9,143,97,14,1,156,43,106,63,11,0,3,0,0,0,0,0,172,189,156,43,106,63,12,0,3,0,227,151,80,10,59,4,160,41,107,63,13,0,3,0,178,115,199,57,68,250,164,39,108,63,17,0,3,0,132,16,10,8,149,39,156,43,106,63,19,0,3,0,0,0,0,0,106,26,160,41,107,63,25,0,3,0,62,252,208,0,126,46,160,41,107,63,26,0,3,0,0,0,0,0,14,53,160,41,107,63,33,0,2,0,61,143,214,4,254,16,156,43,106,63,34,0,3,0,1,217,93,168,58,252,156,43,106,63,36,0,3,0,95,125,4,255,195,1,156,43,106,63,37,0,3,0,151,137,36,193,38,247,160,41,107,63,38,0,3,0,0,0,0,0,104,32,156,43,106,63,39,0,3,0,0,0,0,0,100,28,168,37,109,63,45,0,3,0,149,0,140,1,236,60,156,43,106,63,46,0,3,0,0,0,0,0,23,52,156,43,106,63,50,0,3,0,0,0,0,0,136,60,156,43,106,63,53,0,3,0,101,12,254,31,230,24,156,43,106,63,54,0,3,0,0,0,0,0,13,92,160,41,107,63,55,0,3,0,0,0,0,0,120,19,172,35,110,63,63,0,3,0,0,0,0,0,199,231,172,35,110,63,64,0,3,0,111,14,54,255,11,21,160,41,107,63,10,0,3,0,5,9,23,98,243,2,160,41,107,63,11,0,3,0,0,0,0,0,73,192,160,41,107,63,12,0,3,0,64,151,72,9,77,4,168,37,109,63,14,0,3,0,0,0,0,0,169,28,168,37,109,63,15,0,3,0,0,0,0,0,104,25,168,37,109,63,19,0,3,0,0,0,0,0,179,27,168,37,109,63,21,0,3,0,146,2,20,255,230,56,200,23,116,63,27,0,3,0,0,0,0,0,198,44,164,39,108,63,29,0,3,0,59,5,212,13,33,23,164,39,108,63,30,0,3,0,0,0,0,0,42,82,160,41,107,63,34,0,3,0,209,216,214,167,33,253,168,37,109,63,35,0,3,0,0,0,0,0,14,207,160,41,107,63,36,0,3,0,247,125,124,255,55,2,160,41,107,63,37,0,3,0,217,137,69,192,244,246,164,39,108,63,39,0,3,0,0,0,0,0,240,28,160,41,107,63,41,0,3,0,46,251,4,248,67,40,164,39,108,63,42,0,3,0,0,0,0,0,39,32,164,39,108,63,43,0,3,0,0,0,0,0,156,31,164,39,108,63,46,0,3,0,0,0,0,0,216,52,164,39,108,63,47,0,3,0,0,0,0,0,193,20,168,37,109,63,49,0,3,0,187,6,126,4,131,57,160,41,107,63,50,0,3,0,0,0,0,0,39,61,164,39,108,63,51,0,3,0,0,0,0,0,198,45,164,39,108,63,53,0,3,0,77,12,143,32,117,24,160,41,107,63,54,0,3,0,0,0,0,0,17,93,239,7,124,63,3,0,3,0,50,1,60,1,26,1,0,0,128,63,5,0,3,0,49,3,162,0,50,2,172,35,110,63,7,0,3,0,247,4,9,250,85,250,164,39,108,63,10,0,3,0,81,8,148,98,148,4,164,39,108,63,11,0,3,0,0,0,0,0,182,194,164,39,108,63,12,0,3,0,189,150,105,8,94,4,168,37,109,63,13,0,3,0,94,116,97,58,17,250,176,33,111,63,18,0,3,0,0,0,0,0,145,29,172,35,110,63,22,0,3,0,0,0,0,0,199,47,176,33,111,63,23,0,3,0,0,0,0,0,243,17,172,35,110,63,25,0,3,0,136,251,51,0,101,48,168,37,109,63,26,0,3,0,0,0,0,0,108,54,168,37,109,63,33,0,2,0,65,143,4,5,218,16,164,39,108,63,34,0,3,0,89,216,77,167,115,253,164,39,108,63,36,0,3,0,218,126,19,0,101,2,164,39,108,63,37,0,3,0,255,137,193,191,215,246,168,37,109,63,38,0,3,0,0,0,0,0,189,32,164,39,108,63,41,0,3,0,45,251,238,247,46,40,164,39,108,63,50,0,3,0,0,0,0,0,132,61,164,39,108,63,54,0,3,0,0,0,0,0,170,93,172,35,110,63,55,0,3,0,0,0,0,0,174,19,176,33,111,63,62,0,1,1,91,0,143,18,138,1,168,37,109,63,10,0,3,0,184,7,6,99,239,5,168,37,109,63,11,0,3,0,0,0,0,0,241,196,172,35,110,63,12,0,3,0,5,150,26,7,116,4,176,33,111,63,17,0,3,0,245,14,59,8,126,39,172,35,110,63,29,0,3,0,85,4,247,12,94,24,172,35,110,63,30,0,3,0,0,0,0,0,240,83,168,37,109,63,34,0,3,0,191,215,192,166,95,253,172,35,110,63,36,0,0,0,64,1,64,2,13,127,168,37,109,63,37,0,3,0,16,138,134,191,201,246,172,35,110,63,39,0,3,0,0,0,0,0,12,29,210,19,118,63,41,0,3,0,46,251,0,248,63,40,190,27,114,63,42,0,3,0,0,0,0,0,40,32,176,33,111,63,43,0,3,0,0,0,0,0,172,31,176,33,111,63,46,0,3,0,0,0,0,0,244,52,195,25,115,63,47,0,3,0,0,0,0,0,190,20,172,35,110,63,50,0,3,0,0,0,0,0,181,61,176,33,111,63,51,0,3,0,0,0,0,0,219,45,172,35,110,63,53,0,3,0,72,12,171,32,95,24,168,37,109,63,54,0,3,0,0,0,0,0,239,93,185,29,113,63,58,0,3,0,0,0,0,0,19,229,190,27,114,63,59,0,3,0,215,246,247,250,183,11,200,23,116,63,65,0,2,0,212,255,45,0,250,127,200,23,116,63,0,0,2,1,223,166,48,163,72,86,176,33,111,63,6,0,3,0,2,253,52,0,61,16,181,31,112,63,9,0,2,0,232,112,187,247,69,14,172,35,110,63,10,0,3,0,51,7,107,99,16,7,172,35,110,63,11,0,3,0,0,0,0,0,4,199,181,31,112,63,13,0,3,0,28,117,14,59,216,249,185,29,113,63,14,0,3,0,0,0,0,0,177,29,185,29,113,63,15,0,3,0,0,0,0,0,83,26,181,31,112,63,19,0,3,0,0,0,0,0,154,28,181,31,112,63,21,0,3,0,171,1,207,254,218,57,176,33,111,63,26,0,3,0,0,0,0,0,128,55,200,23,116,63,33,0,2,0,23,143,244,4,233,16,172,35,110,63,34,0,3,0,53,215,49,166,22,253,172,35,110,63,35,0,3,0,0,0,0,0,57,210,176,33,111,63,37,0,3,0,14,138,142,191,203,246,210,19,118,63,38,0,3,0,0,0,0,0,115,32,172,35,110,63,45,0,3,0,149,0,139,1,236,60,200,23,116,63,49,0,3,0,194,6,129,4,117,57,176,33,111,63,54,0,3,0,0,0,0,0,229,93,205,21,117,63,57,0,1,1,22,246,116,223,68,8,190,27,114,63,7,0,3,0,26,5,119,250,167,250,176,33,111,63,10,0,3,0,186,6,193,99,4,8,181,31,112,63,11,0,3,0,0,0,0,0,216,202,181,31,112,63,12,0,3,0,83,149,25,6,107,4,185,29,113,63,22,0,3,0,0,0,0,0,211,48,181,31,112,63,25,0,3,0,46,251,229,255,85,49,181,31,112,63,29,0,3,0,158,3,73,12,89,25,181,31,112,63,30,0,3,0,0,0,0,0,80,85,176,33,111,63,34,0,3,0,241,214,158,165,209,252,176,33,111,63,35,0,3,0,0,0,0,0,7,213,176,33,111,63,36,0,0,0,175,1,16,2,50,126,210,19,118,63,39,0,3,0,0,0,0,0,198,28,214,17,119,63,45,0,3,0,154,0,167,1,232,60,181,31,112,63,50,0,3,0,0,0,0,0,148,61,176,33,111,63,53,0,3,0,73,12,164,32,100,24,214,17,119,63,55,0,3,0,0,0,0,0,114,19,0,0,128,63,60,0,2,0,0,0,0,0,255,127,190,27,114,63,63,0,3,0,0,0,0,0,14,234,195,25,115,63,64,0,3,0,51,14,206,254,63,19,0,0,128,63,6,0,3,0,2,253,52,0,61,16,185,29,113,63,10,0,3,0,235,5,71,100,108,9,190,27,114,63,17,0,3,0,223,13,92,8,111,39,200,23,116,63,18,0,3,0,0,0,0,0,74,30,195,25,115,63,23,0,3,0,0,0,0,0,173,18,190,27,114,63,26,0,3,0,0,0,0,0,174,56,214,17,119,63,31,0,3,0,0,0,0,0,181,18,181,31,112,63,34,0,3,0,17,215,9,165,177,252,181,31,112,63,35,0,3,0,0,0,0,0,100,215,181,31,112,63,36,0,0,0,238,1,221,1,157,125,190,27,114,63,37,0,3,0,0,138,190,191,214,246,205,21,117,63,43,0,3,0,0,0,0,0,136,31,210,19,118,63,46,0,3,0,0,0,0,0,158,52,219,15,120,63,51,0,3,0,0,0,0,0,115,45,214,17,119,63,53,0,3,0,87,12,81,32,165,24,185,29,113,63,54,0,3,0,0,0,0,0,184,93,200,23,116,63,62,0,1,1,85,2,100,17,34,2,185,29,113,63,9,0,2,0,229,112,168,247,54,14,190,27,114,63,11,0,3,0,0,0,0,0,67,206,190,27,114,63,12,0,3,0,164,148,89,5,71,4,195,25,115,63,13,0,3,0,160,117,124,59,179,249,205,21,117,63,19,0,3,0,0,0,0,0,130,29,195,25,115,63,21,0,3,0,10,1,159,254,130,58,195,25,115,63,25,0,3,0,203,250,142,255,91,50,195,25,115,63,29,0,3,0,213,2,140,11,111,26,185,29,113,63,30,0,3,0,0,0,0,0,224,85,185,29,113,63,34,0,3,0,227,215,115,164,0,253,185,29,113,63,35,0,3,0,0,0,0,0,30,217,185,29,113,63,36,0,0,0,224,1,194,1,144,125,205,21,117,63,50,0,3,0,0,0,0,0,84,61,224,13,121,63,9,0,2,0,216,112,73,247,234,13,195,25,115,63,10,0,3,0,68,5,167,100,67,10,214,17,119,63,14,0,3,0,0,0,0,0,126,30,214,17,119,63,15,0,3,0,0,0,0,0,9,27,205,21,117,63,22,0,3,0,0,0,0,0,179,49,200,23,116,63,30,0,3,0,0,0,0,0,42,87,195,25,115,63,34,0,3,0,114,218,74,163,10,254,195,25,115,63,35,0,3,0,0,0,0,0,156,219,195,25,115,63,36,0,0,0,91,1,151,1,34,126,205,21,117,63,54,0,3,0,0,0,0,0,90,93,234,9,123,63,58,0,3,0,0,0,0,0,215,226,214,17,119,63,7,0,3,0,167,5,154,251,209,250,200,23,116,63,11,0,3,0,0,0,0,0,91,209,205,21,117,63,12,0,3,0,163,147,152,4,236,3,214,17,119,63,17,0,3,0,194,12,123,8,97,39,210,19,118,63,26,0,3,0,0,0,0,0,169,57,210,19,118,63,37,0,3,0,223,137,44,192,239,246,205,21,117,63,42,0,3,0,0,0,0,0,17,32,214,17,119,63,59,0,3,0,136,245,180,250,38,12,210,19,118,63,63,0,3,0,0,0,0,0,199,236,205,21,117,63,10,0,3,0,185,4,235,100,170,10,214,17,119,63,13,0,3,0,22,118,208,59,149,249,219,15,120,63,21,0,3,0,100,0,106,254,48,59,219,15,120,63,23,0,3,0,0,0,0,0,47,19,219,15,120,63,25,0,3,0,98,250,53,255,105,51,214,17,119,63,29,0,3,0,39,2,237,10,100,27,200,23,116,63,34,0,3,0,251,219,185,162,160,254,205,21,117,63,35,0,3,0,0,0,0,0,100,221,205,21,117,63,36,0,0,0,143,0,97,1,28,127,253,1,127,63,47,0,3,0,0,0,0,0,24,20,224,13,121,63,64,0,3,0,186,13,89,254,152,16,234,9,123,63,0,0,2,1,246,166,151,163,112,84,214,17,119,63,11,0,3,0,0,0,0,0,143,213,0,0,128,63,18,0,3,0,0,0,0,0,43,31,214,17,119,63,27,0,3,0,0,0,0,0,191,44,205,21,117,63,30,0,3,0,0,0,0,0,124,87,234,9,123,63,33,0,2,0,8,143,165,4,40,17,210,19,118,63,34,0,3,0,91,223,161,161,205,255,224,13,121,63,49,0,3,0,211,6,135,4,87,57,224,13,121,63,62,0,1,1,182,4,66,16,207,2,229,11,122,63,65,0,2,0,243,255,13,0,254,127,0,0,128,63,2,0,3,0,117,254,89,4,67,250,214,17,119,63,10,0,3,0,65,4,26,101,193,10,210,19,118,63,12,0,3,0,79,147,106,4,198,3,0,0,128,63,19,0,3,0,0,0,0,0,168,30,214,17,119,63,22,0,3,0,0,0,0,0,254,49,224,13,121,63,30,0,3,0,0,0,0,0,116,88,214,17,119,63,35,0,3,0,0,0,0,0,174,222,219,15,120,63,36,0,3,0,250,126,10,255,248,0,0,0,128,63,42,0,3,0,0,0,0,0,86,31,0,0,128,63,43,0,3,0,0,0,0,0,221,30,239,7,124,63,50,0,3,0,0,0,0,0,86,60,214,17,119,63,54,0,3,0,0,0,0,0,249,92,210,19,118,63,57,0,1,1,25,246,112,223,108,8,0,0,128,63,1,0,1,1,171,165,171,165,175,90,248,3,126,63,12,0,3,0,182,144,94,3,113,2,248,3,126,63,26,0,3,0,0,0,0,0,234,58,224,13,121,63,34,0,3,0,15,229,30,160,153,1,234,9,123,63,37,0,3,0,148,137,50,193,41,247,253,1,127,63,38,0,3,0,0,0,0,0,154,31,0,0,128,63,39,0,3,0,0,0,0,0,241,27,0,0,128,63,41,0,3,0,51,251,92,248,148,40,224,13,121,63,46,0,3,0,0,0,0,0,77,52,239,7,124,63,57,0,1,1,39,246,95,223,105,9,224,13,121,63,63,0,3,0,0,0,0,0,49,239,248,3,126,63,7,0,3,0,148,6,119,253,248,250,244,5,125,63,10,0,3,0,244,2,112,101,113,10,248,3,126,63,11,0,3,0,0,0,0,0,207,222,248,3,126,63,13,0,3,0,178,118,45,60,114,249,253,1,127,63,14,0,3,0,0,0,0,0,46,31,0,0,128,63,15,0,3,0,0,0,0,0,191,27,244,5,125,63,17,0,3,0,215,11,145,8,88,39,244,5,125,63,22,0,3,0,0,0,0,0,179,50,0,0,128,63,27,0,3,0,0,0,0,0,169,44,253,1,127,63,29,0,3,0,24,1,252,9,229,28,0,0,128,63,31,0,3,0,0,0,0,0,218,18,229,11,122,63,35,0,3,0,0,0,0,0,254,223,0,0,128,63,45,0,3,0,164,0,229,1,224,60,253,1,127,63,53,0,3,0,117,12,156,31,50,25,0,0,128,63,54,0,3,0,0,0,0,0,184,90,0,0,128,63,55,0,3,0,0,0,0,0,238,18,244,5,125,63,59,0,3,0,244,243,98,250,158,12,248,3,126,63,21,0,3,0,200,255,56,254,210,59,253,1,127,63,23,0,3,0,0,0,0,0,192,19,248,3,126,63,25,0,3,0,0,250,225,254,99,52,244,5,125,63,36,0,3,0,31,123,23,252,45,0,248,3,126,63,51,0,3,0,0,0,0,0,230,44,0,0,128,63,9,0,2,0,208,112,8,247,182,13,253,1,127,63,30,0,3,0,0,0,0,0,214,89,253,1,127,63,34,0,3,0,69,241,152,157,255,4,0,0,128,63,46,0,3,0,0,0,0,0,120,51,0,0,128,63,49,0,3,0,241,6,145,4,34,57,239,7,124,63,62,0,1,1,103,6,151,15,64,3,239,7,124,63,63,0,3,0,0,0,0,0,6,242,239,7,124,63,64,0,3,0,119,13,28,254,253,14,0,0,128,63,4,0,3,0,140,2,190,1,212,1,253,1,127,63,35,0,3,0,0,0,0,0,211,225,0,0,128,63,65,0,2,0,0,0,0,0,255,127,239,7,124,63,0,0,2,1,250,166,167,163,45,84,0,0,128,63,33,0,2,0,252,142,99,4,93,17,0,0,128,63,37,0,3,0,68,137,73,194,104,247,0,0,128,63,58,0,3,0,0,0,0,0,213,225,0,0,128,63,0,0,2,1,7,167,226,163,39,83,0,0,128,63,3,0,3,0,122,1,135,1,26,1,248,3,126,63,50,0,3,0,0,0,0,0,4,60,0,0,128,63,57,0,1,1,58,246,86,223,22,10,244,5,125,63,62,0,1,1,8,7,94,15,104,3,248,3,126,63,63,0,3,0,0,0,0,0,67,244,253,1,127,63,64,0,3,0,56,13,214,253,6,13,253,1,127,63,10,0,3,0,114,2,144,101,156,10,0,0,128,63,17,0,3,0,65,11,161,8,81,39,0,0,128,63,22,0,3,0,0,0,0,0,43,51,0,0,128,63,36,0,3,0,211,120,97,250,183,255,0,0,128,63,59,0,3,0,55,243,55,250,204,12,0,0,128,63,62,0,1,1,62,9,180,14,228,3,0,0,128,63,7,0,3,0,198,6,229,253,16,251,0,0,128,63,11,0,3,0,0,0,0,0,179,225,0,0,128,63,12,0,3,0,17,144,250,2,41,2,0,0,128,63,13,0,3,0,236,118,86,60,100,249,0,0,128,63,21,0,3,0,130,255,34,254,25,60,0,0,128,63,25,0,3,0,212,249,188,254,210,52,0,0,128,63,26,0,3,0,0,0,0,0,87,59,0,0,128,63,50,0,3,0,0,0,0,0,186,59,0,0,128,63,51,0,3,0,0,0,0,0,187,44,0,0,128,63,63,0,3,0,0,0,0,0,249,246,0,0,128,63,10,0,3,0,44,2,162,101,198,10,0,0,128,63,14,0,3,0,0,0,0,0,75,31,0,0,128,63,23,0,3,0,0,0,0,0,220,19,0,0,128,63,29,0,3,0,236,0,212,9,35,29,0,0,128,63,30,0,3,0,0,0,0,0,36,90,0,0,128,63,34,0,3,0,63,243,56,157,133,5,0,0,128,63,35,0,3,0,0,0,0,0,71,226,0,0,128,63,38,0,3,0,0,0,0,0,131,31,0,0,128,63,47,0,3,0,0,0,0,0,24,20,0,0,128,63,53,0,3,0,120,12,135,31,67,25,0,0,128,63,64,0,3,0,37,13,188,253,68,12,0,0,0,0,0,0,0,60,0,60,0,60,0,0,0,0,1,0,0,60,0,60,0,60,0,0,0,0,2,0,0,60,0,60,0,60,0,0,0,0,3,0,0,60,0,60,0,60,0,0,0,0,4,0,0,60,0,60,0,60,0,0,0,0,5,0,0,60,0,60,0,60,0,0,0,0,6,0,0,60,0,60,0,60,0,0,0,0,7,0,0,60,0,60,0,60,0,0,0,0,8,0,0,60,0,60,0,60,0,0,0,0,9,0,0,60,0,60,0,60,0,0,0,0,10,0,0,60,0,60,0,60,0,0,0,0,11,0,0,60,0,60,0,60,0,0,0,0,12,0,0,60,0,60,0,60,0,0,0,0,13,0,0,60,0,60,0,60,0,0,0,0,14,0,0,60,0,60,0,60,0,0,0,0,15,0,0,60,0,60,0,60,0,0,0,0,16,0,0,60,0,60,0,60,0,0,0,0,17,0,0,60,0,60,0,60,0,0,0,0,18,0,0,60,0,60,0,60,0,0,0,0,19,0,0,60,0,60,0,60,0,0,0,0,20,0,0,60,0,60,0,60,0,0,0,0,21,0,0,60,0,60,0,60,0,0,0,0,22,0,0,60,0,60,0,60,0,0,0,0,23,0,0,60,0,60,0,60,0,0,0,0,24,0,0,60,0,60,0,60,0,0,0,0,25,0,0,60,0,60,0,60,0,0,0,0,26,0,0,60,0,60,0,60,0,0,0,0,27,0,0,60,0,60,0,60,0,0,0,0,28,0,0,60,0,60,0,60,0,0,0,0,29,0,0,60,0,60,0,60,0,0,0,0,30,0,0,60,0,60,0,60,0,0,0,0,31,0,0,60,0,60,0,60,0,0,0,0,32,0,0,60,0,60,0,60,0,0,0,0,33,0,0,60,0,60,0,60,0,0,0,0,34,0,0,60,0,60,0,60,0,0,0,0,35,0,0,60,0,60,0,60,0,0,0,0,36,0,0,60,0,60,0,60,0,0,0,0,37,0,0,60,0,60,0,60,0,0,0,0,38,0,0,60,0,60,0,60,0,0,0,0,39,0,0,60,0,60,0,60,0,0,0,0,40,0,0,60,0,188,0,60,0,0,0,0,41,0,0,60,0,60,0,60,0,0,0,0,42,0,0,60,0,60,0,60,0,0,0,0,43,0,0,60,0,60,0,60,0,0,0,0,44,0,0,60,0,188,0,60,0,0,0,0,45,0,0,60,0,60,0,60,0,0,0,0,46,0,0,60,0,60,0,60,0,0,0,0,47,0,0,60,0,60,0,60,0,0,0,0,48,0,0,60,0,188,0,60,0,0,0,0,49,0,0,60,0,60,0,60,0,0,0,0,50,0,0,60,0,60,0,60,0,0,0,0,51,0,0,60,0,60,0,60,0,0,0,0,52,0,0,60,0,188,0,60,0,0,0,0,53,0,0,60,0,60,0,60,0,0,0,0,54,0,0,60,0,60,0,60,0,0,0,0,55,0,0,60,0,60,0,60,0,0,0,0,56,0,0,60,0,188,0,60,0,0,0,0,57,0,0,60,0,60,0,60,0,0,0,0,58,0,0,60,0,60,0,60,0,0,0,0,59,0,0,60,0,60,0,60,0,0,0,0,60,0,0,60,0,60,0,60,0,0,0,0,61,0,0,60,0,188,0,60,0,0,0,0,62,0,0,60,0,60,0,60,0,0,0,0,63,0,0,60,0,60,0,60,0,0,0,0,64,0,0,60,0,60,0,60,0,0,0,0,65,0,0,60,0,60,0,60,0,0,0,0,66,0,0,60,0,60,0,60,0,0,0,0,67,0,0,60,0,60,0,60,0,0,128,63,0,0,0,60,0,60,0,60,0,0,128,63,1,0,0,60,0,60,0,60,0,0,128,63,2,0,0,60,0,60,0,60,0,0,128,63,3,0,0,60,0,60,0,60,0,0,128,63,4,0,0,60,0,60,0,60,0,0,128,63,5,0,0,60,0,60,0,60,0,0,128,63,6,0,0,60,0,60,0,60,0,0,128,63,7,0,0,60,0,60,0,60,0,0,128,63,8,0,0,60,0,60,0,60,0,0,128,63,9,0,0,60,0,60,0,60,0,0,128,63,10,0,0,60,0,60,0,60,0,0,128,63,11,0,0,60,0,60,0,60,0,0,128,63,12,0,0,60,0,60,0,60,0,0,128,63,13,0,0,60,0,60,0,60,0,0,128,63,14,0,0,60,0,60,0,60,0,0,128,63,15,0,0,60,0,60,0,60,0,0,128,63,16,0,0,60,0,60,0,60,0,0,128,63,17,0,0,60,0,60,0,60,0,0,128,63,18,0,0,60,0,60,0,60,0,0,128,63,19,0,0,60,0,60,0,60,0,0,128,63,20,0,0,60,0,60,0,60,0,0,128,63,21,0,0,60,0,60,0,60,0,0,128,63,22,0,0,60,0,60,0,60,0,0,128,63,23,0,0,60,0,60,0,60,0,0,128,63,24,0,0,60,0,60,0,60,0,0,128,63,25,0,0,60,0,60,0,60,0,0,128,63,26,0,0,60,0,60,0,60,0,0,128,63,27,0,0,60,0,60,0,60,0,0,128,63,28,0,0,60,0,60,0,60,0,0,128,63,29,0,0,60,0,60,0,60,0,0,128,63,30,0,0,60,0,60,0,60,0,0,128,63,31,0,0,60,0,60,0,60,0,0,128,63,32,0,0,60,0,60,0,60,0,0,128,63,33,0,0,60,0,60,0,60,0,0,128,63,34,0,0,60,0,60,0,60,0,0,128,63,35,0,0,60,0,60,0,60,0,0,128,63,36,0,0,60,0,60,0,60,0,0,128,63,37,0,0,60,0,60,0,60,0,0,128,63,38,0,0,60,0,60,0,60,0,0,128,63,39,0,0,60,0,60,0,60,0,0,128,63,40,0,0,60,0,188,0,60,0,0,128,63,41,0,0,60,0,60,0,60,0,0,128,63,42,0,0,60,0,60,0,60,0,0,128,63,43,0,0,60,0,60,0,60,0,0,128,63,44,0,0,60,0,188,0,60,0,0,128,63,45,0,0,60,0,60,0,60,0,0,128,63,46,0,0,60,0,60,0,60,0,0,128,63,47,0,0,60,0,60,0,60,0,0,128,63,48,0,0,60,0,188,0,60,0,0,128,63,49,0,0,60,0,60,0,60,0,0,128,63,50,0,0,60,0,60,0,60,0,0,128,63,51,0,0,60,0,60,0,60,0,0,128,63,52,0,0,60,0,188,0,60,0,0,128,63,53,0,0,60,0,60,0,60,0,0,128,63,54,0,0,60,0,60,0,60,0,0,128,63,55,0,0,60,0,60,0,60,0,0,128,63,56,0,0,60,0,188,0,60,0,0,128,63,57,0,0,60,0,60,0,60,0,0,128,63,58,0,0,60,0,60,0,60,0,0,128,63,59,0,0,60,0,60,0,60,0,0,128,63,60,0,0,60,0,60,0,60,0,0,128,63,61,0,0,60,0,188,0,60,0,0,128,63,62,0,0,60,0,60,0,60,0,0,128,63,63,0,0,60,0,60,0,60,0,0,128,63,64,0,0,60,0,60,0,60,0,0,128,63,65,0,0,60,0,60,0,60,0,0,128,63,66,0,0,60,0,60,0,60,0,0,128,63,67,0,0,60,0,60,0,60]);Module["FS_createDataFile"]("/media","animation.ozz",fileData1,true,true,false);var fileData2=[];fileData2.push.apply(fileData2,[35,32,79,122,122,45,97,110,105,109,97,116,105,111,110,32,115,97,109,112,108,101,58,32,65,110,105,109,97,116,105,111,110,32,112,108,97,121,98,97,99,107,10,10,35,35,32,68,101,115,99,114,105,112,116,105,111,110,10,10,76,111,97,100,115,32,97,32,115,107,101,108,101,116,111,110,32,97,110,100,32,97,110,32,97,110,105,109,97,116,105,111,110,32,102,114,111,109,32,111,122,122,32,98,105,110,97,114,121,32,97,114,99,104,105,118,101,115,46,32,84,104,101,110,32,112,108,97,121,98,97,99,107,115,32,97,110,105,109,97,116,105,111,110,32,97,110,100,32,114,101,110,100,101,114,115,32,116,104,101,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,97,110,105,109,97,116,101,100,32,115,107,101,108,101,116,111,110,46,10,10,35,35,32,67,111,110,99,101,112,116,10,10,84,104,105,115,32,115,97,109,112,108,101,32,108,111,97,100,115,32,111,122,122,32,98,105,110,97,114,121,32,97,114,99,104,105,118,101,32,102,105,108,101,32,40,116,111,32,114,101,97,100,32,97,110,32,97,110,105,109,97,116,105,111,110,32,97,110,100,32,97,32,115,107,101,108,101,116,111,110,41,46,32,79,122,122,32,98,105,110,97,114,121,32,102,105,108,101,115,32,99,97,110,32,98,101,32,112,114,111,100,117,99,101,100,32,119,105,116,104,32,111,122,122,32,99,111,109,109,97,110,100,32,108,105,110,101,32,116,111,111,108,32,102,98,120,50,111,122,122,44,32,111,114,32,119,105,116,104,32,111,122,122,32,115,101,114,105,97,108,105,122,101,114,32,40,111,122,122,58,58,105,111,58,58,79,65,114,99,104,105,118,101,41,32,102,114,111,109,32,121,111,117,114,32,111,119,110,32,97,112,112,108,105,99,97,116,105,111,110,47,99,111,110,118,101,114,116,101,114,46,10,65,116,32,101,118,101,114,121,32,102,114,97,109,101,32,116,104,101,32,97,110,105,109,97,116,105,111,110,32,105,115,32,115,97,109,112,108,101,100,32,119,105,116,104,32,111,122,122,58,58,97,110,105,109,97,116,105,111,110,58,58,83,97,109,112,108,105,110,103,74,111,98,46,32,83,97,109,112,108,101,100,32,108,111,99,97,108,45,115,112,97,99,101,32,111,117,116,112,117,116,32,105,115,32,116,104,101,110,32,99,111,110,118,101,114,116,101,100,32,116,111,32,109,111,100,101,108,45,115,112,97,99,101,32,109,97,116,114,105,99,101,115,32,102,111,114,32,114,101,110,100,101,114,105,110,103,32,117,115,105,110,103,32,111,122,122,58,58,97,110,105,109,97,116,105,111,110,58,58,76,111,99,97,108,84,111,77,111,100,101,108,74,111,98,46,10,10,35,35,32,83,97,109,112,108,101,32,117,115,97,103,101,10,10,83,111,109,101,32,112,97,114,97,109,101,116,101,114,115,32,99,97,110,32,98,101,32,116,117,110,101,100,32,102,114,111,109,32,115,97,109,112,108,101,32,85,73,58,10,45,32,80,108,97,121,47,112,97,117,115,101,32,97,110,105,109,97,116,105,111,110,46,10,45,32,70,105,120,32,97,110,105,109,97,116,105,111,110,32,116,105,109,101,46,10,45,32,83,101,116,32,112,108,97,121,98,97,99,107,32,115,112,101,101,100,44,32,119,104,105,99,104,32,99,97,110,32,98,101,32,110,101,103,97,116,105,118,101,32,116,111,32,103,111,32,98,97,99,107,119,97,114,100,46,10,10,35,35,32,73,109,112,108,101,109,101,110,116,97,116,105,111,110,10,10,49,46,32,76,111,97,100,32,97,110,105,109,97,116,105,111,110,32,97,110,100,32,115,107,101,108,101,116,111,110,46,10,32,32,32,49,46,32,79,112,101,110,32,97,32,111,122,122,58,58,105,111,58,58,79,65,114,99,104,105,118,101,32,111,98,106,101,99,116,32,119,105,116,104,32,97,32,118,97,108,105,100,32,111,122,122,58,58,105,111,58,58,83,116,114,101,97,109,32,97,115,32,97,114,103,117,109,101,110,116,46,32,84,104,101,32,115,116,114,101,97,109,32,99,97,110,32,98,101,32,97,32,111,122,122,58,58,105,111,58,58,70,105,108,101,44,32,111,114,32,121,111,117,114,32,99,117,115,116,111,109,32,105,111,32,114,101,97,100,32,99,97,112,97,98,108,101,32,111,98,106,101,99,116,32,116,104,97,116,32,105,110,104,101,114,105,116,115,32,102,114,111,109,32,111,122,122,58,58,105,111,58,58,83,116,114,101,97,109,46,10,32,32,32,50,46,32,67,104,101,99,107,32,116,104,97,116,32,116,104,101,32,115,116,114,101,97,109,32,115,116,111,114,101,115,32,116,104,101,32,101,120,112,101,99,116,101,100,32,111,98,106,101,99,116,32,117,115,105,110,103,32,111,122,122,58,58,105,111,58,58,79,65,114,99,104,105,118,101,58,58,84,101,115,116,84,97,103,40,41,32,102,117,110,99,116,105,111,110,46,32,79,98,106,101,99,116,32,116,121,112,101,32,105,115,32,115,112,101,99,105,102,105,101,100,32,97,115,32,97,32,116,101,109,112,108,97,116,101,32,97,114,103,117,109,101,110,116,46,10,32,32,32,51,46,32,68,101,45,115,101,114,105,97,108,105,122,101,32,116,104,101,32,111,98,106,101,99,116,32,119,105,116,104,32,62,62,32,111,112,101,114,97,116,111,114,46,10,50,46,32,65,108,108,111,99,97,116,101,115,32,114,117,110,116,105,109,101,32,98,117,102,102,101,114,115,32,40,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,115,32,111,102,32,116,121,112,101,32,111,122,122,58,58,109,97,116,104,58,58,83,111,97,84,114,97,110,115,102,111,114,109,44,32,109,111,100,101,108,45,115,112,97,99,101,32,109,97,116,114,105,99,101,115,32,111,102,32,116,121,112,101,32,111,122,122,58,58,109,97,116,104,58,58,70,108,111,97,116,52,120,52,41,32,119,105,116,104,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,101,108,101,109,101,110,116,115,32,114,101,113,117,105,114,101,100,32,102,111,114,32,116,104,101,32,115,107,101,108,101,116,111,110,46,32,78,111,116,101,32,116,104,97,116,32,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,32,97,114,101,32,83,111,97,32,111,98,106,101,99,116,115,44,32,109,101,97,110,105,110,103,32,116,104,97,116,32,49,32,111,122,122,58,58,109,97,116,104,58,58,83,111,97,84,114,97,110,115,102,111,114,109,32,99,97,110,32,115,116,111,114,101,32,109,117,108,116,105,112,108,101,32,40,52,41,32,106,111,105,110,116,115,46,10,51,46,32,65,108,108,111,99,97,116,101,115,32,115,97,109,112,108,105,110,103,32,99,97,99,104,101,32,40,111,122,122,58,58,97,110,105,109,97,116,105,111,110,58,58,83,97,109,112,108,105,110,103,67,97,99,104,101,41,32,119,105,116,104,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,106,111,105,110,116,115,32,114,101,113,117,105,114,101,100,32,102,111,114,32,116,104,101,32,97,110,105,109,97,116,105,111,110,46,32,84,104,105,115,32,99,97,99,104,101,32,105,115,32,117,115,101,100,32,116,111,32,115,116,111,114,101,32,115,97,109,112,108,105,110,103,32,108,111,99,97,108,32,100,97,116,97,32,97,115,32,119,101,108,108,32,97,115,32,111,112,116,105,109,105,122,105,110,103,32,107,101,121,45,102,114,97,109,101,32,108,111,111,107,117,112,32,119,104,105,108,101,32,114,101,97,100,105,110,103,32,97,110,105,109,97,116,105,111,110,32,102,111,114,119,97,114,100,46,10,52,46,32,83,97,109,112,108,101,32,97,110,105,109,97,116,105,111,110,32,116,111,32,103,101,116,32,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,115,32,117,115,105,110,103,32,111,122,122,58,58,97,110,105,109,97,116,105,111,110,58,58,83,97,109,112,108,105,110,103,74,111,98,46,32,84,104,105,115,32,106,111,98,32,116,97,107,101,115,32,97,115,32,105,110,112,117,116,32,116,104,101,32,97,110,105,109,97,116,105,111,110,44,32,116,104,101,32,99,97,99,104,101,32,97,110,100,32,97,32,116,105,109,101,32,97,116,32,119,104,105,99,104,32,116,104,101,32,97,110,105,109,97,116,105,111,110,32,115,104,111,117,108,100,32,98,101,32,115,97,109,112,108,101,100,46,32,79,117,116,112,117,116,32,105,115,32,116,104,101,32,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,97,114,114,97,121,46,10,53,46,32,67,111,110,118,101,114,116,32,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,115,32,116,111,32,109,111,100,101,108,45,115,112,97,99,101,32,109,97,116,114,105,99,101,115,32,117,115,105,110,103,32,111,122,122,58,58,97,110,105,109,97,116,105,111,110,58,58,76,111,99,97,108,84,111,77,111,100,101,108,74,111,98,46,32,73,116,32,116,97,107,101,115,32,97,115,32,105,110,112,117,116,32,116,104,101,32,115,107,101,108,101,116,111,110,32,40,116,111,32,107,110,111,119,32,97,98,111,117,116,32,106,111,105,110,116,39,115,32,104,105,101,114,97,114,99,104,121,41,32,97,110,100,32,108,111,99,97,108,45,115,112,97,99,101,32,116,114,97,110,115,102,111,114,109,115,46,32,79,117,116,112,117,116,32,105,115,32,109,111,100,101,108,45,115,112,97,99,101,32,109,97,116,114,105,99,101,115,32,97,114,114,97,121,46,10,54,46,32,77,111,100,101,108,45,115,112,97,99,101,32,109,97,116,114,105,99,101,115,32,97,114,114,97,121,32,99,97,110,32,116,104,101,110,32,98,101,32,117,115,101,100,32,102,111,114,32,114,101,110,100,101,114,105,110,103,32,40,116,111,32,115,107,105,110,32,97,32,109,101,115,104,41,32,111,114,32,117,112,100,97,116,105,110,103,32,116,104,101,32,115,99,101,110,101,32,103,114,97,112,104,46]);Module["FS_createDataFile"]("/","README.md",fileData2,true,true,false)}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}};loadPackage({"files":[]})})();var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=function(status,toThrow){throw toThrow};Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",abort);Module["quit"]=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=function(status){quit(status)}}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=function(title){document.title=title}}else{}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end<=_emscripten_get_heap_size()){HEAP32[DYNAMICTOP_PTR>>2]=end}else{return 0}return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0,"getNativeTypeSize invalid bits "+bits+", type "+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":function(x,y){return x%y},"debugger":function(){debugger}};var jsCallStartIndex=1;var functionPointers=new Array(0);function convertJsFunctionToWasm(func,sig){var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={"i":127,"j":126,"f":125,"d":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet=="v"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{e:{f:func}});var wrappedFunc=instance.exports.f;return wrappedFunc}var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};if(typeof WebAssembly!=="object"){err("no native wasm support detected")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},"array":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string")return UTF8ToString(ret);if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var ALLOC_NORMAL=0;var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function allocateUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STACK_BASE=43344,DYNAMIC_BASE=5286224,DYNAMICTOP_PTR=43312;var TOTAL_STACK=5242880;var INITIAL_TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+INITIAL_TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){wasmMemory=new WebAssembly.Memory({"initial":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE,"maximum":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=wasmMemory.buffer}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile="sample_playback.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={"env":env,"global":{"NaN":NaN,Infinity:Infinity},"global.Math":Math,"asm2wasm":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output["instance"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)})}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asm"]=function(global,env,providedBuffer){env["memory"]=wasmMemory;env["table"]=wasmTable=new WebAssembly.Table({"initial":966,"maximum":966,"element":"anyfunc"});env["__memory_base"]=1024;env["__table_base"]=0;var exports=createWasm(env);return exports};__ATINIT__.push({func:function(){globalCtors()}});var tempDoublePtr=43328;function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){}}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted},addRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++},decRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}},clearRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0}};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function ___cxa_uncaught_exception(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted.push(thrown);return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___gxx_personality_v0(){}function ___lock(){}function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(1);return-1}var PATH={splitPath:function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))},join2:function(l,r){return PATH.normalize(l+"/"+r)},resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(19)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(6)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(5)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(6)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(5)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(1)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[2]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(39)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(39)}delete parent.contents[name]},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(22)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(22)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(12)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var IDBFS={dbs:{},indexedDB:function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret},DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(mount){return MEMFS.mount.apply(null,arguments)},syncfs:function(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)})})},getDB:function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}};req.onsuccess=function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)};req.onerror=function(e){callback(this.error);e.preventDefault()}},getLocalSet:function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return function(p){return PATH.join2(root,p)}}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})},getRemoteSet:function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=function(e){callback(this.error);e.preventDefault()};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()}}catch(e){return callback(e)}})},loadLocalEntry:function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}},storeLocalEntry:function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)},removeLocalEntry:function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)},loadRemoteEntry:function(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result)};req.onerror=function(e){callback(this.error);e.preventDefault()}},storeRemoteEntry:function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},removeRemoteEntry:function(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},reconcile:function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}});var remove=[];Object.keys(dst.entries).forEach(function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}});if(!total){return callback(null)}var errored=false;var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=function(e){done(this.error);e.preventDefault()};create.sort().forEach(function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)})}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)})}});remove.sort().reverse().forEach(function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}})}};var NODEFS={isWindows:false,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={1024:flags["O_APPEND"],64:flags["O_CREAT"],128:flags["O_EXCL"],0:flags["O_RDONLY"],2:flags["O_RDWR"],4096:flags["O_SYNC"],512:flags["O_TRUNC"],1:flags["O_WRONLY"]}},bufferFrom:function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)},mount:function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)},createNode:function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(22)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node},getMode:function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}return stat.mode},realPath:function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)},flagsForNode:function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(22)}},node_ops:{getattr:function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}},setattr:function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},lookup:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)},mknod:function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}return node},rename:function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},unlink:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},rmdir:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},readdir:function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},symlink:function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},readlink:function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}}},stream_ops:{open:function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},close:function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},read:function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(-e.errno)}},write:function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(-e.errno)}},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(-e.errno)}}}if(position<0){throw new FS.ErrnoError(22)}return position}}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)});(mount.opts["blobs"]||[]).forEach(function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])});(mount.opts["packages"]||[]).forEach(function(pack){pack["metadata"].files.forEach(function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))})});return root},createNode:function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node},node_ops:{getattr:function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}},lookup:function(parent,name){throw new FS.ErrnoError(2)},mknod:function(parent,name,mode,dev){throw new FS.ErrnoError(1)},rename:function(oldNode,newDir,newName){throw new FS.ErrnoError(1)},unlink:function(parent,name){throw new FS.ErrnoError(1)},rmdir:function(parent,name){throw new FS.ErrnoError(1)},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newName,oldPath){throw new FS.ErrnoError(1)},readlink:function(node){throw new FS.ErrnoError(1)}},stream_ops:{read:function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size},write:function(stream,buffer,offset,length,position){throw new FS.ErrnoError(5)},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(22)}return position}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(40)}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(40)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return 13}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return 13}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return 13}return 0},mayLookup:function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return 13;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 17}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return 20}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 16}}else{if(FS.isDir(node.mode)){return 21}}return 0},mayOpen:function(node,flags){if(!node){return 2}if(FS.isLink(node.mode)){return 40}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 21}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(24)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(29)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(16)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(22)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(22)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(1)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=17)throw e}}},mkdev:function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(2)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(2)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(1)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(16)}if(!old_dir||!new_dir)throw new FS.ErrnoError(2);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(18)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(22)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(39)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(1)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(16)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(20)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(2)}if(!link.node_ops.readlink){throw new FS.ErrnoError(22)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(2)}if(!node.node_ops.getattr){throw new FS.ErrnoError(1)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(22)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(21)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(22)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(22)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(2)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(17)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(2)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(29)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(22)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.read){throw new FS.ErrnoError(22)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.write){throw new FS.ErrnoError(22)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(offset<0||length<=0){throw new FS.ErrnoError(22)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(19)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(95)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(13)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(19)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(25)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(2)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(20)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");random_device=function(){return crypto_module["randomBytes"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort("random_device")}}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(9);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");var stdout=FS.open("/dev/stdout","w");var stderr=FS.open("/dev/stderr","w")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error";if(this.stack)Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[2].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(5)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(5)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(5);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},getStreamFromFD:function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream},getSocketFromFD:function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket},getSocketAddress:function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();if(!(offset_high==-1&&offset_low<0)&&!(offset_high==0&&offset_low>=0)){return-ERRNO_CODES.EOVERFLOW}var offset=offset_low;FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[result>>2]=tempI64[0],HEAP32[result+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _abort(){Module["abort"]()}var JSEvents={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:false,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(this,call.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],isInternetExplorer:function(){return navigator.userAgent.indexOf("MSIE")!==-1||navigator.appVersion.indexOf("Trident/")>0},removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},getBoundingClientRectOrZeros:function(target){return target.getBoundingClientRect?target.getBoundingClientRect():{left:0,top:0}},pageScrollPos:function(){if(window.pageXOffset>0||window.pageYOffset>0){return[window.pageXOffset,window.pageYOffset]}if(typeof document.documentElement.scrollLeft!=="undefined"||typeof document.documentElement.scrollTop!=="undefined"){return[document.documentElement.scrollLeft,document.documentElement.scrollTop]}return[document.body.scrollLeft|0,document.body.scrollTop|0]},getNodeNameForTarget:function(target){if(!target)return"";if(target==window)return"#window";if(target==screen)return"#screen";return target&&target.nodeName?target.nodeName:""},tick:function(){if(window["performance"]&&window["performance"]["now"])return window["performance"]["now"]();else return Date.now()},fullscreenEnabled:function(){return document.fullscreenEnabled||document.mozFullScreenEnabled||document.webkitFullscreenEnabled||document.msFullscreenEnabled}};var __specialEventTargets=[0,typeof document!=="undefined"?document:0,typeof window!=="undefined"?window:0];function __findEventTarget(target){try{if(!target)return window;if(typeof target==="number")target=__specialEventTargets[target]||UTF8ToString(target);if(target==="#window")return window;else if(target==="#document")return document;else if(target==="#screen")return screen;else if(target==="#canvas")return Module["canvas"];return typeof target==="string"?document.getElementById(target):target}catch(e){return null}}function __findCanvasEventTarget(target){if(typeof target==="number")target=UTF8ToString(target);if(!target||target==="#canvas"){if(typeof GL!=="undefined"&&GL.offscreenCanvases["canvas"])return GL.offscreenCanvases["canvas"];return Module["canvas"]}if(typeof GL!=="undefined"&&GL.offscreenCanvases[target])return GL.offscreenCanvases[target];return __findEventTarget(target)}function _emscripten_get_canvas_element_size(target,width,height){var canvas=__findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height}function _emscripten_get_heap_size(){return HEAP8.length}var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){GL.miniTempBuffer=new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);for(var i=0;i<GL.MINI_TEMP_BUFFER_SIZE;i++){GL.miniTempBufferViews[i]=GL.miniTempBuffer.subarray(0,i+1)}},recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:function(shader,count,string,length){var source="";for(var i=0;i<count;++i){var len=length?HEAP32[length+i*4>>2]:-1;source+=UTF8ToString(HEAP32[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){var ctx=canvas.getContext("webgl",webGLContextAttributes)||canvas.getContext("experimental-webgl",webGLContextAttributes);return ctx&&GL.registerContext(ctx,webGLContextAttributes)},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault==="undefined"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents==="object")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle]);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;if(context.version<2){var instancedArraysExt=GLctx.getExtension("ANGLE_instanced_arrays");if(instancedArraysExt){GLctx["vertexAttribDivisor"]=function(index,divisor){instancedArraysExt["vertexAttribDivisorANGLE"](index,divisor)};GLctx["drawArraysInstanced"]=function(mode,first,count,primcount){instancedArraysExt["drawArraysInstancedANGLE"](mode,first,count,primcount)};GLctx["drawElementsInstanced"]=function(mode,count,type,indices,primcount){instancedArraysExt["drawElementsInstancedANGLE"](mode,count,type,indices,primcount)}}var vaoExt=GLctx.getExtension("OES_vertex_array_object");if(vaoExt){GLctx["createVertexArray"]=function(){return vaoExt["createVertexArrayOES"]()};GLctx["deleteVertexArray"]=function(vao){vaoExt["deleteVertexArrayOES"](vao)};GLctx["bindVertexArray"]=function(vao){vaoExt["bindVertexArrayOES"](vao)};GLctx["isVertexArray"]=function(vao){return vaoExt["isVertexArrayOES"](vao)}}var drawBuffersExt=GLctx.getExtension("WEBGL_draw_buffers");if(drawBuffersExt){GLctx["drawBuffers"]=function(n,bufs){drawBuffersExt["drawBuffersWEBGL"](n,bufs)}}}GLctx.disjointTimerQueryExt=GLctx.getExtension("EXT_disjoint_timer_query");var automaticallyEnabledExtensions=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2"];var exts=GLctx.getSupportedExtensions();if(exts&&exts.length>0){GLctx.getSupportedExtensions().forEach(function(ext){if(automaticallyEnabledExtensions.indexOf(ext)!=-1){GLctx.getExtension(ext)}})}},populateUniformTable:function(program){var p=GL.programs[program];var ptable=GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,35718);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.slice(-1)=="]"){name=name.slice(0,name.lastIndexOf("["))}var loc=GLctx.getUniformLocation(p,name);if(loc){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+"["+j+"]";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}}};function _emscripten_glActiveTexture(x0){GLctx["activeTexture"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBeginQueryEXT(target,id){GLctx.disjointTimerQueryExt["beginQueryEXT"](target,GL.timerQueriesEXT[id])}function _emscripten_glBindAttribLocation(program,index,name){GLctx.bindAttribLocation(GL.programs[program],index,UTF8ToString(name))}function _emscripten_glBindBuffer(target,buffer){GLctx.bindBuffer(target,GL.buffers[buffer])}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer])}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer])}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture])}function _emscripten_glBindVertexArrayOES(vao){GLctx["bindVertexArray"](GL.vaos[vao])}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx["blendColor"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx["blendEquation"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx["blendEquationSeparate"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx["blendFunc"](x0,x1)}function _emscripten_glBlendFuncSeparate(x0,x1,x2,x3){GLctx["blendFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glBufferData(target,size,data,usage){GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage)}function _emscripten_glBufferSubData(target,offset,size,data){GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _emscripten_glCheckFramebufferStatus(x0){return GLctx["checkFramebufferStatus"](x0)}function _emscripten_glClear(x0){GLctx["clear"](x0)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _emscripten_glClearDepthf(x0){GLctx["clearDepth"](x0)}function _emscripten_glClearStencil(x0){GLctx["clearStencil"](x0)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCompressedTexImage2D(target,level,internalFormat,width,height,border,imageSize,data){GLctx["compressedTexImage2D"](target,level,internalFormat,width,height,border,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCompressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,imageSize,data){GLctx["compressedTexSubImage2D"](target,level,xoffset,yoffset,width,height,format,data?HEAPU8.subarray(data,data+imageSize):null)}function _emscripten_glCopyTexImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx["copyTexSubImage2D"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glCullFace(x0){GLctx["cullFace"](x0)}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _emscripten_glDeleteQueriesEXT(n,ids){for(var i=0;i<n;i++){var id=HEAP32[ids+i*4>>2];var query=GL.timerQueriesEXT[id];if(!query)continue;GLctx.disjointTimerQueryExt["deleteQueryEXT"](query);GL.timerQueriesEXT[id]=null}}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArraysOES(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx["deleteVertexArray"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthFunc(x0){GLctx["depthFunc"](x0)}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDepthRangef(x0,x1){GLctx["depthRange"](x0,x1)}function _emscripten_glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glDisable(x0){GLctx["disable"](x0)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawArraysInstancedANGLE(mode,first,count,primcount){GLctx["drawArraysInstanced"](mode,first,count,primcount)}var __tempFixedLengthArray=[];function _emscripten_glDrawBuffersWEBGL(n,bufs){var bufArray=__tempFixedLengthArray[n];for(var i=0;i<n;i++){bufArray[i]=HEAP32[bufs+i*4>>2]}GLctx["drawBuffers"](bufArray)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glDrawElementsInstancedANGLE(mode,count,type,indices,primcount){GLctx["drawElementsInstanced"](mode,count,type,indices,primcount)}function _emscripten_glEnable(x0){GLctx["enable"](x0)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glEndQueryEXT(target){GLctx.disjointTimerQueryExt["endQueryEXT"](target)}function _emscripten_glFinish(){GLctx["finish"]()}function _emscripten_glFlush(){GLctx["flush"]()}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function _emscripten_glFrontFace(x0){GLctx["frontFace"](x0)}function __glGenObject(n,buffers,createFunction,objectTable){for(var i=0;i<n;i++){var buffer=GLctx[createFunction]();var id=buffer&&GL.getNewId(objectTable);if(buffer){buffer.name=id;objectTable[id]=buffer}else{GL.recordError(1282)}HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenBuffers(n,buffers){__glGenObject(n,buffers,"createBuffer",GL.buffers)}function _emscripten_glGenFramebuffers(n,ids){__glGenObject(n,ids,"createFramebuffer",GL.framebuffers)}function _emscripten_glGenQueriesEXT(n,ids){for(var i=0;i<n;i++){var query=GLctx.disjointTimerQueryExt["createQueryEXT"]();if(!query){GL.recordError(1282);while(i<n)HEAP32[ids+i++*4>>2]=0;return}var id=GL.getNewId(GL.timerQueriesEXT);query.name=id;GL.timerQueriesEXT[id]=query;HEAP32[ids+i*4>>2]=id}}function _emscripten_glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,"createRenderbuffer",GL.renderbuffers)}function _emscripten_glGenTextures(n,textures){__glGenObject(n,textures,"createTexture",GL.textures)}function _emscripten_glGenVertexArraysOES(n,arrays){__glGenObject(n,arrays,"createVertexArray",GL.vaos)}function _emscripten_glGenerateMipmap(x0){GLctx["generateMipmap"](x0)}function _emscripten_glGetActiveAttrib(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveAttrib(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetActiveUniform(program,index,bufSize,length,size,type,name){program=GL.programs[program];var info=GLctx.getActiveUniform(program,index);if(!info)return;if(bufSize>0&&name){var numBytesWrittenExclNull=stringToUTF8(info.name,name,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}if(size)HEAP32[size>>2]=info.size;if(type)HEAP32[type>>2]=info.type}function _emscripten_glGetAttachedShaders(program,maxCount,count,shaders){var result=GLctx.getAttachedShaders(GL.programs[program]);var len=result.length;if(len>maxCount){len=maxCount}HEAP32[count>>2]=len;for(var i=0;i<len;++i){var id=GL.shaders.indexOf(result[i]);HEAP32[shaders+i*4>>2]=id}}function _emscripten_glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name))}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!=="Integer"&&type!=="Integer64"){GL.recordError(1280)}return;case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats?formats.length:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case"number":ret=result;break;case"boolean":ret=result?1:0;break;case"string":GL.recordError(1280);return;case"object":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 34068:{ret=0;break}default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case"Integer":HEAP32[p+i*4>>2]=result[i];break;case"Float":HEAPF32[p+i*4>>2]=result[i];break;case"Boolean":HEAP8[p+i>>0]=result[i]?1:0;break;default:throw"internal glGet error, bad type: "+type}}return}else{try{ret=result.name|0}catch(e){GL.recordError(1280);err("GL_INVALID_ENUM in glGet"+type+"v: Unknown object returned from WebGL getParameter("+name_+")! (error: "+e+")");return}}break;default:GL.recordError(1280);return}}switch(type){case"Integer64":tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[p>>2]=tempI64[0],HEAP32[p+4>>2]=tempI64[1];break;case"Integer":HEAP32[p>>2]=ret;break;case"Float":HEAPF32[p>>2]=ret;break;case"Boolean":HEAP8[p>>0]=ret?1:0;break;default:throw"internal glGet error, bad type: "+type}}function _emscripten_glGetBooleanv(name_,p){emscriptenWebGLGet(name_,p,"Boolean")}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _emscripten_glGetFloatv(name_,p){emscriptenWebGLGet(name_,p,"Float")}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,"Integer")}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,35721);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,35382);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _emscripten_glGetQueryObjecti64vEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.timerQueriesEXT[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[params>>2]=tempI64[0],HEAP32[params+4>>2]=tempI64[1]}function _emscripten_glGetQueryObjectivEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.timerQueriesEXT[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}HEAP32[params>>2]=ret}function _emscripten_glGetQueryObjectui64vEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.timerQueriesEXT[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}tempI64=[ret>>>0,(tempDouble=ret,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[params>>2]=tempI64[0],HEAP32[params+4>>2]=tempI64[1]}function _emscripten_glGetQueryObjectuivEXT(id,pname,params){if(!params){GL.recordError(1281);return}var query=GL.timerQueriesEXT[id];var param=GLctx.disjointTimerQueryExt["getQueryObjectEXT"](query,pname);var ret;if(typeof param=="boolean"){ret=param?1:0}else{ret=param}HEAP32[params>>2]=ret}function _emscripten_glGetQueryivEXT(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.disjointTimerQueryExt["getQueryEXT"](target,pname)}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderSource(shader,bufSize,length,source){var result=GLctx.getShaderSource(GL.shaders[shader]);if(!result)return;if(bufSize>0&&source){var numBytesWrittenExclNull=stringToUTF8(result,source,bufSize);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push("GL_"+exts[i])}ret=stringToNewUTF8(gl_exts.join(" "));break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=stringToNewUTF8(s);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=stringToNewUTF8(glVersion);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _emscripten_glGetTexParameterfv(target,pname,params){if(!params){GL.recordError(1281);return}HEAPF32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetTexParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getTexParameter(target,pname)}function _emscripten_glGetUniformLocation(program,name){name=UTF8ToString(name);var arrayIndex=0;if(name[name.length-1]=="]"){var leftBrace=name.lastIndexOf("[");arrayIndex=name[leftBrace+1]!="]"?parseInt(name.slice(leftBrace+1)):0;name=name.slice(0,leftBrace)}var uniformInfo=GL.programInfos[program]&&GL.programInfos[program].uniforms[name];if(uniformInfo&&arrayIndex>=0&&arrayIndex<uniformInfo[0]){return uniformInfo[1]+arrayIndex}else{return-1}}function emscriptenWebGLGetUniform(program,location,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getUniform(GL.programs[program],GL.uniforms[location]);if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;default:throw"internal emscriptenWebGLGetUniform() error, bad type: "+type}}}}function _emscripten_glGetUniformfv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Float")}function _emscripten_glGetUniformiv(program,location,params){emscriptenWebGLGetUniform(program,location,params,"Integer")}function _emscripten_glGetVertexAttribPointerv(index,pname,pointer){if(!pointer){GL.recordError(1281);return}HEAP32[pointer>>2]=GLctx.getVertexAttribOffset(index,pname)}function emscriptenWebGLGetVertexAttrib(index,pname,params,type){if(!params){GL.recordError(1281);return}var data=GLctx.getVertexAttrib(index,pname);if(pname==34975){HEAP32[params>>2]=data["name"]}else if(typeof data=="number"||typeof data=="boolean"){switch(type){case"Integer":HEAP32[params>>2]=data;break;case"Float":HEAPF32[params>>2]=data;break;case"FloatToInteger":HEAP32[params>>2]=Math.fround(data);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}else{for(var i=0;i<data.length;i++){switch(type){case"Integer":HEAP32[params+i*4>>2]=data[i];break;case"Float":HEAPF32[params+i*4>>2]=data[i];break;case"FloatToInteger":HEAP32[params+i*4>>2]=Math.fround(data[i]);break;default:throw"internal emscriptenWebGLGetVertexAttrib() error, bad type: "+type}}}}function _emscripten_glGetVertexAttribfv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"Float")}function _emscripten_glGetVertexAttribiv(index,pname,params){emscriptenWebGLGetVertexAttrib(index,pname,params,"FloatToInteger")}function _emscripten_glHint(x0,x1){GLctx["hint"](x0,x1)}function _emscripten_glIsBuffer(buffer){var b=GL.buffers[buffer];if(!b)return 0;return GLctx.isBuffer(b)}function _emscripten_glIsEnabled(x0){return GLctx["isEnabled"](x0)}function _emscripten_glIsFramebuffer(framebuffer){var fb=GL.framebuffers[framebuffer];if(!fb)return 0;return GLctx.isFramebuffer(fb)}function _emscripten_glIsProgram(program){program=GL.programs[program];if(!program)return 0;return GLctx.isProgram(program)}function _emscripten_glIsQueryEXT(id){var query=GL.timerQueriesEXT[id];if(!query)return 0;return GLctx.disjointTimerQueryExt["isQueryEXT"](query)}function _emscripten_glIsRenderbuffer(renderbuffer){var rb=GL.renderbuffers[renderbuffer];if(!rb)return 0;return GLctx.isRenderbuffer(rb)}function _emscripten_glIsShader(shader){var s=GL.shaders[shader];if(!s)return 0;return GLctx.isShader(s)}function _emscripten_glIsTexture(id){var texture=GL.textures[id];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glIsVertexArrayOES(array){var vao=GL.vaos[array];if(!vao)return 0;return GLctx["isVertexArray"](vao)}function _emscripten_glLineWidth(x0){GLctx["lineWidth"](x0)}function _emscripten_glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.populateUniformTable(program)}function _emscripten_glPixelStorei(pname,param){if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _emscripten_glPolygonOffset(x0,x1){GLctx["polygonOffset"](x0,x1)}function _emscripten_glQueryCounterEXT(id,target){GLctx.disjointTimerQueryExt["queryCounterEXT"](GL.timerQueriesEXT[id],target)}function __computeUnpackAlignedImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return x+y-1&-y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height*alignedRowSize}var __colorChannelsInGlTextureFormat={6402:1,6406:1,6407:3,6408:4,6409:1,6410:2,35904:3,35906:4};var __sizeOfGlTextureElementType={5121:1,5123:2,5125:4,5126:4,32819:2,32820:2,33635:2,34042:4,36193:2};function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var sizePerPixel=__colorChannelsInGlTextureFormat[format]*__sizeOfGlTextureElementType[type];if(!sizePerPixel){GL.recordError(1280);return}var bytes=__computeUnpackAlignedImageSize(width,height,sizePerPixel,GL.unpackAlignment);var end=pixels+bytes;switch(type){case 5121:return HEAPU8.subarray(pixels,end);case 5126:return HEAPF32.subarray(pixels>>2,end>>2);case 5125:case 34042:return HEAPU32.subarray(pixels>>2,end>>2);case 5123:case 33635:case 32819:case 32820:case 36193:return HEAPU16.subarray(pixels>>1,end>>1);default:GL.recordError(1280)}}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glReleaseShaderCompiler(){}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx["renderbufferStorage"](x0,x1,x2,x3)}function _emscripten_glSampleCoverage(value,invert){GLctx.sampleCoverage(value,!!invert)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx["scissor"](x0,x1,x2,x3)}function _emscripten_glShaderBinary(){GL.recordError(1280)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glStencilFunc(x0,x1,x2){GLctx["stencilFunc"](x0,x1,x2)}function _emscripten_glStencilFuncSeparate(x0,x1,x2,x3){GLctx["stencilFuncSeparate"](x0,x1,x2,x3)}function _emscripten_glStencilMask(x0){GLctx["stencilMask"](x0)}function _emscripten_glStencilMaskSeparate(x0,x1){GLctx["stencilMaskSeparate"](x0,x1)}function _emscripten_glStencilOp(x0,x1,x2){GLctx["stencilOp"](x0,x1,x2)}function _emscripten_glStencilOpSeparate(x0,x1,x2,x3){GLctx["stencilOpSeparate"](x0,x1,x2,x3)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx["texParameterf"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(GL.uniforms[location],v0)}function _emscripten_glUniform1fv(location,count,value){if(count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(GL.uniforms[location],view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _emscripten_glUniform1iv(location,count,value){GLctx.uniform1iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*4>>2))}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2fv(location,count,value){if(2*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(GL.uniforms[location],view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(GL.uniforms[location],v0,v1)}function _emscripten_glUniform2iv(location,count,value){GLctx.uniform2iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*8>>2))}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){if(3*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(GL.uniforms[location],view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(GL.uniforms[location],v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){GLctx.uniform3iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*12>>2))}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(GL.uniforms[location],view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(GL.uniforms[location],v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){GLctx.uniform4iv(GL.uniforms[location],HEAP32.subarray(value>>2,value+count*16>>2))}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){if(4*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){if(9*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _emscripten_glUseProgram(program){GLctx.useProgram(GL.programs[program])}function _emscripten_glValidateProgram(program){GLctx.validateProgram(GL.programs[program])}function _emscripten_glVertexAttrib1f(x0,x1){GLctx["vertexAttrib1f"](x0,x1)}function _emscripten_glVertexAttrib1fv(index,v){GLctx.vertexAttrib1f(index,HEAPF32[v>>2])}function _emscripten_glVertexAttrib2f(x0,x1,x2){GLctx["vertexAttrib2f"](x0,x1,x2)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3f(x0,x1,x2,x3){GLctx["vertexAttrib3f"](x0,x1,x2,x3)}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4f(x0,x1,x2,x3,x4){GLctx["vertexAttrib4f"](x0,x1,x2,x3,x4)}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribDivisorANGLE(index,divisor){GLctx["vertexAttribDivisor"](index,divisor)}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}function abortOnCannotGrowMemory(requestedSize){abort("OOM")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++},resume:function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()},updateStatus:function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}},runIter:function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)err("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()}},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([new Uint8Array(byteArray).buffer],{type:Browser.getMimetype(name)})}}catch(e){warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append(new Uint8Array(byteArray).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",function(){finish(audio)},false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout(function(){finish(audio)},1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===Module["canvas"]||document["mozPointerLockElement"]===Module["canvas"]||document["webkitPointerLockElement"]===Module["canvas"]||document["msPointerLockElement"]===Module["canvas"]}var canvas=Module["canvas"];if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||function(){};canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||function(){};canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",function(ev){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();ev.preventDefault()}},false)}}},createContext:function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false,majorVersion:1};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}if(typeof GL!=="undefined"){contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}}}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback()});Browser.init()}return ctx},destroyContext:function(canvas,useWebGL,setInModule){},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;if(typeof Browser.vrDevice==="undefined")Browser.vrDevice=null;var canvas=Module["canvas"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.exitFullscreen=Browser.exitFullscreen;if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize()}else{Browser.updateCanvasDimensions(canvas)}}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullscreen);if(Module["onFullscreen"])Module["onFullscreen"](Browser.isFullscreen)}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullscreenChange,false);document.addEventListener("mozfullscreenchange",fullscreenChange,false);document.addEventListener("webkitfullscreenchange",fullscreenChange,false);document.addEventListener("MSFullscreenChange",fullscreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer["requestFullscreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullscreen"]?function(){canvasContainer["webkitRequestFullscreen"](Element["ALLOW_KEYBOARD_INPUT"])}:null)||(canvasContainer["webkitRequestFullScreen"]?function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}:null);if(vrDevice){canvasContainer.requestFullscreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullscreen()}},requestFullScreen:function(lockPointer,resizeCanvas,vrDevice){err("Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.");Browser.requestFullScreen=function(lockPointer,resizeCanvas,vrDevice){return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};return Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)},exitFullscreen:function(){if(!Browser.isFullscreen){return false}var CFS=document["exitFullscreen"]||document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["msExitFullscreen"]||document["webkitCancelFullScreen"]||function(){};CFS.apply(document,[]);return true},nextRAF:0,fakeRequestAnimationFrame:function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)},requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:function(func){return function(){if(!ABORT)return func.apply(null,arguments)}},allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function(){Browser.allowAsyncCallbacks=false},resumeAsyncCallbacks:function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach(function(func){func()})}},safeRequestAnimationFrame:function(func){return Browser.requestAnimationFrame(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}})},safeSetTimeout:function(func,timeout){Module["noExitRuntime"]=true;return setTimeout(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}},timeout)},safeSetInterval:function(func,timeout){Module["noExitRuntime"]=true;return setInterval(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}},timeout)},getMimetype:function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]},getUserMedia:function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)},getMovementX:function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0},getMovementY:function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0},getMouseWheelDelta:function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail/3;break;case"mousewheel":delta=event.wheelDelta/120;break;case"wheel":delta=event.deltaY;switch(event.deltaMode){case 0:delta/=100;break;case 1:delta/=3;break;case 2:delta*=80;break;default:throw"unrecognized mouse wheel delta mode: "+event.deltaMode}break;default:throw"unrecognized mouse wheel event: "+event.type}return delta},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}},asyncLoad:function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency("al "+url):"";Module["readAsync"](url,function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}});if(dep)addRunDependency(dep)},resizeListeners:[],updateResizeListeners:function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach(function(listener){listener(canvas.width,canvas.height)})},setCanvasSize:function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()},setWindowedCanvasSize:function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags}Browser.updateCanvasDimensions(Module["canvas"]);Browser.updateResizeListeners()},updateCanvasDimensions:function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["fullscreenElement"]||document["mozFullScreenElement"]||document["msFullscreenElement"]||document["webkitFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}},wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle}};function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}else if(mode==2){if(typeof setImmediate==="undefined"){var setImmediates=[];var emscriptenMainLoopMessageId="setimmediate";var Browser_setImmediate_messageHandler=function(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()()}};addEventListener("message",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module["setImmediates"]===undefined)Module["setImmediates"]=[];Module["setImmediates"].push(func);postMessage({target:emscriptenMainLoopMessageId})}else postMessage(emscriptenMainLoopMessageId,"*")}}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner)};Browser.mainLoop.method="immediate"}return 0}function _emscripten_get_now(){abort()}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module["noExitRuntime"]=true;assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!=="undefined"){browserIterationFunc=function(){Module["dynCall_vi"](func,arg)}}else{browserIterationFunc=function(){Module["dynCall_v"](func)}}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now()}if(Browser.mainLoop.method==="timeout"&&Module.ctx){err("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");Browser.mainLoop.method=""}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"SimulateInfiniteLoop"}}function _emscripten_set_main_loop_arg(func,arg,fps,simulateInfiniteLoop){_emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg)}var ENV={};function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _glBindBuffer(target,buffer){GLctx.bindBuffer(target,GL.buffers[buffer])}function _glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture])}function _glBlendFunc(x0,x1){GLctx["blendFunc"](x0,x1)}function _glBufferData(target,size,data,usage){GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage)}function _glBufferSubData(target,offset,size,data){GLctx.bufferSubData(target,offset,HEAPU8.subarray(data,data+size))}function _glClear(x0){GLctx["clear"](x0)}function _glClearColor(x0,x1,x2,x3){GLctx["clearColor"](x0,x1,x2,x3)}function _glClearDepth(x0){GLctx["clearDepth"](x0)}function _glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;GL.programs[id]=program;return id}function _glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _glCullFace(x0){GLctx["cullFace"](x0)}function _glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GL.currArrayBuffer)GL.currArrayBuffer=0;if(id==GL.currElementArrayBuffer)GL.currElementArrayBuffer=0}}function _glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null;GL.programInfos[id]=null}function _glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _glDepthFunc(x0){GLctx["depthFunc"](x0)}function _glDepthMask(flag){GLctx.depthMask(!!flag)}function _glDetachShader(program,shader){GLctx.detachShader(GL.programs[program],GL.shaders[shader])}function _glDisable(x0){GLctx["disable"](x0)}function _glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _glEnable(x0){GLctx["enable"](x0)}function _glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _glGenBuffers(n,buffers){__glGenObject(n,buffers,"createBuffer",GL.buffers)}function _glGenTextures(n,textures){__glGenObject(n,textures,"createTexture",GL.textures)}function _glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name))}function _glGetError(){if(GL.lastError){var error=GL.lastError;GL.lastError=0;return error}else{return GLctx.getError()}}function _glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,"Integer")}function _glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}var ptable=GL.programInfos[program];if(!ptable){GL.recordError(1282);return}if(pname==35716){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35719){HEAP32[p>>2]=ptable.maxUniformLength}else if(pname==35722){if(ptable.maxAttributeLength==-1){program=GL.programs[program];var numAttribs=GLctx.getProgramParameter(program,35721);ptable.maxAttributeLength=0;for(var i=0;i<numAttribs;++i){var activeAttrib=GLctx.getActiveAttrib(program,i);ptable.maxAttributeLength=Math.max(ptable.maxAttributeLength,activeAttrib.name.length+1)}}HEAP32[p>>2]=ptable.maxAttributeLength}else if(pname==35381){if(ptable.maxUniformBlockNameLength==-1){program=GL.programs[program];var numBlocks=GLctx.getProgramParameter(program,35382);ptable.maxUniformBlockNameLength=0;for(var i=0;i<numBlocks;++i){var activeBlockName=GLctx.getActiveUniformBlockName(program,i);ptable.maxUniformBlockNameLength=Math.max(ptable.maxUniformBlockNameLength,activeBlockName.length+1)}}HEAP32[p>>2]=ptable.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(GL.programs[program],pname)}}function _glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";if(maxLength>0&&infoLog){var numBytesWrittenExclNull=stringToUTF8(log,infoLog,maxLength);if(length)HEAP32[length>>2]=numBytesWrittenExclNull}else{if(length)HEAP32[length>>2]=0}}function _glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log="(unknown error)";HEAP32[p>>2]=log.length+1}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source===null||source.length==0?0:source.length+1;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function _glGetString(name_){if(GL.stringCache[name_])return GL.stringCache[name_];var ret;switch(name_){case 7939:var exts=GLctx.getSupportedExtensions();var gl_exts=[];for(var i=0;i<exts.length;++i){gl_exts.push(exts[i]);gl_exts.push("GL_"+exts[i])}ret=stringToNewUTF8(gl_exts.join(" "));break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=stringToNewUTF8(s);break;case 7938:var glVersion=GLctx.getParameter(GLctx.VERSION);{glVersion="OpenGL ES 2.0 ("+glVersion+")"}ret=stringToNewUTF8(glVersion);break;case 35724:var glslVersion=GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);var ver_re=/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+"0";glslVersion="OpenGL ES GLSL ES "+ver_num[1]+" ("+glslVersion+")"}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(1280);return 0}GL.stringCache[name_]=ret;return ret}function _glGetUniformLocation(program,name){name=UTF8ToString(name);var arrayIndex=0;if(name[name.length-1]=="]"){var leftBrace=name.lastIndexOf("[");arrayIndex=name[leftBrace+1]!="]"?parseInt(name.slice(leftBrace+1)):0;name=name.slice(0,leftBrace)}var uniformInfo=GL.programInfos[program]&&GL.programInfos[program].uniforms[name];if(uniformInfo&&arrayIndex>=0&&arrayIndex<uniformInfo[0]){return uniformInfo[1]+arrayIndex}else{return-1}}function _glLinkProgram(program){GLctx.linkProgram(GL.programs[program]);GL.populateUniformTable(program)}function _glPixelStorei(pname,param){if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function _glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null)}function _glTexParameteri(x0,x1,x2){GLctx["texParameteri"](x0,x1,x2)}function _glUniform1i(location,v0){GLctx.uniform1i(GL.uniforms[location],v0)}function _glUniformMatrix4fv(location,count,transpose,value){if(16*count<=GL.MINI_TEMP_BUFFER_SIZE){var view=GL.miniTempBufferViews[16*count-1];for(var i=0;i<16*count;i+=16){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2];view[i+9]=HEAPF32[value+(4*i+36)>>2];view[i+10]=HEAPF32[value+(4*i+40)>>2];view[i+11]=HEAPF32[value+(4*i+44)>>2];view[i+12]=HEAPF32[value+(4*i+48)>>2];view[i+13]=HEAPF32[value+(4*i+52)>>2];view[i+14]=HEAPF32[value+(4*i+56)>>2];view[i+15]=HEAPF32[value+(4*i+60)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(GL.uniforms[location],!!transpose,view)}function _glUseProgram(program){GLctx.useProgram(GL.programs[program])}function _glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _glViewport(x0,x1,x2,x3){GLctx["viewport"](x0,x1,x2,x3)}var GLFW={Window:function(id,width,height,title,monitor,share){this.id=id;this.x=0;this.y=0;this.fullscreen=false;this.storedX=0;this.storedY=0;this.width=width;this.height=height;this.storedWidth=width;this.storedHeight=height;this.title=title;this.monitor=monitor;this.share=share;this.attributes=GLFW.hints;this.inputModes={208897:212993,208898:0,208899:0};this.buttons=0;this.keys=new Array;this.domKeys=new Array;this.shouldClose=0;this.title=null;this.windowPosFunc=null;this.windowSizeFunc=null;this.windowCloseFunc=null;this.windowRefreshFunc=null;this.windowFocusFunc=null;this.windowIconifyFunc=null;this.framebufferSizeFunc=null;this.mouseButtonFunc=null;this.cursorPosFunc=null;this.cursorEnterFunc=null;this.scrollFunc=null;this.dropFunc=null;this.keyFunc=null;this.charFunc=null;this.userptr=null},WindowFromId:function(id){if(id<=0||!GLFW.windows)return null;return GLFW.windows[id-1]},joystickFunc:null,errorFunc:null,monitorFunc:null,active:null,windows:null,monitors:null,monitorString:null,versionString:null,initialTime:null,extensions:null,hints:null,defaultHints:{131073:0,131074:0,131075:1,131076:1,131077:1,135169:8,135170:8,135171:8,135172:8,135173:24,135174:8,135175:0,135176:0,135177:0,135178:0,135179:0,135180:0,135181:0,135182:0,135183:0,139265:196609,139266:1,139267:0,139268:0,139269:0,139270:0,139271:0,139272:0},DOMToGLFWKeyCode:function(keycode){switch(keycode){case 32:return 32;case 222:return 39;case 188:return 44;case 173:return 45;case 189:return 45;case 190:return 46;case 191:return 47;case 48:return 48;case 49:return 49;case 50:return 50;case 51:return 51;case 52:return 52;case 53:return 53;case 54:return 54;case 55:return 55;case 56:return 56;case 57:return 57;case 59:return 59;case 61:return 61;case 187:return 61;case 65:return 65;case 66:return 66;case 67:return 67;case 68:return 68;case 69:return 69;case 70:return 70;case 71:return 71;case 72:return 72;case 73:return 73;case 74:return 74;case 75:return 75;case 76:return 76;case 77:return 77;case 78:return 78;case 79:return 79;case 80:return 80;case 81:return 81;case 82:return 82;case 83:return 83;case 84:return 84;case 85:return 85;case 86:return 86;case 87:return 87;case 88:return 88;case 89:return 89;case 90:return 90;case 219:return 91;case 220:return 92;case 221:return 93;case 192:return 94;case 27:return 256+1;case 112:return 256+2;case 113:return 256+3;case 114:return 256+4;case 115:return 256+5;case 116:return 256+6;case 117:return 256+7;case 118:return 256+8;case 119:return 256+9;case 120:return 256+10;case 121:return 256+11;case 122:return 256+12;case 123:return 256+13;case 124:return 256+14;case 125:return 256+15;case 126:return 256+16;case 127:return 256+17;case 128:return 256+18;case 129:return 256+19;case 130:return 256+20;case 131:return 256+21;case 132:return 256+22;case 133:return 256+23;case 134:return 256+24;case 135:return 256+25;case 136:return 256+26;case 39:return 256+30;case 37:return 256+29;case 40:return 256+28;case 38:return 256+27;case 16:return 256+31;case 17:return 256+33;case 18:return 256+35;case 9:return 256+37;case 13:return 256+38;case 8:return 256+39;case 45:return 256+40;case 46:return 256+41;case 33:return 256+42;case 34:return 256+43;case 36:return 256+44;case 35:return 256+45;case 96:return 256+46;case 97:return 256+47;case 98:return 256+48;case 99:return 256+49;case 100:return 256+50;case 101:return 256+51;case 102:return 256+52;case 103:return 256+53;case 104:return 256+54;case 105:return 256+55;case 111:return 256+56;case 106:return 256+57;case 109:return 256+58;case 107:return 256+59;case 110:return 256+60;case 144:return 256+63;case 20:return 256+64;case 145:return 256+65;case 19:return 256+66;case 91:return 256+67;case 93:return 256+69;default:return-1}},getModBits:function(win){var mod=0;if(win.keys[340])mod|=1;if(win.keys[341])mod|=2;if(win.keys[342])mod|=4;if(win.keys[343])mod|=8;return mod},onKeyPress:function(event){if(!GLFW.active||!GLFW.active.charFunc)return;if(event.ctrlKey||event.metaKey)return;var charCode=event.charCode;if(charCode==0||charCode>=0&&charCode<=31)return;dynCall_vii(GLFW.active.charFunc,charCode,1)},onKeyChanged:function(keyCode,status){if(!GLFW.active)return;var key=GLFW.DOMToGLFWKeyCode(keyCode);if(key==-1)return;GLFW.active.keys[key]=status;GLFW.active.domKeys[keyCode]=status;if(!GLFW.active.keyFunc)return;dynCall_vii(GLFW.active.keyFunc,key,status)},onGamepadConnected:function(event){GLFW.refreshJoysticks()},onGamepadDisconnected:function(event){GLFW.refreshJoysticks()},onKeydown:function(event){GLFW.onKeyChanged(event.keyCode,1);if(event.keyCode===8||event.keyCode===9){event.preventDefault()}},onKeyup:function(event){GLFW.onKeyChanged(event.keyCode,0)},onBlur:function(event){if(!GLFW.active)return;for(var i=0;i<GLFW.active.domKeys.length;++i){if(GLFW.active.domKeys[i]){GLFW.onKeyChanged(i,0)}}},onMousemove:function(event){if(!GLFW.active)return;Browser.calculateMouseEvent(event);if(event.target!=Module["canvas"]||!GLFW.active.cursorPosFunc)return;dynCall_vii(GLFW.active.cursorPosFunc,Browser.mouseX,Browser.mouseY)},DOMToGLFWMouseButton:function(event){var eventButton=event["button"];if(eventButton>0){if(eventButton==1){eventButton=2}else{eventButton=1}}return eventButton},onMouseenter:function(event){if(!GLFW.active)return;if(event.target!=Module["canvas"]||!GLFW.active.cursorEnterFunc)return},onMouseleave:function(event){if(!GLFW.active)return;if(event.target!=Module["canvas"]||!GLFW.active.cursorEnterFunc)return},onMouseButtonChanged:function(event,status){if(!GLFW.active)return;Browser.calculateMouseEvent(event);if(event.target!=Module["canvas"])return;var eventButton=GLFW.DOMToGLFWMouseButton(event);if(status==1){GLFW.active.buttons|=1<<eventButton;try{event.target.setCapture()}catch(e){}}else{GLFW.active.buttons&=~(1<<eventButton)}if(!GLFW.active.mouseButtonFunc)return;dynCall_vii(GLFW.active.mouseButtonFunc,eventButton,status)},onMouseButtonDown:function(event){if(!GLFW.active)return;GLFW.onMouseButtonChanged(event,1)},onMouseButtonUp:function(event){if(!GLFW.active)return;GLFW.onMouseButtonChanged(event,0)},onMouseWheel:function(event){var delta=-Browser.getMouseWheelDelta(event);delta=delta==0?0:delta>0?Math.max(delta,1):Math.min(delta,-1);GLFW.wheelPos+=delta;if(!GLFW.active||!GLFW.active.scrollFunc||event.target!=Module["canvas"])return;dynCall_vi(GLFW.active.scrollFunc,GLFW.wheelPos);event.preventDefault()},onCanvasResize:function(width,height){if(!GLFW.active)return;var resizeNeeded=true;if(document["fullscreen"]||document["fullScreen"]||document["mozFullScreen"]||document["webkitIsFullScreen"]){GLFW.active.storedX=GLFW.active.x;GLFW.active.storedY=GLFW.active.y;GLFW.active.storedWidth=GLFW.active.width;GLFW.active.storedHeight=GLFW.active.height;GLFW.active.x=GLFW.active.y=0;GLFW.active.width=screen.width;GLFW.active.height=screen.height;GLFW.active.fullscreen=true}else if(GLFW.active.fullscreen==true){GLFW.active.x=GLFW.active.storedX;GLFW.active.y=GLFW.active.storedY;GLFW.active.width=GLFW.active.storedWidth;GLFW.active.height=GLFW.active.storedHeight;GLFW.active.fullscreen=false}else if(GLFW.active.width!=width||GLFW.active.height!=height){GLFW.active.width=width;GLFW.active.height=height}else{resizeNeeded=false}if(resizeNeeded){Browser.setCanvasSize(GLFW.active.width,GLFW.active.height,true);GLFW.onWindowSizeChanged();GLFW.onFramebufferSizeChanged()}},onWindowSizeChanged:function(){if(!GLFW.active)return;if(!GLFW.active.windowSizeFunc)return;dynCall_vii(GLFW.active.windowSizeFunc,GLFW.active.width,GLFW.active.height)},onFramebufferSizeChanged:function(){if(!GLFW.active)return;if(!GLFW.active.framebufferSizeFunc)return},requestFullscreen:function(){var RFS=Module["canvas"]["requestFullscreen"]||Module["canvas"]["mozRequestFullScreen"]||Module["canvas"]["webkitRequestFullScreen"]||function(){};RFS.apply(Module["canvas"],[])},requestFullScreen:function(){err("GLFW.requestFullScreen() is deprecated. Please call GLFW.requestFullscreen instead.");GLFW.requestFullScreen=function(){return GLFW.requestFullscreen()};return GLFW.requestFullscreen()},exitFullscreen:function(){Browser.exitFullscreen()},cancelFullScreen:function(){err("GLFW.cancelFullScreen() is deprecated. Please call GLFW.exitFullscreen instead.");GLFW.cancelFullScreen=function(){return GLFW.exitFullscreen()};return GLFW.exitFullscreen()},getTime:function(){return _emscripten_get_now()/1e3},setWindowTitle:function(winid,title){var win=GLFW.WindowFromId(winid);if(!win)return;win.title=UTF8ToString(title);if(GLFW.active.id==win.id){document.title=win.title}},setJoystickCallback:function(cbfun){GLFW.joystickFunc=cbfun;GLFW.refreshJoysticks()},joys:{},lastGamepadState:null,lastGamepadStateFrame:null,refreshJoysticks:function(){if(Browser.mainLoop.currentFrameNumber!==GLFW.lastGamepadStateFrame||!Browser.mainLoop.currentFrameNumber){GLFW.lastGamepadState=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads:null;GLFW.lastGamepadStateFrame=Browser.mainLoop.currentFrameNumber;for(var joy=0;joy<GLFW.lastGamepadState.length;++joy){var gamepad=GLFW.lastGamepadState[joy];if(gamepad){if(!GLFW.joys[joy]){console.log("glfw joystick connected:",joy);GLFW.joys[joy]={id:allocate(intArrayFromString(gamepad.id),"i8",ALLOC_NORMAL),buttonsCount:gamepad.buttons.length,axesCount:gamepad.axes.length,buttons:allocate(new Array(gamepad.buttons.length),"i8",ALLOC_NORMAL),axes:allocate(new Array(gamepad.axes.length*4),"float",ALLOC_NORMAL)};if(GLFW.joystickFunc){dynCall_vii(GLFW.joystickFunc,joy,262145)}}var data=GLFW.joys[joy];for(var i=0;i<gamepad.buttons.length;++i){setValue(data.buttons+i,gamepad.buttons[i].pressed,"i8")}for(var i=0;i<gamepad.axes.length;++i){setValue(data.axes+i*4,gamepad.axes[i],"float")}}else{if(GLFW.joys[joy]){console.log("glfw joystick disconnected",joy);if(GLFW.joystickFunc){dynCall_vii(GLFW.joystickFunc,joy,262146)}_free(GLFW.joys[joy].id);_free(GLFW.joys[joy].buttons);_free(GLFW.joys[joy].axes);delete GLFW.joys[joy]}}}}},setKeyCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.keyFunc=cbfun},setCharCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.charFunc=cbfun},setMouseButtonCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.mouseButtonFunc=cbfun},setCursorPosCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.cursorPosFunc=cbfun},setScrollCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.scrollFunc=cbfun},setDropCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.dropFunc=cbfun},onDrop:function(event){if(!GLFW.active||!GLFW.active.dropFunc)return;if(!event.dataTransfer||!event.dataTransfer.files||event.dataTransfer.files.length==0)return;event.preventDefault();return false},onDragover:function(event){if(!GLFW.active||!GLFW.active.dropFunc)return;event.preventDefault();return false},setWindowSizeCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.windowSizeFunc=cbfun;if(!win.windowSizeFunc)return;dynCall_vii(win.windowSizeFunc,win.width,win.height)},setWindowCloseCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.windowCloseFunc=cbfun},setWindowRefreshCallback:function(winid,cbfun){var win=GLFW.WindowFromId(winid);if(!win)return;win.windowRefreshFunc=cbfun},onClickRequestPointerLock:function(e){if(!Browser.pointerLock&&Module["canvas"].requestPointerLock){Module["canvas"].requestPointerLock();e.preventDefault()}},setInputMode:function(winid,mode,value){var win=GLFW.WindowFromId(winid);if(!win)return;switch(mode){case 208897:{switch(value){case 212993:{win.inputModes[mode]=value;Module["canvas"].removeEventListener("click",GLFW.onClickRequestPointerLock,true);Module["canvas"].exitPointerLock();break}case 212994:{console.log("glfwSetInputMode called with GLFW_CURSOR_HIDDEN value not implemented.");break}case 212995:{win.inputModes[mode]=value;Module["canvas"].addEventListener("click",GLFW.onClickRequestPointerLock,true);Module["canvas"].requestPointerLock();break}default:{console.log("glfwSetInputMode called with unknown value parameter value: "+value+".");break}}break}case 208898:{console.log("glfwSetInputMode called with GLFW_STICKY_KEYS mode not implemented.");break}case 208899:{console.log("glfwSetInputMode called with GLFW_STICKY_MOUSE_BUTTONS mode not implemented.");break}default:{console.log("glfwSetInputMode called with unknown mode parameter value: "+mode+".");break}}},getKey:function(winid,key){var win=GLFW.WindowFromId(winid);if(!win)return 0;return win.keys[key]},getMouseButton:function(winid,button){var win=GLFW.WindowFromId(winid);if(!win)return 0;return(win.buttons&1<<button)>0},getCursorPos:function(winid,x,y){setValue(x,Browser.mouseX,"double");setValue(y,Browser.mouseY,"double")},getMousePos:function(winid,x,y){setValue(x,Browser.mouseX,"i32");setValue(y,Browser.mouseY,"i32")},setCursorPos:function(winid,x,y){},getWindowPos:function(winid,x,y){var wx=0;var wy=0;var win=GLFW.WindowFromId(winid);if(win){wx=win.x;wy=win.y}setValue(x,wx,"i32");setValue(y,wy,"i32")},setWindowPos:function(winid,x,y){var win=GLFW.WindowFromId(winid);if(!win)return;win.x=x;win.y=y},getWindowSize:function(winid,width,height){var ww=0;var wh=0;var win=GLFW.WindowFromId(winid);if(win){ww=win.width;wh=win.height}setValue(width,ww,"i32");setValue(height,wh,"i32")},setWindowSize:function(winid,width,height){var win=GLFW.WindowFromId(winid);if(!win)return;if(GLFW.active.id==win.id){if(width==screen.width&&height==screen.height){GLFW.requestFullscreen()}else{GLFW.exitFullscreen();Browser.setCanvasSize(width,height);win.width=width;win.height=height}}if(!win.windowSizeFunc)return;dynCall_vii(win.windowSizeFunc,width,height)},createWindow:function(width,height,title,monitor,share){var i,id;for(i=0;i<GLFW.windows.length&&GLFW.windows[i]!==null;i++);if(i>0)throw"glfwCreateWindow only supports one window at time currently";id=i+1;if(width<=0||height<=0)return 0;if(monitor){GLFW.requestFullscreen()}else{Browser.setCanvasSize(width,height)}for(i=0;i<GLFW.windows.length&&GLFW.windows[i]==null;i++);if(i==GLFW.windows.length){var contextAttributes={antialias:GLFW.hints[135181]>1,depth:GLFW.hints[135173]>0,stencil:GLFW.hints[135174]>0,alpha:GLFW.hints[135172]>0};Module.ctx=Browser.createContext(Module["canvas"],true,true,contextAttributes)}if(!Module.ctx)return 0;var win=new GLFW.Window(id,width,height,title,monitor,share);if(id-1==GLFW.windows.length){GLFW.windows.push(win)}else{GLFW.windows[id-1]=win}GLFW.active=win;return win.id},destroyWindow:function(winid){var win=GLFW.WindowFromId(winid);if(!win)return;GLFW.windows[win.id-1]=null;if(GLFW.active.id==win.id)GLFW.active=null;for(var i=0;i<GLFW.windows.length;i++)if(GLFW.windows[i]!==null)return;Module.ctx=Browser.destroyContext(Module["canvas"],true,true)},swapBuffers:function(winid){},GLFW2ParamToGLFW3Param:function(param){var table={196609:0,196610:0,196611:0,196612:0,196613:0,196614:0,131073:0,131074:0,131075:0,131076:0,131077:135169,131078:135170,131079:135171,131080:135172,131081:135173,131082:135174,131083:135183,131084:135175,131085:135176,131086:135177,131087:135178,131088:135179,131089:135180,131090:0,131091:135181,131092:139266,131093:139267,131094:139270,131095:139271,131096:139272};return table[param]}};function _glfwExtensionSupported(extension){if(!GLFW.extensions){GLFW.extensions=UTF8ToString(_glGetString(7939)).split(" ")}if(GLFW.extensions.indexOf(extension)!=-1)return 1;return GLFW.extensions.indexOf("GL_"+extension)!=-1}function _glfwGetKey(key){return GLFW.getKey(GLFW.active.id,key)}function _glfwGetMouseButton(button){return GLFW.getMouseButton(GLFW.active.id,button)}function _glfwGetMousePos(x,y){GLFW.getMousePos(GLFW.active.id,x,y)}function _glfwGetMouseWheel(){return 0}function _glfwGetProcAddress(procname){return _emscripten_GetProcAddress(procname)}function _glfwGetTime(){return GLFW.getTime()-GLFW.initialTime}function _glfwGetWindowParam(param){param=GLFW.GLFW2ParamToGLFW3Param(param);return GLFW.hints[param]}function _glfwInit(){if(GLFW.windows)return 1;GLFW.initialTime=GLFW.getTime();GLFW.hints=GLFW.defaultHints;GLFW.windows=new Array;GLFW.active=null;window.addEventListener("gamepadconnected",GLFW.onGamepadConnected,true);window.addEventListener("gamepaddisconnected",GLFW.onGamepadDisconnected,true);window.addEventListener("keydown",GLFW.onKeydown,true);window.addEventListener("keypress",GLFW.onKeyPress,true);window.addEventListener("keyup",GLFW.onKeyup,true);window.addEventListener("blur",GLFW.onBlur,true);Module["canvas"].addEventListener("mousemove",GLFW.onMousemove,true);Module["canvas"].addEventListener("mousedown",GLFW.onMouseButtonDown,true);Module["canvas"].addEventListener("mouseup",GLFW.onMouseButtonUp,true);Module["canvas"].addEventListener("wheel",GLFW.onMouseWheel,true);Module["canvas"].addEventListener("mousewheel",GLFW.onMouseWheel,true);Module["canvas"].addEventListener("mouseenter",GLFW.onMouseenter,true);Module["canvas"].addEventListener("mouseleave",GLFW.onMouseleave,true);Module["canvas"].addEventListener("drop",GLFW.onDrop,true);Module["canvas"].addEventListener("dragover",GLFW.onDragover,true);Browser.resizeListeners.push(function(width,height){GLFW.onCanvasResize(width,height)});return 1}function _glfwOpenWindow(width,height,redbits,greenbits,bluebits,alphabits,depthbits,stencilbits,mode){GLFW.hints[135169]=redbits;GLFW.hints[135170]=greenbits;GLFW.hints[135171]=bluebits;GLFW.hints[135172]=alphabits;GLFW.hints[135173]=depthbits;GLFW.hints[135174]=stencilbits;GLFW.createWindow(width,height,"GLFW2 Window",0,0);return 1}function _glfwOpenWindowHint(target,hint){target=GLFW.GLFW2ParamToGLFW3Param(target);GLFW.hints[target]=hint}function _glfwSetWindowCloseCallback(cbfun){GLFW.setWindowCloseCallback(GLFW.active.id,cbfun)}function _glfwSetWindowSize(width,height){GLFW.setWindowSize(GLFW.active.id,width,height)}function _glfwSetWindowSizeCallback(cbfun){GLFW.setWindowSizeCallback(GLFW.active.id,cbfun)}function _glfwSwapBuffers(){GLFW.swapBuffers(GLFW.active.id)}function _glfwSwapInterval(interval){interval=Math.abs(interval);if(interval==0)_emscripten_set_main_loop_timing(0,0);else _emscripten_set_main_loop_timing(1,interval)}function _glfwTerminate(){window.removeEventListener("gamepadconnected",GLFW.onGamepadConnected,true);window.removeEventListener("gamepaddisconnected",GLFW.onGamepadDisconnected,true);window.removeEventListener("keydown",GLFW.onKeydown,true);window.removeEventListener("keypress",GLFW.onKeyPress,true);window.removeEventListener("keyup",GLFW.onKeyup,true);window.removeEventListener("blur",GLFW.onBlur,true);Module["canvas"].removeEventListener("mousemove",GLFW.onMousemove,true);Module["canvas"].removeEventListener("mousedown",GLFW.onMouseButtonDown,true);Module["canvas"].removeEventListener("mouseup",GLFW.onMouseButtonUp,true);Module["canvas"].removeEventListener("wheel",GLFW.onMouseWheel,true);Module["canvas"].removeEventListener("mousewheel",GLFW.onMouseWheel,true);Module["canvas"].removeEventListener("mouseenter",GLFW.onMouseenter,true);Module["canvas"].removeEventListener("mouseleave",GLFW.onMouseleave,true);Module["canvas"].removeEventListener("drop",GLFW.onDrop,true);Module["canvas"].removeEventListener("dragover",GLFW.onDragover,true);Module["canvas"].width=Module["canvas"].height=1;GLFW.windows=null;GLFW.active=null}function _llvm_log10_f32(x){return Math.log(x)/Math.LN10}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort("trap!")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _pthread_cond_wait(){return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7},"%U":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"},"%V":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},"%w":function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()},"%W":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}FS.staticInit();Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}var GLctx;GL.init();for(var i=0;i<32;i++)__tempFixedLengthArray.push(new Array(i));Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){err("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.");Module["requestFullScreen"]=Module["requestFullscreen"];Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module["requestFullscreen"]=function Module_requestFullscreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullscreen(lockPointer,resizeCanvas,vrDevice)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else if(typeof performance==="object"&&performance&&typeof performance["now"]==="function"){_emscripten_get_now=function(){return performance["now"]()}}else{_emscripten_get_now=Date.now}var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmGlobalArg={};var asmLibraryArg={"abort":abort,"setTempRet0":setTempRet0,"getTempRet0":getTempRet0,"___cxa_begin_catch":___cxa_begin_catch,"___cxa_find_matching_catch":___cxa_find_matching_catch,"___cxa_free_exception":___cxa_free_exception,"___cxa_pure_virtual":___cxa_pure_virtual,"___cxa_uncaught_exception":___cxa_uncaught_exception,"___gxx_personality_v0":___gxx_personality_v0,"___lock":___lock,"___map_file":___map_file,"___resumeException":___resumeException,"___setErrNo":___setErrNo,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"___syscall221":___syscall221,"___syscall5":___syscall5,"___syscall54":___syscall54,"___syscall6":___syscall6,"___syscall91":___syscall91,"___unlock":___unlock,"__addDays":__addDays,"__arraySum":__arraySum,"__computeUnpackAlignedImageSize":__computeUnpackAlignedImageSize,"__findCanvasEventTarget":__findCanvasEventTarget,"__findEventTarget":__findEventTarget,"__glGenObject":__glGenObject,"__isLeapYear":__isLeapYear,"_abort":_abort,"_emscripten_get_canvas_element_size":_emscripten_get_canvas_element_size,"_emscripten_get_heap_size":_emscripten_get_heap_size,"_emscripten_get_now":_emscripten_get_now,"_emscripten_glActiveTexture":_emscripten_glActiveTexture,"_emscripten_glAttachShader":_emscripten_glAttachShader,"_emscripten_glBeginQueryEXT":_emscripten_glBeginQueryEXT,"_emscripten_glBindAttribLocation":_emscripten_glBindAttribLocation,"_emscripten_glBindBuffer":_emscripten_glBindBuffer,"_emscripten_glBindFramebuffer":_emscripten_glBindFramebuffer,"_emscripten_glBindRenderbuffer":_emscripten_glBindRenderbuffer,"_emscripten_glBindTexture":_emscripten_glBindTexture,"_emscripten_glBindVertexArrayOES":_emscripten_glBindVertexArrayOES,"_emscripten_glBlendColor":_emscripten_glBlendColor,"_emscripten_glBlendEquation":_emscripten_glBlendEquation,"_emscripten_glBlendEquationSeparate":_emscripten_glBlendEquationSeparate,"_emscripten_glBlendFunc":_emscripten_glBlendFunc,"_emscripten_glBlendFuncSeparate":_emscripten_glBlendFuncSeparate,"_emscripten_glBufferData":_emscripten_glBufferData,"_emscripten_glBufferSubData":_emscripten_glBufferSubData,"_emscripten_glCheckFramebufferStatus":_emscripten_glCheckFramebufferStatus,"_emscripten_glClear":_emscripten_glClear,"_emscripten_glClearColor":_emscripten_glClearColor,"_emscripten_glClearDepthf":_emscripten_glClearDepthf,"_emscripten_glClearStencil":_emscripten_glClearStencil,"_emscripten_glColorMask":_emscripten_glColorMask,"_emscripten_glCompileShader":_emscripten_glCompileShader,"_emscripten_glCompressedTexImage2D":_emscripten_glCompressedTexImage2D,"_emscripten_glCompressedTexSubImage2D":_emscripten_glCompressedTexSubImage2D,"_emscripten_glCopyTexImage2D":_emscripten_glCopyTexImage2D,"_emscripten_glCopyTexSubImage2D":_emscripten_glCopyTexSubImage2D,"_emscripten_glCreateProgram":_emscripten_glCreateProgram,"_emscripten_glCreateShader":_emscripten_glCreateShader,"_emscripten_glCullFace":_emscripten_glCullFace,"_emscripten_glDeleteBuffers":_emscripten_glDeleteBuffers,"_emscripten_glDeleteFramebuffers":_emscripten_glDeleteFramebuffers,"_emscripten_glDeleteProgram":_emscripten_glDeleteProgram,"_emscripten_glDeleteQueriesEXT":_emscripten_glDeleteQueriesEXT,"_emscripten_glDeleteRenderbuffers":_emscripten_glDeleteRenderbuffers,"_emscripten_glDeleteShader":_emscripten_glDeleteShader,"_emscripten_glDeleteTextures":_emscripten_glDeleteTextures,"_emscripten_glDeleteVertexArraysOES":_emscripten_glDeleteVertexArraysOES,"_emscripten_glDepthFunc":_emscripten_glDepthFunc,"_emscripten_glDepthMask":_emscripten_glDepthMask,"_emscripten_glDepthRangef":_emscripten_glDepthRangef,"_emscripten_glDetachShader":_emscripten_glDetachShader,"_emscripten_glDisable":_emscripten_glDisable,"_emscripten_glDisableVertexAttribArray":_emscripten_glDisableVertexAttribArray,"_emscripten_glDrawArrays":_emscripten_glDrawArrays,"_emscripten_glDrawArraysInstancedANGLE":_emscripten_glDrawArraysInstancedANGLE,"_emscripten_glDrawBuffersWEBGL":_emscripten_glDrawBuffersWEBGL,"_emscripten_glDrawElements":_emscripten_glDrawElements,"_emscripten_glDrawElementsInstancedANGLE":_emscripten_glDrawElementsInstancedANGLE,"_emscripten_glEnable":_emscripten_glEnable,"_emscripten_glEnableVertexAttribArray":_emscripten_glEnableVertexAttribArray,"_emscripten_glEndQueryEXT":_emscripten_glEndQueryEXT,"_emscripten_glFinish":_emscripten_glFinish,"_emscripten_glFlush":_emscripten_glFlush,"_emscripten_glFramebufferRenderbuffer":_emscripten_glFramebufferRenderbuffer,"_emscripten_glFramebufferTexture2D":_emscripten_glFramebufferTexture2D,"_emscripten_glFrontFace":_emscripten_glFrontFace,"_emscripten_glGenBuffers":_emscripten_glGenBuffers,"_emscripten_glGenFramebuffers":_emscripten_glGenFramebuffers,"_emscripten_glGenQueriesEXT":_emscripten_glGenQueriesEXT,"_emscripten_glGenRenderbuffers":_emscripten_glGenRenderbuffers,"_emscripten_glGenTextures":_emscripten_glGenTextures,"_emscripten_glGenVertexArraysOES":_emscripten_glGenVertexArraysOES,"_emscripten_glGenerateMipmap":_emscripten_glGenerateMipmap,"_emscripten_glGetActiveAttrib":_emscripten_glGetActiveAttrib,"_emscripten_glGetActiveUniform":_emscripten_glGetActiveUniform,"_emscripten_glGetAttachedShaders":_emscripten_glGetAttachedShaders,"_emscripten_glGetAttribLocation":_emscripten_glGetAttribLocation,"_emscripten_glGetBooleanv":_emscripten_glGetBooleanv,"_emscripten_glGetBufferParameteriv":_emscripten_glGetBufferParameteriv,"_emscripten_glGetError":_emscripten_glGetError,"_emscripten_glGetFloatv":_emscripten_glGetFloatv,"_emscripten_glGetFramebufferAttachmentParameteriv":_emscripten_glGetFramebufferAttachmentParameteriv,"_emscripten_glGetIntegerv":_emscripten_glGetIntegerv,"_emscripten_glGetProgramInfoLog":_emscripten_glGetProgramInfoLog,"_emscripten_glGetProgramiv":_emscripten_glGetProgramiv,"_emscripten_glGetQueryObjecti64vEXT":_emscripten_glGetQueryObjecti64vEXT,"_emscripten_glGetQueryObjectivEXT":_emscripten_glGetQueryObjectivEXT,"_emscripten_glGetQueryObjectui64vEXT":_emscripten_glGetQueryObjectui64vEXT,"_emscripten_glGetQueryObjectuivEXT":_emscripten_glGetQueryObjectuivEXT,"_emscripten_glGetQueryivEXT":_emscripten_glGetQueryivEXT,"_emscripten_glGetRenderbufferParameteriv":_emscripten_glGetRenderbufferParameteriv,"_emscripten_glGetShaderInfoLog":_emscripten_glGetShaderInfoLog,"_emscripten_glGetShaderPrecisionFormat":_emscripten_glGetShaderPrecisionFormat,"_emscripten_glGetShaderSource":_emscripten_glGetShaderSource,"_emscripten_glGetShaderiv":_emscripten_glGetShaderiv,"_emscripten_glGetString":_emscripten_glGetString,"_emscripten_glGetTexParameterfv":_emscripten_glGetTexParameterfv,"_emscripten_glGetTexParameteriv":_emscripten_glGetTexParameteriv,"_emscripten_glGetUniformLocation":_emscripten_glGetUniformLocation,"_emscripten_glGetUniformfv":_emscripten_glGetUniformfv,"_emscripten_glGetUniformiv":_emscripten_glGetUniformiv,"_emscripten_glGetVertexAttribPointerv":_emscripten_glGetVertexAttribPointerv,"_emscripten_glGetVertexAttribfv":_emscripten_glGetVertexAttribfv,"_emscripten_glGetVertexAttribiv":_emscripten_glGetVertexAttribiv,"_emscripten_glHint":_emscripten_glHint,"_emscripten_glIsBuffer":_emscripten_glIsBuffer,"_emscripten_glIsEnabled":_emscripten_glIsEnabled,"_emscripten_glIsFramebuffer":_emscripten_glIsFramebuffer,"_emscripten_glIsProgram":_emscripten_glIsProgram,"_emscripten_glIsQueryEXT":_emscripten_glIsQueryEXT,"_emscripten_glIsRenderbuffer":_emscripten_glIsRenderbuffer,"_emscripten_glIsShader":_emscripten_glIsShader,"_emscripten_glIsTexture":_emscripten_glIsTexture,"_emscripten_glIsVertexArrayOES":_emscripten_glIsVertexArrayOES,"_emscripten_glLineWidth":_emscripten_glLineWidth,"_emscripten_glLinkProgram":_emscripten_glLinkProgram,"_emscripten_glPixelStorei":_emscripten_glPixelStorei,"_emscripten_glPolygonOffset":_emscripten_glPolygonOffset,"_emscripten_glQueryCounterEXT":_emscripten_glQueryCounterEXT,"_emscripten_glReadPixels":_emscripten_glReadPixels,"_emscripten_glReleaseShaderCompiler":_emscripten_glReleaseShaderCompiler,"_emscripten_glRenderbufferStorage":_emscripten_glRenderbufferStorage,"_emscripten_glSampleCoverage":_emscripten_glSampleCoverage,"_emscripten_glScissor":_emscripten_glScissor,"_emscripten_glShaderBinary":_emscripten_glShaderBinary,"_emscripten_glShaderSource":_emscripten_glShaderSource,"_emscripten_glStencilFunc":_emscripten_glStencilFunc,"_emscripten_glStencilFuncSeparate":_emscripten_glStencilFuncSeparate,"_emscripten_glStencilMask":_emscripten_glStencilMask,"_emscripten_glStencilMaskSeparate":_emscripten_glStencilMaskSeparate,"_emscripten_glStencilOp":_emscripten_glStencilOp,"_emscripten_glStencilOpSeparate":_emscripten_glStencilOpSeparate,"_emscripten_glTexImage2D":_emscripten_glTexImage2D,"_emscripten_glTexParameterf":_emscripten_glTexParameterf,"_emscripten_glTexParameterfv":_emscripten_glTexParameterfv,"_emscripten_glTexParameteri":_emscripten_glTexParameteri,"_emscripten_glTexParameteriv":_emscripten_glTexParameteriv,"_emscripten_glTexSubImage2D":_emscripten_glTexSubImage2D,"_emscripten_glUniform1f":_emscripten_glUniform1f,"_emscripten_glUniform1fv":_emscripten_glUniform1fv,"_emscripten_glUniform1i":_emscripten_glUniform1i,"_emscripten_glUniform1iv":_emscripten_glUniform1iv,"_emscripten_glUniform2f":_emscripten_glUniform2f,"_emscripten_glUniform2fv":_emscripten_glUniform2fv,"_emscripten_glUniform2i":_emscripten_glUniform2i,"_emscripten_glUniform2iv":_emscripten_glUniform2iv,"_emscripten_glUniform3f":_emscripten_glUniform3f,"_emscripten_glUniform3fv":_emscripten_glUniform3fv,"_emscripten_glUniform3i":_emscripten_glUniform3i,"_emscripten_glUniform3iv":_emscripten_glUniform3iv,"_emscripten_glUniform4f":_emscripten_glUniform4f,"_emscripten_glUniform4fv":_emscripten_glUniform4fv,"_emscripten_glUniform4i":_emscripten_glUniform4i,"_emscripten_glUniform4iv":_emscripten_glUniform4iv,"_emscripten_glUniformMatrix2fv":_emscripten_glUniformMatrix2fv,"_emscripten_glUniformMatrix3fv":_emscripten_glUniformMatrix3fv,"_emscripten_glUniformMatrix4fv":_emscripten_glUniformMatrix4fv,"_emscripten_glUseProgram":_emscripten_glUseProgram,"_emscripten_glValidateProgram":_emscripten_glValidateProgram,"_emscripten_glVertexAttrib1f":_emscripten_glVertexAttrib1f,"_emscripten_glVertexAttrib1fv":_emscripten_glVertexAttrib1fv,"_emscripten_glVertexAttrib2f":_emscripten_glVertexAttrib2f,"_emscripten_glVertexAttrib2fv":_emscripten_glVertexAttrib2fv,"_emscripten_glVertexAttrib3f":_emscripten_glVertexAttrib3f,"_emscripten_glVertexAttrib3fv":_emscripten_glVertexAttrib3fv,"_emscripten_glVertexAttrib4f":_emscripten_glVertexAttrib4f,"_emscripten_glVertexAttrib4fv":_emscripten_glVertexAttrib4fv,"_emscripten_glVertexAttribDivisorANGLE":_emscripten_glVertexAttribDivisorANGLE,"_emscripten_glVertexAttribPointer":_emscripten_glVertexAttribPointer,"_emscripten_glViewport":_emscripten_glViewport,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_emscripten_resize_heap":_emscripten_resize_heap,"_emscripten_set_main_loop":_emscripten_set_main_loop,"_emscripten_set_main_loop_arg":_emscripten_set_main_loop_arg,"_emscripten_set_main_loop_timing":_emscripten_set_main_loop_timing,"_getenv":_getenv,"_glAttachShader":_glAttachShader,"_glBindBuffer":_glBindBuffer,"_glBindTexture":_glBindTexture,"_glBlendFunc":_glBlendFunc,"_glBufferData":_glBufferData,"_glBufferSubData":_glBufferSubData,"_glClear":_glClear,"_glClearColor":_glClearColor,"_glClearDepth":_glClearDepth,"_glCompileShader":_glCompileShader,"_glCreateProgram":_glCreateProgram,"_glCreateShader":_glCreateShader,"_glCullFace":_glCullFace,"_glDeleteBuffers":_glDeleteBuffers,"_glDeleteProgram":_glDeleteProgram,"_glDeleteShader":_glDeleteShader,"_glDeleteTextures":_glDeleteTextures,"_glDepthFunc":_glDepthFunc,"_glDepthMask":_glDepthMask,"_glDetachShader":_glDetachShader,"_glDisable":_glDisable,"_glDisableVertexAttribArray":_glDisableVertexAttribArray,"_glDrawArrays":_glDrawArrays,"_glDrawElements":_glDrawElements,"_glEnable":_glEnable,"_glEnableVertexAttribArray":_glEnableVertexAttribArray,"_glGenBuffers":_glGenBuffers,"_glGenTextures":_glGenTextures,"_glGetAttribLocation":_glGetAttribLocation,"_glGetError":_glGetError,"_glGetIntegerv":_glGetIntegerv,"_glGetProgramInfoLog":_glGetProgramInfoLog,"_glGetProgramiv":_glGetProgramiv,"_glGetShaderInfoLog":_glGetShaderInfoLog,"_glGetShaderiv":_glGetShaderiv,"_glGetString":_glGetString,"_glGetUniformLocation":_glGetUniformLocation,"_glLinkProgram":_glLinkProgram,"_glPixelStorei":_glPixelStorei,"_glShaderSource":_glShaderSource,"_glTexImage2D":_glTexImage2D,"_glTexParameteri":_glTexParameteri,"_glUniform1i":_glUniform1i,"_glUniformMatrix4fv":_glUniformMatrix4fv,"_glUseProgram":_glUseProgram,"_glVertexAttribPointer":_glVertexAttribPointer,"_glViewport":_glViewport,"_glfwExtensionSupported":_glfwExtensionSupported,"_glfwGetKey":_glfwGetKey,"_glfwGetMouseButton":_glfwGetMouseButton,"_glfwGetMousePos":_glfwGetMousePos,"_glfwGetMouseWheel":_glfwGetMouseWheel,"_glfwGetProcAddress":_glfwGetProcAddress,"_glfwGetTime":_glfwGetTime,"_glfwGetWindowParam":_glfwGetWindowParam,"_glfwInit":_glfwInit,"_glfwOpenWindow":_glfwOpenWindow,"_glfwOpenWindowHint":_glfwOpenWindowHint,"_glfwSetWindowCloseCallback":_glfwSetWindowCloseCallback,"_glfwSetWindowSize":_glfwSetWindowSize,"_glfwSetWindowSizeCallback":_glfwSetWindowSizeCallback,"_glfwSwapBuffers":_glfwSwapBuffers,"_glfwSwapInterval":_glfwSwapInterval,"_glfwTerminate":_glfwTerminate,"_llvm_log10_f32":_llvm_log10_f32,"_llvm_stackrestore":_llvm_stackrestore,"_llvm_stacksave":_llvm_stacksave,"_llvm_trap":_llvm_trap,"_pthread_cond_wait":_pthread_cond_wait,"_strftime":_strftime,"_strftime_l":_strftime_l,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"emscriptenWebGLGet":emscriptenWebGLGet,"emscriptenWebGLGetTexPixelData":emscriptenWebGLGetTexPixelData,"emscriptenWebGLGetUniform":emscriptenWebGLGetUniform,"emscriptenWebGLGetVertexAttrib":emscriptenWebGLGetVertexAttrib,"stringToNewUTF8":stringToNewUTF8,"tempDoublePtr":tempDoublePtr,"DYNAMICTOP_PTR":DYNAMICTOP_PTR};var asm=Module["asm"](asmGlobalArg,asmLibraryArg,buffer);Module["asm"]=asm;var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=function(){return Module["asm"]["__ZSt18uncaught_exceptionv"].apply(null,arguments)};var ___cxa_can_catch=Module["___cxa_can_catch"]=function(){return Module["asm"]["___cxa_can_catch"].apply(null,arguments)};var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=function(){return Module["asm"]["___cxa_is_pointer_type"].apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){return Module["asm"]["___errno_location"].apply(null,arguments)};var _emscripten_GetProcAddress=Module["_emscripten_GetProcAddress"]=function(){return Module["asm"]["_emscripten_GetProcAddress"].apply(null,arguments)};var _free=Module["_free"]=function(){return Module["asm"]["_free"].apply(null,arguments)};var _llvm_bswap_i16=Module["_llvm_bswap_i16"]=function(){return Module["asm"]["_llvm_bswap_i16"].apply(null,arguments)};var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=function(){return Module["asm"]["_llvm_bswap_i32"].apply(null,arguments)};var _main=Module["_main"]=function(){return Module["asm"]["_main"].apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return Module["asm"]["_malloc"].apply(null,arguments)};var _memcpy=Module["_memcpy"]=function(){return Module["asm"]["_memcpy"].apply(null,arguments)};var _memmove=Module["_memmove"]=function(){return Module["asm"]["_memmove"].apply(null,arguments)};var _memset=Module["_memset"]=function(){return Module["asm"]["_memset"].apply(null,arguments)};var _pthread_cond_broadcast=Module["_pthread_cond_broadcast"]=function(){return Module["asm"]["_pthread_cond_broadcast"].apply(null,arguments)};var _sbrk=Module["_sbrk"]=function(){return Module["asm"]["_sbrk"].apply(null,arguments)};var _strstr=Module["_strstr"]=function(){return Module["asm"]["_strstr"].apply(null,arguments)};var establishStackSpace=Module["establishStackSpace"]=function(){return Module["asm"]["establishStackSpace"].apply(null,arguments)};var globalCtors=Module["globalCtors"]=function(){return Module["asm"]["globalCtors"].apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return Module["asm"]["stackAlloc"].apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return Module["asm"]["stackRestore"].apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return Module["asm"]["stackSave"].apply(null,arguments)};var dynCall_i=Module["dynCall_i"]=function(){return Module["asm"]["dynCall_i"].apply(null,arguments)};var dynCall_ii=Module["dynCall_ii"]=function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)};var dynCall_iidiiii=Module["dynCall_iidiiii"]=function(){return Module["asm"]["dynCall_iidiiii"].apply(null,arguments)};var dynCall_iiff=Module["dynCall_iiff"]=function(){return Module["asm"]["dynCall_iiff"].apply(null,arguments)};var dynCall_iifii=Module["dynCall_iifii"]=function(){return Module["asm"]["dynCall_iifii"].apply(null,arguments)};var dynCall_iii=Module["dynCall_iii"]=function(){return Module["asm"]["dynCall_iii"].apply(null,arguments)};var dynCall_iiif=Module["dynCall_iiif"]=function(){return Module["asm"]["dynCall_iiif"].apply(null,arguments)};var dynCall_iiiffifi=Module["dynCall_iiiffifi"]=function(){return Module["asm"]["dynCall_iiiffifi"].apply(null,arguments)};var dynCall_iiii=Module["dynCall_iiii"]=function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)};var dynCall_iiiii=Module["dynCall_iiiii"]=function(){return Module["asm"]["dynCall_iiiii"].apply(null,arguments)};var dynCall_iiiiid=Module["dynCall_iiiiid"]=function(){return Module["asm"]["dynCall_iiiiid"].apply(null,arguments)};var dynCall_iiiiii=Module["dynCall_iiiiii"]=function(){return Module["asm"]["dynCall_iiiiii"].apply(null,arguments)};var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=function(){return Module["asm"]["dynCall_iiiiiid"].apply(null,arguments)};var dynCall_iiiiiifi=Module["dynCall_iiiiiifi"]=function(){return Module["asm"]["dynCall_iiiiiifi"].apply(null,arguments)};var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=function(){return Module["asm"]["dynCall_iiiiiii"].apply(null,arguments)};var dynCall_iiiiiiifii=Module["dynCall_iiiiiiifii"]=function(){return Module["asm"]["dynCall_iiiiiiifii"].apply(null,arguments)};var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=function(){return Module["asm"]["dynCall_iiiiiiii"].apply(null,arguments)};var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=function(){return Module["asm"]["dynCall_iiiiiiiii"].apply(null,arguments)};var dynCall_iiiiiiiiiiifii=Module["dynCall_iiiiiiiiiiifii"]=function(){return Module["asm"]["dynCall_iiiiiiiiiiifii"].apply(null,arguments)};var dynCall_iiiiij=Module["dynCall_iiiiij"]=function(){return Module["asm"]["dynCall_iiiiij"].apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){return Module["asm"]["dynCall_jiji"].apply(null,arguments)};var dynCall_v=Module["dynCall_v"]=function(){return Module["asm"]["dynCall_v"].apply(null,arguments)};var dynCall_vf=Module["dynCall_vf"]=function(){return Module["asm"]["dynCall_vf"].apply(null,arguments)};var dynCall_vff=Module["dynCall_vff"]=function(){return Module["asm"]["dynCall_vff"].apply(null,arguments)};var dynCall_vffff=Module["dynCall_vffff"]=function(){return Module["asm"]["dynCall_vffff"].apply(null,arguments)};var dynCall_vfi=Module["dynCall_vfi"]=function(){return Module["asm"]["dynCall_vfi"].apply(null,arguments)};var dynCall_vi=Module["dynCall_vi"]=function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)};var dynCall_vif=Module["dynCall_vif"]=function(){return Module["asm"]["dynCall_vif"].apply(null,arguments)};var dynCall_viff=Module["dynCall_viff"]=function(){return Module["asm"]["dynCall_viff"].apply(null,arguments)};var dynCall_vifff=Module["dynCall_vifff"]=function(){return Module["asm"]["dynCall_vifff"].apply(null,arguments)};var dynCall_viffff=Module["dynCall_viffff"]=function(){return Module["asm"]["dynCall_viffff"].apply(null,arguments)};var dynCall_vii=Module["dynCall_vii"]=function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)};var dynCall_viif=Module["dynCall_viif"]=function(){return Module["asm"]["dynCall_viif"].apply(null,arguments)};var dynCall_viifffiii=Module["dynCall_viifffiii"]=function(){return Module["asm"]["dynCall_viifffiii"].apply(null,arguments)};var dynCall_viii=Module["dynCall_viii"]=function(){return Module["asm"]["dynCall_viii"].apply(null,arguments)};var dynCall_viiii=Module["dynCall_viiii"]=function(){return Module["asm"]["dynCall_viiii"].apply(null,arguments)};var dynCall_viiiii=Module["dynCall_viiiii"]=function(){return Module["asm"]["dynCall_viiiii"].apply(null,arguments)};var dynCall_viiiiii=Module["dynCall_viiiiii"]=function(){return Module["asm"]["dynCall_viiiiii"].apply(null,arguments)};var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=function(){return Module["asm"]["dynCall_viiiiiii"].apply(null,arguments)};var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=function(){return Module["asm"]["dynCall_viiiiiiii"].apply(null,arguments)};var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=function(){return Module["asm"]["dynCall_viiiiiiiii"].apply(null,arguments)};var dynCall_viijii=Module["dynCall_viijii"]=function(){return Module["asm"]["dynCall_viijii"].apply(null,arguments)};Module["asm"]=asm;Module["getMemory"]=getMemory;Module["addRunDependency"]=addRunDependency;Module["removeRunDependency"]=removeRunDependency;Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;Module["FS_unlink"]=FS.unlink;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;var argv=stackAlloc((argc+1)*4);HEAP32[argv>>2]=allocateUTF8OnStack(Module["thisProgram"]);for(var i=1;i<argc;i++){HEAP32[(argv>>2)+i]=allocateUTF8OnStack(args[i-1])}HEAP32[(argv>>2)+argc]=0;try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{var toLog=e;if(e&&typeof e==="object"&&e.stack){toLog=[e,e.stack]}err("exception thrown: "+toLog);Module["quit"](1,e)}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;exitRuntime();if(Module["onExit"])Module["onExit"](status)}Module["quit"](status,new ExitStatus(status))}function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info."}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run();
